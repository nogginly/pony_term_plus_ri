{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Packages termax","title":"termax"},{"location":"termax--index/","text":"No package doc string provided for termax. Public Types \u00b6 interface TerminalNotify actor Terminal trait TerminalTextFormatting primitive TermText class TermOptions trait TerminalEscapeCodes primitive Term trait GridChars primitive SingleSolidLine primitive SingleDashedLine primitive DoubleSolidLine primitive FillPattern trait TerminalDrawing primitive TermDraw primitive LeftMouseButton primitive MiddleMouseButton primitive RightMouseButton primitive UnknownMouseButton type KnownMouseButton type MouseButton primitive ScrollUp primitive ScrollDown type ScrollDirection primitive Key primitive EraseBefore primitive EraseAfter primitive EraseAll type EraseLine type EraseDisplay primitive EasyTerminal primitive ANSI type ANSITerm interface ANSINotify","title":"Package"},{"location":"termax--index/#public-types","text":"interface TerminalNotify actor Terminal trait TerminalTextFormatting primitive TermText class TermOptions trait TerminalEscapeCodes primitive Term trait GridChars primitive SingleSolidLine primitive SingleDashedLine primitive DoubleSolidLine primitive FillPattern trait TerminalDrawing primitive TermDraw primitive LeftMouseButton primitive MiddleMouseButton primitive RightMouseButton primitive UnknownMouseButton type KnownMouseButton type MouseButton primitive ScrollUp primitive ScrollDown type ScrollDirection primitive Key primitive EraseBefore primitive EraseAfter primitive EraseAll type EraseLine type EraseDisplay primitive EasyTerminal primitive ANSI type ANSITerm interface ANSINotify","title":"Public Types"},{"location":"termax-ANSI/","text":"ANSI \u00b6 [Source] primitive val ANSI is TerminalEscapeCodes ref Implements \u00b6 TerminalEscapeCodes ref Constructors \u00b6 create \u00b6 [Source] new val create() : ANSI val^ Returns \u00b6 ANSI val^ Public Functions \u00b6 up \u00b6 [Source] fun box up( n: U32 val = 0) : String val Parameters \u00b6 n: U32 val = 0 Returns \u00b6 String val down \u00b6 [Source] fun box down( n: U32 val = 0) : String val Parameters \u00b6 n: U32 val = 0 Returns \u00b6 String val right \u00b6 [Source] fun box right( n: U32 val = 0) : String val Parameters \u00b6 n: U32 val = 0 Returns \u00b6 String val left \u00b6 [Source] fun box left( n: U32 val = 0) : String val Parameters \u00b6 n: U32 val = 0 Returns \u00b6 String val cursor \u00b6 [Source] fun box cursor( x: U32 val = 0, y: U32 val = 0) : String val Parameters \u00b6 x: U32 val = 0 y: U32 val = 0 Returns \u00b6 String val clear \u00b6 [Source] fun box clear( how_much: (EraseBefore val | EraseAfter val | EraseAll val) = reference) : String val Parameters \u00b6 how_much: ( EraseBefore val | EraseAfter val | EraseAll val) = reference Returns \u00b6 String val erase \u00b6 [Source] fun box erase( how_much: (EraseBefore val | EraseAfter val | EraseAll val) = reference) : String val Parameters \u00b6 how_much: ( EraseBefore val | EraseAfter val | EraseAll val) = reference Returns \u00b6 String val reset \u00b6 [Source] fun box reset() : String val Returns \u00b6 String val bold \u00b6 [Source] fun box bold( state: Bool val = true) : String val Parameters \u00b6 state: Bool val = true Returns \u00b6 String val underline \u00b6 [Source] fun box underline( state: Bool val = true) : String val Parameters \u00b6 state: Bool val = true Returns \u00b6 String val blink \u00b6 [Source] fun box blink( state: Bool val = true) : String val Parameters \u00b6 state: Bool val = true Returns \u00b6 String val reverse \u00b6 [Source] fun box reverse( state: Bool val = true) : String val Parameters \u00b6 state: Bool val = true Returns \u00b6 String val black \u00b6 [Source] fun box black() : String val Returns \u00b6 String val red \u00b6 [Source] fun box red() : String val Returns \u00b6 String val green \u00b6 [Source] fun box green() : String val Returns \u00b6 String val yellow \u00b6 [Source] fun box yellow() : String val Returns \u00b6 String val blue \u00b6 [Source] fun box blue() : String val Returns \u00b6 String val magenta \u00b6 [Source] fun box magenta() : String val Returns \u00b6 String val cyan \u00b6 [Source] fun box cyan() : String val Returns \u00b6 String val grey \u00b6 [Source] fun box grey() : String val Returns \u00b6 String val white \u00b6 [Source] fun box white() : String val Returns \u00b6 String val bright_red \u00b6 [Source] fun box bright_red() : String val Returns \u00b6 String val bright_green \u00b6 [Source] fun box bright_green() : String val Returns \u00b6 String val bright_yellow \u00b6 [Source] fun box bright_yellow() : String val Returns \u00b6 String val bright_blue \u00b6 [Source] fun box bright_blue() : String val Returns \u00b6 String val bright_magenta \u00b6 [Source] fun box bright_magenta() : String val Returns \u00b6 String val bright_cyan \u00b6 [Source] fun box bright_cyan() : String val Returns \u00b6 String val bright_grey \u00b6 [Source] fun box bright_grey() : String val Returns \u00b6 String val black_bg \u00b6 [Source] fun box black_bg() : String val Returns \u00b6 String val red_bg \u00b6 [Source] fun box red_bg() : String val Returns \u00b6 String val green_bg \u00b6 [Source] fun box green_bg() : String val Returns \u00b6 String val yellow_bg \u00b6 [Source] fun box yellow_bg() : String val Returns \u00b6 String val blue_bg \u00b6 [Source] fun box blue_bg() : String val Returns \u00b6 String val magenta_bg \u00b6 [Source] fun box magenta_bg() : String val Returns \u00b6 String val cyan_bg \u00b6 [Source] fun box cyan_bg() : String val Returns \u00b6 String val grey_bg \u00b6 [Source] fun box grey_bg() : String val Returns \u00b6 String val white_bg \u00b6 [Source] fun box white_bg() : String val Returns \u00b6 String val bright_red_bg \u00b6 [Source] fun box bright_red_bg() : String val Returns \u00b6 String val bright_green_bg \u00b6 [Source] fun box bright_green_bg() : String val Returns \u00b6 String val bright_yellow_bg \u00b6 [Source] fun box bright_yellow_bg() : String val Returns \u00b6 String val bright_blue_bg \u00b6 [Source] fun box bright_blue_bg() : String val Returns \u00b6 String val bright_magenta_bg \u00b6 [Source] fun box bright_magenta_bg() : String val Returns \u00b6 String val bright_cyan_bg \u00b6 [Source] fun box bright_cyan_bg() : String val Returns \u00b6 String val bright_grey_bg \u00b6 [Source] fun box bright_grey_bg() : String val Returns \u00b6 String val cursor_save \u00b6 [Source] fun box cursor_save() : String val Returns \u00b6 String val cursor_restore \u00b6 [Source] fun box cursor_restore() : String val Returns \u00b6 String val cursor_hide \u00b6 [Source] fun box cursor_hide() : String val Returns \u00b6 String val cursor_show \u00b6 [Source] fun box cursor_show() : String val Returns \u00b6 String val switch_to_alt_screen \u00b6 [Source] fun box switch_to_alt_screen() : String val Returns \u00b6 String val switch_to_normal_screen \u00b6 [Source] fun box switch_to_normal_screen() : String val Returns \u00b6 String val mouse_enable \u00b6 [Source] fun box mouse_enable() : String val Returns \u00b6 String val mouse_disable \u00b6 [Source] fun box mouse_disable() : String val Returns \u00b6 String val reset_color \u00b6 [Source] fun box reset_color() : String val Returns \u00b6 String val reset_color_bg \u00b6 [Source] fun box reset_color_bg() : String val Returns \u00b6 String val color \u00b6 [Source] fun box color( fg: U8 val) : String val Parameters \u00b6 fg: U8 val Returns \u00b6 String val color_bg \u00b6 [Source] fun box color_bg( bg: U8 val) : String val Parameters \u00b6 bg: U8 val Returns \u00b6 String val faint \u00b6 [Source] fun box faint( state: Bool val = true) : String val Parameters \u00b6 state: Bool val = true Returns \u00b6 String val italics \u00b6 [Source] fun box italics( state: Bool val = true) : String val Parameters \u00b6 state: Bool val = true Returns \u00b6 String val invert \u00b6 [Source] fun box invert( state: Bool val = true) : String val Parameters \u00b6 state: Bool val = true Returns \u00b6 String val conceal \u00b6 [Source] fun box conceal( state: Bool val = true) : String val Parameters \u00b6 state: Bool val = true Returns \u00b6 String val strikeout \u00b6 [Source] fun box strikeout( state: Bool val = true) : String val Parameters \u00b6 state: Bool val = true Returns \u00b6 String val repeat_char \u00b6 [Source] fun box repeat_char( char: String val, times: U32 val) : String val Parameters \u00b6 char: String val times: U32 val Returns \u00b6 String val eq \u00b6 [Source] fun box eq( that: ANSI val) : Bool val Parameters \u00b6 that: ANSI val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ANSI val) : Bool val Parameters \u00b6 that: ANSI val Returns \u00b6 Bool val","title":"primitive ANSI"},{"location":"termax-ANSI/#ansi","text":"[Source] primitive val ANSI is TerminalEscapeCodes ref","title":"ANSI"},{"location":"termax-ANSI/#implements","text":"TerminalEscapeCodes ref","title":"Implements"},{"location":"termax-ANSI/#constructors","text":"","title":"Constructors"},{"location":"termax-ANSI/#create","text":"[Source] new val create() : ANSI val^","title":"create"},{"location":"termax-ANSI/#returns","text":"ANSI val^","title":"Returns"},{"location":"termax-ANSI/#public-functions","text":"","title":"Public Functions"},{"location":"termax-ANSI/#up","text":"[Source] fun box up( n: U32 val = 0) : String val","title":"up"},{"location":"termax-ANSI/#parameters","text":"n: U32 val = 0","title":"Parameters"},{"location":"termax-ANSI/#returns_1","text":"String val","title":"Returns"},{"location":"termax-ANSI/#down","text":"[Source] fun box down( n: U32 val = 0) : String val","title":"down"},{"location":"termax-ANSI/#parameters_1","text":"n: U32 val = 0","title":"Parameters"},{"location":"termax-ANSI/#returns_2","text":"String val","title":"Returns"},{"location":"termax-ANSI/#right","text":"[Source] fun box right( n: U32 val = 0) : String val","title":"right"},{"location":"termax-ANSI/#parameters_2","text":"n: U32 val = 0","title":"Parameters"},{"location":"termax-ANSI/#returns_3","text":"String val","title":"Returns"},{"location":"termax-ANSI/#left","text":"[Source] fun box left( n: U32 val = 0) : String val","title":"left"},{"location":"termax-ANSI/#parameters_3","text":"n: U32 val = 0","title":"Parameters"},{"location":"termax-ANSI/#returns_4","text":"String val","title":"Returns"},{"location":"termax-ANSI/#cursor","text":"[Source] fun box cursor( x: U32 val = 0, y: U32 val = 0) : String val","title":"cursor"},{"location":"termax-ANSI/#parameters_4","text":"x: U32 val = 0 y: U32 val = 0","title":"Parameters"},{"location":"termax-ANSI/#returns_5","text":"String val","title":"Returns"},{"location":"termax-ANSI/#clear","text":"[Source] fun box clear( how_much: (EraseBefore val | EraseAfter val | EraseAll val) = reference) : String val","title":"clear"},{"location":"termax-ANSI/#parameters_5","text":"how_much: ( EraseBefore val | EraseAfter val | EraseAll val) = reference","title":"Parameters"},{"location":"termax-ANSI/#returns_6","text":"String val","title":"Returns"},{"location":"termax-ANSI/#erase","text":"[Source] fun box erase( how_much: (EraseBefore val | EraseAfter val | EraseAll val) = reference) : String val","title":"erase"},{"location":"termax-ANSI/#parameters_6","text":"how_much: ( EraseBefore val | EraseAfter val | EraseAll val) = reference","title":"Parameters"},{"location":"termax-ANSI/#returns_7","text":"String val","title":"Returns"},{"location":"termax-ANSI/#reset","text":"[Source] fun box reset() : String val","title":"reset"},{"location":"termax-ANSI/#returns_8","text":"String val","title":"Returns"},{"location":"termax-ANSI/#bold","text":"[Source] fun box bold( state: Bool val = true) : String val","title":"bold"},{"location":"termax-ANSI/#parameters_7","text":"state: Bool val = true","title":"Parameters"},{"location":"termax-ANSI/#returns_9","text":"String val","title":"Returns"},{"location":"termax-ANSI/#underline","text":"[Source] fun box underline( state: Bool val = true) : String val","title":"underline"},{"location":"termax-ANSI/#parameters_8","text":"state: Bool val = true","title":"Parameters"},{"location":"termax-ANSI/#returns_10","text":"String val","title":"Returns"},{"location":"termax-ANSI/#blink","text":"[Source] fun box blink( state: Bool val = true) : String val","title":"blink"},{"location":"termax-ANSI/#parameters_9","text":"state: Bool val = true","title":"Parameters"},{"location":"termax-ANSI/#returns_11","text":"String val","title":"Returns"},{"location":"termax-ANSI/#reverse","text":"[Source] fun box reverse( state: Bool val = true) : String val","title":"reverse"},{"location":"termax-ANSI/#parameters_10","text":"state: Bool val = true","title":"Parameters"},{"location":"termax-ANSI/#returns_12","text":"String val","title":"Returns"},{"location":"termax-ANSI/#black","text":"[Source] fun box black() : String val","title":"black"},{"location":"termax-ANSI/#returns_13","text":"String val","title":"Returns"},{"location":"termax-ANSI/#red","text":"[Source] fun box red() : String val","title":"red"},{"location":"termax-ANSI/#returns_14","text":"String val","title":"Returns"},{"location":"termax-ANSI/#green","text":"[Source] fun box green() : String val","title":"green"},{"location":"termax-ANSI/#returns_15","text":"String val","title":"Returns"},{"location":"termax-ANSI/#yellow","text":"[Source] fun box yellow() : String val","title":"yellow"},{"location":"termax-ANSI/#returns_16","text":"String val","title":"Returns"},{"location":"termax-ANSI/#blue","text":"[Source] fun box blue() : String val","title":"blue"},{"location":"termax-ANSI/#returns_17","text":"String val","title":"Returns"},{"location":"termax-ANSI/#magenta","text":"[Source] fun box magenta() : String val","title":"magenta"},{"location":"termax-ANSI/#returns_18","text":"String val","title":"Returns"},{"location":"termax-ANSI/#cyan","text":"[Source] fun box cyan() : String val","title":"cyan"},{"location":"termax-ANSI/#returns_19","text":"String val","title":"Returns"},{"location":"termax-ANSI/#grey","text":"[Source] fun box grey() : String val","title":"grey"},{"location":"termax-ANSI/#returns_20","text":"String val","title":"Returns"},{"location":"termax-ANSI/#white","text":"[Source] fun box white() : String val","title":"white"},{"location":"termax-ANSI/#returns_21","text":"String val","title":"Returns"},{"location":"termax-ANSI/#bright_red","text":"[Source] fun box bright_red() : String val","title":"bright_red"},{"location":"termax-ANSI/#returns_22","text":"String val","title":"Returns"},{"location":"termax-ANSI/#bright_green","text":"[Source] fun box bright_green() : String val","title":"bright_green"},{"location":"termax-ANSI/#returns_23","text":"String val","title":"Returns"},{"location":"termax-ANSI/#bright_yellow","text":"[Source] fun box bright_yellow() : String val","title":"bright_yellow"},{"location":"termax-ANSI/#returns_24","text":"String val","title":"Returns"},{"location":"termax-ANSI/#bright_blue","text":"[Source] fun box bright_blue() : String val","title":"bright_blue"},{"location":"termax-ANSI/#returns_25","text":"String val","title":"Returns"},{"location":"termax-ANSI/#bright_magenta","text":"[Source] fun box bright_magenta() : String val","title":"bright_magenta"},{"location":"termax-ANSI/#returns_26","text":"String val","title":"Returns"},{"location":"termax-ANSI/#bright_cyan","text":"[Source] fun box bright_cyan() : String val","title":"bright_cyan"},{"location":"termax-ANSI/#returns_27","text":"String val","title":"Returns"},{"location":"termax-ANSI/#bright_grey","text":"[Source] fun box bright_grey() : String val","title":"bright_grey"},{"location":"termax-ANSI/#returns_28","text":"String val","title":"Returns"},{"location":"termax-ANSI/#black_bg","text":"[Source] fun box black_bg() : String val","title":"black_bg"},{"location":"termax-ANSI/#returns_29","text":"String val","title":"Returns"},{"location":"termax-ANSI/#red_bg","text":"[Source] fun box red_bg() : String val","title":"red_bg"},{"location":"termax-ANSI/#returns_30","text":"String val","title":"Returns"},{"location":"termax-ANSI/#green_bg","text":"[Source] fun box green_bg() : String val","title":"green_bg"},{"location":"termax-ANSI/#returns_31","text":"String val","title":"Returns"},{"location":"termax-ANSI/#yellow_bg","text":"[Source] fun box yellow_bg() : String val","title":"yellow_bg"},{"location":"termax-ANSI/#returns_32","text":"String val","title":"Returns"},{"location":"termax-ANSI/#blue_bg","text":"[Source] fun box blue_bg() : String val","title":"blue_bg"},{"location":"termax-ANSI/#returns_33","text":"String val","title":"Returns"},{"location":"termax-ANSI/#magenta_bg","text":"[Source] fun box magenta_bg() : String val","title":"magenta_bg"},{"location":"termax-ANSI/#returns_34","text":"String val","title":"Returns"},{"location":"termax-ANSI/#cyan_bg","text":"[Source] fun box cyan_bg() : String val","title":"cyan_bg"},{"location":"termax-ANSI/#returns_35","text":"String val","title":"Returns"},{"location":"termax-ANSI/#grey_bg","text":"[Source] fun box grey_bg() : String val","title":"grey_bg"},{"location":"termax-ANSI/#returns_36","text":"String val","title":"Returns"},{"location":"termax-ANSI/#white_bg","text":"[Source] fun box white_bg() : String val","title":"white_bg"},{"location":"termax-ANSI/#returns_37","text":"String val","title":"Returns"},{"location":"termax-ANSI/#bright_red_bg","text":"[Source] fun box bright_red_bg() : String val","title":"bright_red_bg"},{"location":"termax-ANSI/#returns_38","text":"String val","title":"Returns"},{"location":"termax-ANSI/#bright_green_bg","text":"[Source] fun box bright_green_bg() : String val","title":"bright_green_bg"},{"location":"termax-ANSI/#returns_39","text":"String val","title":"Returns"},{"location":"termax-ANSI/#bright_yellow_bg","text":"[Source] fun box bright_yellow_bg() : String val","title":"bright_yellow_bg"},{"location":"termax-ANSI/#returns_40","text":"String val","title":"Returns"},{"location":"termax-ANSI/#bright_blue_bg","text":"[Source] fun box bright_blue_bg() : String val","title":"bright_blue_bg"},{"location":"termax-ANSI/#returns_41","text":"String val","title":"Returns"},{"location":"termax-ANSI/#bright_magenta_bg","text":"[Source] fun box bright_magenta_bg() : String val","title":"bright_magenta_bg"},{"location":"termax-ANSI/#returns_42","text":"String val","title":"Returns"},{"location":"termax-ANSI/#bright_cyan_bg","text":"[Source] fun box bright_cyan_bg() : String val","title":"bright_cyan_bg"},{"location":"termax-ANSI/#returns_43","text":"String val","title":"Returns"},{"location":"termax-ANSI/#bright_grey_bg","text":"[Source] fun box bright_grey_bg() : String val","title":"bright_grey_bg"},{"location":"termax-ANSI/#returns_44","text":"String val","title":"Returns"},{"location":"termax-ANSI/#cursor_save","text":"[Source] fun box cursor_save() : String val","title":"cursor_save"},{"location":"termax-ANSI/#returns_45","text":"String val","title":"Returns"},{"location":"termax-ANSI/#cursor_restore","text":"[Source] fun box cursor_restore() : String val","title":"cursor_restore"},{"location":"termax-ANSI/#returns_46","text":"String val","title":"Returns"},{"location":"termax-ANSI/#cursor_hide","text":"[Source] fun box cursor_hide() : String val","title":"cursor_hide"},{"location":"termax-ANSI/#returns_47","text":"String val","title":"Returns"},{"location":"termax-ANSI/#cursor_show","text":"[Source] fun box cursor_show() : String val","title":"cursor_show"},{"location":"termax-ANSI/#returns_48","text":"String val","title":"Returns"},{"location":"termax-ANSI/#switch_to_alt_screen","text":"[Source] fun box switch_to_alt_screen() : String val","title":"switch_to_alt_screen"},{"location":"termax-ANSI/#returns_49","text":"String val","title":"Returns"},{"location":"termax-ANSI/#switch_to_normal_screen","text":"[Source] fun box switch_to_normal_screen() : String val","title":"switch_to_normal_screen"},{"location":"termax-ANSI/#returns_50","text":"String val","title":"Returns"},{"location":"termax-ANSI/#mouse_enable","text":"[Source] fun box mouse_enable() : String val","title":"mouse_enable"},{"location":"termax-ANSI/#returns_51","text":"String val","title":"Returns"},{"location":"termax-ANSI/#mouse_disable","text":"[Source] fun box mouse_disable() : String val","title":"mouse_disable"},{"location":"termax-ANSI/#returns_52","text":"String val","title":"Returns"},{"location":"termax-ANSI/#reset_color","text":"[Source] fun box reset_color() : String val","title":"reset_color"},{"location":"termax-ANSI/#returns_53","text":"String val","title":"Returns"},{"location":"termax-ANSI/#reset_color_bg","text":"[Source] fun box reset_color_bg() : String val","title":"reset_color_bg"},{"location":"termax-ANSI/#returns_54","text":"String val","title":"Returns"},{"location":"termax-ANSI/#color","text":"[Source] fun box color( fg: U8 val) : String val","title":"color"},{"location":"termax-ANSI/#parameters_11","text":"fg: U8 val","title":"Parameters"},{"location":"termax-ANSI/#returns_55","text":"String val","title":"Returns"},{"location":"termax-ANSI/#color_bg","text":"[Source] fun box color_bg( bg: U8 val) : String val","title":"color_bg"},{"location":"termax-ANSI/#parameters_12","text":"bg: U8 val","title":"Parameters"},{"location":"termax-ANSI/#returns_56","text":"String val","title":"Returns"},{"location":"termax-ANSI/#faint","text":"[Source] fun box faint( state: Bool val = true) : String val","title":"faint"},{"location":"termax-ANSI/#parameters_13","text":"state: Bool val = true","title":"Parameters"},{"location":"termax-ANSI/#returns_57","text":"String val","title":"Returns"},{"location":"termax-ANSI/#italics","text":"[Source] fun box italics( state: Bool val = true) : String val","title":"italics"},{"location":"termax-ANSI/#parameters_14","text":"state: Bool val = true","title":"Parameters"},{"location":"termax-ANSI/#returns_58","text":"String val","title":"Returns"},{"location":"termax-ANSI/#invert","text":"[Source] fun box invert( state: Bool val = true) : String val","title":"invert"},{"location":"termax-ANSI/#parameters_15","text":"state: Bool val = true","title":"Parameters"},{"location":"termax-ANSI/#returns_59","text":"String val","title":"Returns"},{"location":"termax-ANSI/#conceal","text":"[Source] fun box conceal( state: Bool val = true) : String val","title":"conceal"},{"location":"termax-ANSI/#parameters_16","text":"state: Bool val = true","title":"Parameters"},{"location":"termax-ANSI/#returns_60","text":"String val","title":"Returns"},{"location":"termax-ANSI/#strikeout","text":"[Source] fun box strikeout( state: Bool val = true) : String val","title":"strikeout"},{"location":"termax-ANSI/#parameters_17","text":"state: Bool val = true","title":"Parameters"},{"location":"termax-ANSI/#returns_61","text":"String val","title":"Returns"},{"location":"termax-ANSI/#repeat_char","text":"[Source] fun box repeat_char( char: String val, times: U32 val) : String val","title":"repeat_char"},{"location":"termax-ANSI/#parameters_18","text":"char: String val times: U32 val","title":"Parameters"},{"location":"termax-ANSI/#returns_62","text":"String val","title":"Returns"},{"location":"termax-ANSI/#eq","text":"[Source] fun box eq( that: ANSI val) : Bool val","title":"eq"},{"location":"termax-ANSI/#parameters_19","text":"that: ANSI val","title":"Parameters"},{"location":"termax-ANSI/#returns_63","text":"Bool val","title":"Returns"},{"location":"termax-ANSI/#ne","text":"[Source] fun box ne( that: ANSI val) : Bool val","title":"ne"},{"location":"termax-ANSI/#parameters_20","text":"that: ANSI val","title":"Parameters"},{"location":"termax-ANSI/#returns_64","text":"Bool val","title":"Returns"},{"location":"termax-ANSINotify/","text":"ANSINotify \u00b6 [Source] interface ref ANSINotify is TerminalNotify ref Implements \u00b6 TerminalNotify ref Public Functions \u00b6 apply \u00b6 [Source] fun ref apply( term: Terminal ref, input: U8 val) : None val Parameters \u00b6 term: Terminal ref input: U8 val Returns \u00b6 None val up \u00b6 [Source] fun ref up( ctrl: Bool val, alt: Bool val, shift: Bool val) : None val Parameters \u00b6 ctrl: Bool val alt: Bool val shift: Bool val Returns \u00b6 None val down \u00b6 [Source] fun ref down( ctrl: Bool val, alt: Bool val, shift: Bool val) : None val Parameters \u00b6 ctrl: Bool val alt: Bool val shift: Bool val Returns \u00b6 None val left \u00b6 [Source] fun ref left( ctrl: Bool val, alt: Bool val, shift: Bool val) : None val Parameters \u00b6 ctrl: Bool val alt: Bool val shift: Bool val Returns \u00b6 None val right \u00b6 [Source] fun ref right( ctrl: Bool val, alt: Bool val, shift: Bool val) : None val Parameters \u00b6 ctrl: Bool val alt: Bool val shift: Bool val Returns \u00b6 None val delete \u00b6 [Source] fun ref delete( ctrl: Bool val, alt: Bool val, shift: Bool val) : None val Parameters \u00b6 ctrl: Bool val alt: Bool val shift: Bool val Returns \u00b6 None val insert \u00b6 [Source] fun ref insert( ctrl: Bool val, alt: Bool val, shift: Bool val) : None val Parameters \u00b6 ctrl: Bool val alt: Bool val shift: Bool val Returns \u00b6 None val home \u00b6 [Source] fun ref home( ctrl: Bool val, alt: Bool val, shift: Bool val) : None val Parameters \u00b6 ctrl: Bool val alt: Bool val shift: Bool val Returns \u00b6 None val end_key \u00b6 [Source] fun ref end_key( ctrl: Bool val, alt: Bool val, shift: Bool val) : None val Parameters \u00b6 ctrl: Bool val alt: Bool val shift: Bool val Returns \u00b6 None val page_up \u00b6 [Source] fun ref page_up( ctrl: Bool val, alt: Bool val, shift: Bool val) : None val Parameters \u00b6 ctrl: Bool val alt: Bool val shift: Bool val Returns \u00b6 None val page_down \u00b6 [Source] fun ref page_down( ctrl: Bool val, alt: Bool val, shift: Bool val) : None val Parameters \u00b6 ctrl: Bool val alt: Bool val shift: Bool val Returns \u00b6 None val fn_key \u00b6 [Source] fun ref fn_key( i: U8 val, ctrl: Bool val, alt: Bool val, shift: Bool val) : None val Parameters \u00b6 i: U8 val ctrl: Bool val alt: Bool val shift: Bool val Returns \u00b6 None val prompt \u00b6 [Source] fun ref prompt( term: Terminal ref, value: String val) : None val Parameters \u00b6 term: Terminal ref value: String val Returns \u00b6 None val size \u00b6 [Source] fun ref size( rows: U16 val, cols: U16 val) : None val Parameters \u00b6 rows: U16 val cols: U16 val Returns \u00b6 None val closed \u00b6 [Source] fun ref closed() : None val Returns \u00b6 None val mouse_release \u00b6 [Source] fun ref mouse_release( button: (LeftMouseButton val | MiddleMouseButton val | RightMouseButton val | UnknownMouseButton val), ctrl: Bool val, alt: Bool val, shift: Bool val, x: U32 val, y: U32 val) : None val Parameters \u00b6 button: ( LeftMouseButton val | MiddleMouseButton val | RightMouseButton val | UnknownMouseButton val) ctrl: Bool val alt: Bool val shift: Bool val x: U32 val y: U32 val Returns \u00b6 None val mouse_press \u00b6 [Source] fun ref mouse_press( button: (LeftMouseButton val | MiddleMouseButton val | RightMouseButton val | UnknownMouseButton val), ctrl: Bool val, alt: Bool val, shift: Bool val, x: U32 val, y: U32 val) : None val Parameters \u00b6 button: ( LeftMouseButton val | MiddleMouseButton val | RightMouseButton val | UnknownMouseButton val) ctrl: Bool val alt: Bool val shift: Bool val x: U32 val y: U32 val Returns \u00b6 None val mouse_move \u00b6 [Source] fun ref mouse_move( ctrl: Bool val, alt: Bool val, shift: Bool val, x: U32 val, y: U32 val) : None val Parameters \u00b6 ctrl: Bool val alt: Bool val shift: Bool val x: U32 val y: U32 val Returns \u00b6 None val mouse_drag \u00b6 [Source] fun ref mouse_drag( button: (LeftMouseButton val | MiddleMouseButton val | RightMouseButton val | UnknownMouseButton val), ctrl: Bool val, alt: Bool val, shift: Bool val, x: U32 val, y: U32 val) : None val Parameters \u00b6 button: ( LeftMouseButton val | MiddleMouseButton val | RightMouseButton val | UnknownMouseButton val) ctrl: Bool val alt: Bool val shift: Bool val x: U32 val y: U32 val Returns \u00b6 None val mouse_wheel \u00b6 [Source] fun ref mouse_wheel( direction: (ScrollUp val | ScrollDown val), ctrl: Bool val, alt: Bool val, shift: Bool val, x: U32 val, y: U32 val) : None val Parameters \u00b6 direction: ( ScrollUp val | ScrollDown val) ctrl: Bool val alt: Bool val shift: Bool val x: U32 val y: U32 val Returns \u00b6 None val","title":"interface ANSINotify"},{"location":"termax-ANSINotify/#ansinotify","text":"[Source] interface ref ANSINotify is TerminalNotify ref","title":"ANSINotify"},{"location":"termax-ANSINotify/#implements","text":"TerminalNotify ref","title":"Implements"},{"location":"termax-ANSINotify/#public-functions","text":"","title":"Public Functions"},{"location":"termax-ANSINotify/#apply","text":"[Source] fun ref apply( term: Terminal ref, input: U8 val) : None val","title":"apply"},{"location":"termax-ANSINotify/#parameters","text":"term: Terminal ref input: U8 val","title":"Parameters"},{"location":"termax-ANSINotify/#returns","text":"None val","title":"Returns"},{"location":"termax-ANSINotify/#up","text":"[Source] fun ref up( ctrl: Bool val, alt: Bool val, shift: Bool val) : None val","title":"up"},{"location":"termax-ANSINotify/#parameters_1","text":"ctrl: Bool val alt: Bool val shift: Bool val","title":"Parameters"},{"location":"termax-ANSINotify/#returns_1","text":"None val","title":"Returns"},{"location":"termax-ANSINotify/#down","text":"[Source] fun ref down( ctrl: Bool val, alt: Bool val, shift: Bool val) : None val","title":"down"},{"location":"termax-ANSINotify/#parameters_2","text":"ctrl: Bool val alt: Bool val shift: Bool val","title":"Parameters"},{"location":"termax-ANSINotify/#returns_2","text":"None val","title":"Returns"},{"location":"termax-ANSINotify/#left","text":"[Source] fun ref left( ctrl: Bool val, alt: Bool val, shift: Bool val) : None val","title":"left"},{"location":"termax-ANSINotify/#parameters_3","text":"ctrl: Bool val alt: Bool val shift: Bool val","title":"Parameters"},{"location":"termax-ANSINotify/#returns_3","text":"None val","title":"Returns"},{"location":"termax-ANSINotify/#right","text":"[Source] fun ref right( ctrl: Bool val, alt: Bool val, shift: Bool val) : None val","title":"right"},{"location":"termax-ANSINotify/#parameters_4","text":"ctrl: Bool val alt: Bool val shift: Bool val","title":"Parameters"},{"location":"termax-ANSINotify/#returns_4","text":"None val","title":"Returns"},{"location":"termax-ANSINotify/#delete","text":"[Source] fun ref delete( ctrl: Bool val, alt: Bool val, shift: Bool val) : None val","title":"delete"},{"location":"termax-ANSINotify/#parameters_5","text":"ctrl: Bool val alt: Bool val shift: Bool val","title":"Parameters"},{"location":"termax-ANSINotify/#returns_5","text":"None val","title":"Returns"},{"location":"termax-ANSINotify/#insert","text":"[Source] fun ref insert( ctrl: Bool val, alt: Bool val, shift: Bool val) : None val","title":"insert"},{"location":"termax-ANSINotify/#parameters_6","text":"ctrl: Bool val alt: Bool val shift: Bool val","title":"Parameters"},{"location":"termax-ANSINotify/#returns_6","text":"None val","title":"Returns"},{"location":"termax-ANSINotify/#home","text":"[Source] fun ref home( ctrl: Bool val, alt: Bool val, shift: Bool val) : None val","title":"home"},{"location":"termax-ANSINotify/#parameters_7","text":"ctrl: Bool val alt: Bool val shift: Bool val","title":"Parameters"},{"location":"termax-ANSINotify/#returns_7","text":"None val","title":"Returns"},{"location":"termax-ANSINotify/#end_key","text":"[Source] fun ref end_key( ctrl: Bool val, alt: Bool val, shift: Bool val) : None val","title":"end_key"},{"location":"termax-ANSINotify/#parameters_8","text":"ctrl: Bool val alt: Bool val shift: Bool val","title":"Parameters"},{"location":"termax-ANSINotify/#returns_8","text":"None val","title":"Returns"},{"location":"termax-ANSINotify/#page_up","text":"[Source] fun ref page_up( ctrl: Bool val, alt: Bool val, shift: Bool val) : None val","title":"page_up"},{"location":"termax-ANSINotify/#parameters_9","text":"ctrl: Bool val alt: Bool val shift: Bool val","title":"Parameters"},{"location":"termax-ANSINotify/#returns_9","text":"None val","title":"Returns"},{"location":"termax-ANSINotify/#page_down","text":"[Source] fun ref page_down( ctrl: Bool val, alt: Bool val, shift: Bool val) : None val","title":"page_down"},{"location":"termax-ANSINotify/#parameters_10","text":"ctrl: Bool val alt: Bool val shift: Bool val","title":"Parameters"},{"location":"termax-ANSINotify/#returns_10","text":"None val","title":"Returns"},{"location":"termax-ANSINotify/#fn_key","text":"[Source] fun ref fn_key( i: U8 val, ctrl: Bool val, alt: Bool val, shift: Bool val) : None val","title":"fn_key"},{"location":"termax-ANSINotify/#parameters_11","text":"i: U8 val ctrl: Bool val alt: Bool val shift: Bool val","title":"Parameters"},{"location":"termax-ANSINotify/#returns_11","text":"None val","title":"Returns"},{"location":"termax-ANSINotify/#prompt","text":"[Source] fun ref prompt( term: Terminal ref, value: String val) : None val","title":"prompt"},{"location":"termax-ANSINotify/#parameters_12","text":"term: Terminal ref value: String val","title":"Parameters"},{"location":"termax-ANSINotify/#returns_12","text":"None val","title":"Returns"},{"location":"termax-ANSINotify/#size","text":"[Source] fun ref size( rows: U16 val, cols: U16 val) : None val","title":"size"},{"location":"termax-ANSINotify/#parameters_13","text":"rows: U16 val cols: U16 val","title":"Parameters"},{"location":"termax-ANSINotify/#returns_13","text":"None val","title":"Returns"},{"location":"termax-ANSINotify/#closed","text":"[Source] fun ref closed() : None val","title":"closed"},{"location":"termax-ANSINotify/#returns_14","text":"None val","title":"Returns"},{"location":"termax-ANSINotify/#mouse_release","text":"[Source] fun ref mouse_release( button: (LeftMouseButton val | MiddleMouseButton val | RightMouseButton val | UnknownMouseButton val), ctrl: Bool val, alt: Bool val, shift: Bool val, x: U32 val, y: U32 val) : None val","title":"mouse_release"},{"location":"termax-ANSINotify/#parameters_14","text":"button: ( LeftMouseButton val | MiddleMouseButton val | RightMouseButton val | UnknownMouseButton val) ctrl: Bool val alt: Bool val shift: Bool val x: U32 val y: U32 val","title":"Parameters"},{"location":"termax-ANSINotify/#returns_15","text":"None val","title":"Returns"},{"location":"termax-ANSINotify/#mouse_press","text":"[Source] fun ref mouse_press( button: (LeftMouseButton val | MiddleMouseButton val | RightMouseButton val | UnknownMouseButton val), ctrl: Bool val, alt: Bool val, shift: Bool val, x: U32 val, y: U32 val) : None val","title":"mouse_press"},{"location":"termax-ANSINotify/#parameters_15","text":"button: ( LeftMouseButton val | MiddleMouseButton val | RightMouseButton val | UnknownMouseButton val) ctrl: Bool val alt: Bool val shift: Bool val x: U32 val y: U32 val","title":"Parameters"},{"location":"termax-ANSINotify/#returns_16","text":"None val","title":"Returns"},{"location":"termax-ANSINotify/#mouse_move","text":"[Source] fun ref mouse_move( ctrl: Bool val, alt: Bool val, shift: Bool val, x: U32 val, y: U32 val) : None val","title":"mouse_move"},{"location":"termax-ANSINotify/#parameters_16","text":"ctrl: Bool val alt: Bool val shift: Bool val x: U32 val y: U32 val","title":"Parameters"},{"location":"termax-ANSINotify/#returns_17","text":"None val","title":"Returns"},{"location":"termax-ANSINotify/#mouse_drag","text":"[Source] fun ref mouse_drag( button: (LeftMouseButton val | MiddleMouseButton val | RightMouseButton val | UnknownMouseButton val), ctrl: Bool val, alt: Bool val, shift: Bool val, x: U32 val, y: U32 val) : None val","title":"mouse_drag"},{"location":"termax-ANSINotify/#parameters_17","text":"button: ( LeftMouseButton val | MiddleMouseButton val | RightMouseButton val | UnknownMouseButton val) ctrl: Bool val alt: Bool val shift: Bool val x: U32 val y: U32 val","title":"Parameters"},{"location":"termax-ANSINotify/#returns_18","text":"None val","title":"Returns"},{"location":"termax-ANSINotify/#mouse_wheel","text":"[Source] fun ref mouse_wheel( direction: (ScrollUp val | ScrollDown val), ctrl: Bool val, alt: Bool val, shift: Bool val, x: U32 val, y: U32 val) : None val","title":"mouse_wheel"},{"location":"termax-ANSINotify/#parameters_18","text":"direction: ( ScrollUp val | ScrollDown val) ctrl: Bool val alt: Bool val shift: Bool val x: U32 val y: U32 val","title":"Parameters"},{"location":"termax-ANSINotify/#returns_19","text":"None val","title":"Returns"},{"location":"termax-ANSITerm/","text":"ANSITerm \u00b6 [Source] type ANSITerm is Terminal tag Type Alias For \u00b6 Terminal tag","title":"type ANSITerm"},{"location":"termax-ANSITerm/#ansiterm","text":"[Source] type ANSITerm is Terminal tag","title":"ANSITerm"},{"location":"termax-ANSITerm/#type-alias-for","text":"Terminal tag","title":"Type Alias For"},{"location":"termax-DoubleSolidLine/","text":"DoubleSolidLine \u00b6 [Source] Double solid line style for drawing a grid. primitive val DoubleSolidLine is GridChars val Implements \u00b6 GridChars val Constructors \u00b6 create \u00b6 [Source] new val create() : DoubleSolidLine val^ Returns \u00b6 DoubleSolidLine val^ Public Functions \u00b6 top_left \u00b6 [Source] fun box top_left() : String val Returns \u00b6 String val top_right \u00b6 [Source] fun box top_right() : String val Returns \u00b6 String val bottom_left \u00b6 [Source] fun box bottom_left() : String val Returns \u00b6 String val bottom_right \u00b6 [Source] fun box bottom_right() : String val Returns \u00b6 String val side \u00b6 [Source] fun box side() : String val Returns \u00b6 String val bar \u00b6 [Source] fun box bar() : String val Returns \u00b6 String val left_join \u00b6 [Source] fun box left_join() : String val Returns \u00b6 String val right_join \u00b6 [Source] fun box right_join() : String val Returns \u00b6 String val top_join \u00b6 [Source] fun box top_join() : String val Returns \u00b6 String val bottom_join \u00b6 [Source] fun box bottom_join() : String val Returns \u00b6 String val mid_join \u00b6 [Source] fun box mid_join() : String val Returns \u00b6 String val eq \u00b6 [Source] fun box eq( that: DoubleSolidLine val) : Bool val Parameters \u00b6 that: DoubleSolidLine val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: DoubleSolidLine val) : Bool val Parameters \u00b6 that: DoubleSolidLine val Returns \u00b6 Bool val","title":"primitive DoubleSolidLine"},{"location":"termax-DoubleSolidLine/#doublesolidline","text":"[Source] Double solid line style for drawing a grid. primitive val DoubleSolidLine is GridChars val","title":"DoubleSolidLine"},{"location":"termax-DoubleSolidLine/#implements","text":"GridChars val","title":"Implements"},{"location":"termax-DoubleSolidLine/#constructors","text":"","title":"Constructors"},{"location":"termax-DoubleSolidLine/#create","text":"[Source] new val create() : DoubleSolidLine val^","title":"create"},{"location":"termax-DoubleSolidLine/#returns","text":"DoubleSolidLine val^","title":"Returns"},{"location":"termax-DoubleSolidLine/#public-functions","text":"","title":"Public Functions"},{"location":"termax-DoubleSolidLine/#top_left","text":"[Source] fun box top_left() : String val","title":"top_left"},{"location":"termax-DoubleSolidLine/#returns_1","text":"String val","title":"Returns"},{"location":"termax-DoubleSolidLine/#top_right","text":"[Source] fun box top_right() : String val","title":"top_right"},{"location":"termax-DoubleSolidLine/#returns_2","text":"String val","title":"Returns"},{"location":"termax-DoubleSolidLine/#bottom_left","text":"[Source] fun box bottom_left() : String val","title":"bottom_left"},{"location":"termax-DoubleSolidLine/#returns_3","text":"String val","title":"Returns"},{"location":"termax-DoubleSolidLine/#bottom_right","text":"[Source] fun box bottom_right() : String val","title":"bottom_right"},{"location":"termax-DoubleSolidLine/#returns_4","text":"String val","title":"Returns"},{"location":"termax-DoubleSolidLine/#side","text":"[Source] fun box side() : String val","title":"side"},{"location":"termax-DoubleSolidLine/#returns_5","text":"String val","title":"Returns"},{"location":"termax-DoubleSolidLine/#bar","text":"[Source] fun box bar() : String val","title":"bar"},{"location":"termax-DoubleSolidLine/#returns_6","text":"String val","title":"Returns"},{"location":"termax-DoubleSolidLine/#left_join","text":"[Source] fun box left_join() : String val","title":"left_join"},{"location":"termax-DoubleSolidLine/#returns_7","text":"String val","title":"Returns"},{"location":"termax-DoubleSolidLine/#right_join","text":"[Source] fun box right_join() : String val","title":"right_join"},{"location":"termax-DoubleSolidLine/#returns_8","text":"String val","title":"Returns"},{"location":"termax-DoubleSolidLine/#top_join","text":"[Source] fun box top_join() : String val","title":"top_join"},{"location":"termax-DoubleSolidLine/#returns_9","text":"String val","title":"Returns"},{"location":"termax-DoubleSolidLine/#bottom_join","text":"[Source] fun box bottom_join() : String val","title":"bottom_join"},{"location":"termax-DoubleSolidLine/#returns_10","text":"String val","title":"Returns"},{"location":"termax-DoubleSolidLine/#mid_join","text":"[Source] fun box mid_join() : String val","title":"mid_join"},{"location":"termax-DoubleSolidLine/#returns_11","text":"String val","title":"Returns"},{"location":"termax-DoubleSolidLine/#eq","text":"[Source] fun box eq( that: DoubleSolidLine val) : Bool val","title":"eq"},{"location":"termax-DoubleSolidLine/#parameters","text":"that: DoubleSolidLine val","title":"Parameters"},{"location":"termax-DoubleSolidLine/#returns_12","text":"Bool val","title":"Returns"},{"location":"termax-DoubleSolidLine/#ne","text":"[Source] fun box ne( that: DoubleSolidLine val) : Bool val","title":"ne"},{"location":"termax-DoubleSolidLine/#parameters_1","text":"that: DoubleSolidLine val","title":"Parameters"},{"location":"termax-DoubleSolidLine/#returns_13","text":"Bool val","title":"Returns"},{"location":"termax-EasyTerminal/","text":"EasyTerminal \u00b6 [Source] Convenient way to setup the Terminal using standard input from the environment. primitive val EasyTerminal Constructors \u00b6 create \u00b6 [Source] new val create() : EasyTerminal val^ Returns \u00b6 EasyTerminal val^ Public Functions \u00b6 apply \u00b6 [Source] Create a Terminal using standard input from env , configured to capture Ctrl-C and Ctrl-Z as input. fun box apply( env: Env val, notify': TerminalNotify iso) : Terminal tag Parameters \u00b6 env: Env val notify': TerminalNotify iso Returns \u00b6 Terminal tag eq \u00b6 [Source] fun box eq( that: EasyTerminal val) : Bool val Parameters \u00b6 that: EasyTerminal val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: EasyTerminal val) : Bool val Parameters \u00b6 that: EasyTerminal val Returns \u00b6 Bool val","title":"primitive EasyTerminal"},{"location":"termax-EasyTerminal/#easyterminal","text":"[Source] Convenient way to setup the Terminal using standard input from the environment. primitive val EasyTerminal","title":"EasyTerminal"},{"location":"termax-EasyTerminal/#constructors","text":"","title":"Constructors"},{"location":"termax-EasyTerminal/#create","text":"[Source] new val create() : EasyTerminal val^","title":"create"},{"location":"termax-EasyTerminal/#returns","text":"EasyTerminal val^","title":"Returns"},{"location":"termax-EasyTerminal/#public-functions","text":"","title":"Public Functions"},{"location":"termax-EasyTerminal/#apply","text":"[Source] Create a Terminal using standard input from env , configured to capture Ctrl-C and Ctrl-Z as input. fun box apply( env: Env val, notify': TerminalNotify iso) : Terminal tag","title":"apply"},{"location":"termax-EasyTerminal/#parameters","text":"env: Env val notify': TerminalNotify iso","title":"Parameters"},{"location":"termax-EasyTerminal/#returns_1","text":"Terminal tag","title":"Returns"},{"location":"termax-EasyTerminal/#eq","text":"[Source] fun box eq( that: EasyTerminal val) : Bool val","title":"eq"},{"location":"termax-EasyTerminal/#parameters_1","text":"that: EasyTerminal val","title":"Parameters"},{"location":"termax-EasyTerminal/#returns_2","text":"Bool val","title":"Returns"},{"location":"termax-EasyTerminal/#ne","text":"[Source] fun box ne( that: EasyTerminal val) : Bool val","title":"ne"},{"location":"termax-EasyTerminal/#parameters_2","text":"that: EasyTerminal val","title":"Parameters"},{"location":"termax-EasyTerminal/#returns_3","text":"Bool val","title":"Returns"},{"location":"termax-EraseAfter/","text":"EraseAfter \u00b6 [Source] Erase from (after) the cursor position primitive val EraseAfter Constructors \u00b6 create \u00b6 [Source] new val create() : EraseAfter val^ Returns \u00b6 EraseAfter val^ Public Functions \u00b6 eq \u00b6 [Source] fun box eq( that: EraseAfter val) : Bool val Parameters \u00b6 that: EraseAfter val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: EraseAfter val) : Bool val Parameters \u00b6 that: EraseAfter val Returns \u00b6 Bool val","title":"primitive EraseAfter"},{"location":"termax-EraseAfter/#eraseafter","text":"[Source] Erase from (after) the cursor position primitive val EraseAfter","title":"EraseAfter"},{"location":"termax-EraseAfter/#constructors","text":"","title":"Constructors"},{"location":"termax-EraseAfter/#create","text":"[Source] new val create() : EraseAfter val^","title":"create"},{"location":"termax-EraseAfter/#returns","text":"EraseAfter val^","title":"Returns"},{"location":"termax-EraseAfter/#public-functions","text":"","title":"Public Functions"},{"location":"termax-EraseAfter/#eq","text":"[Source] fun box eq( that: EraseAfter val) : Bool val","title":"eq"},{"location":"termax-EraseAfter/#parameters","text":"that: EraseAfter val","title":"Parameters"},{"location":"termax-EraseAfter/#returns_1","text":"Bool val","title":"Returns"},{"location":"termax-EraseAfter/#ne","text":"[Source] fun box ne( that: EraseAfter val) : Bool val","title":"ne"},{"location":"termax-EraseAfter/#parameters_1","text":"that: EraseAfter val","title":"Parameters"},{"location":"termax-EraseAfter/#returns_2","text":"Bool val","title":"Returns"},{"location":"termax-EraseAll/","text":"EraseAll \u00b6 [Source] Erase all (before and after) regardless of cursor position primitive val EraseAll Constructors \u00b6 create \u00b6 [Source] new val create() : EraseAll val^ Returns \u00b6 EraseAll val^ Public Functions \u00b6 eq \u00b6 [Source] fun box eq( that: EraseAll val) : Bool val Parameters \u00b6 that: EraseAll val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: EraseAll val) : Bool val Parameters \u00b6 that: EraseAll val Returns \u00b6 Bool val","title":"primitive EraseAll"},{"location":"termax-EraseAll/#eraseall","text":"[Source] Erase all (before and after) regardless of cursor position primitive val EraseAll","title":"EraseAll"},{"location":"termax-EraseAll/#constructors","text":"","title":"Constructors"},{"location":"termax-EraseAll/#create","text":"[Source] new val create() : EraseAll val^","title":"create"},{"location":"termax-EraseAll/#returns","text":"EraseAll val^","title":"Returns"},{"location":"termax-EraseAll/#public-functions","text":"","title":"Public Functions"},{"location":"termax-EraseAll/#eq","text":"[Source] fun box eq( that: EraseAll val) : Bool val","title":"eq"},{"location":"termax-EraseAll/#parameters","text":"that: EraseAll val","title":"Parameters"},{"location":"termax-EraseAll/#returns_1","text":"Bool val","title":"Returns"},{"location":"termax-EraseAll/#ne","text":"[Source] fun box ne( that: EraseAll val) : Bool val","title":"ne"},{"location":"termax-EraseAll/#parameters_1","text":"that: EraseAll val","title":"Parameters"},{"location":"termax-EraseAll/#returns_2","text":"Bool val","title":"Returns"},{"location":"termax-EraseBefore/","text":"EraseBefore \u00b6 [Source] Erase up to to (before) the cursor position primitive val EraseBefore Constructors \u00b6 create \u00b6 [Source] new val create() : EraseBefore val^ Returns \u00b6 EraseBefore val^ Public Functions \u00b6 eq \u00b6 [Source] fun box eq( that: EraseBefore val) : Bool val Parameters \u00b6 that: EraseBefore val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: EraseBefore val) : Bool val Parameters \u00b6 that: EraseBefore val Returns \u00b6 Bool val","title":"primitive EraseBefore"},{"location":"termax-EraseBefore/#erasebefore","text":"[Source] Erase up to to (before) the cursor position primitive val EraseBefore","title":"EraseBefore"},{"location":"termax-EraseBefore/#constructors","text":"","title":"Constructors"},{"location":"termax-EraseBefore/#create","text":"[Source] new val create() : EraseBefore val^","title":"create"},{"location":"termax-EraseBefore/#returns","text":"EraseBefore val^","title":"Returns"},{"location":"termax-EraseBefore/#public-functions","text":"","title":"Public Functions"},{"location":"termax-EraseBefore/#eq","text":"[Source] fun box eq( that: EraseBefore val) : Bool val","title":"eq"},{"location":"termax-EraseBefore/#parameters","text":"that: EraseBefore val","title":"Parameters"},{"location":"termax-EraseBefore/#returns_1","text":"Bool val","title":"Returns"},{"location":"termax-EraseBefore/#ne","text":"[Source] fun box ne( that: EraseBefore val) : Bool val","title":"ne"},{"location":"termax-EraseBefore/#parameters_1","text":"that: EraseBefore val","title":"Parameters"},{"location":"termax-EraseBefore/#returns_2","text":"Bool val","title":"Returns"},{"location":"termax-EraseDisplay/","text":"EraseDisplay \u00b6 [Source] Erase the display (screen) relative to the cursor position. type EraseDisplay is (EraseBefore val | EraseAfter val | EraseAll val) Type Alias For \u00b6 ( EraseBefore val | EraseAfter val | EraseAll val)","title":"type EraseDisplay"},{"location":"termax-EraseDisplay/#erasedisplay","text":"[Source] Erase the display (screen) relative to the cursor position. type EraseDisplay is (EraseBefore val | EraseAfter val | EraseAll val)","title":"EraseDisplay"},{"location":"termax-EraseDisplay/#type-alias-for","text":"( EraseBefore val | EraseAfter val | EraseAll val)","title":"Type Alias For"},{"location":"termax-EraseLine/","text":"EraseLine \u00b6 [Source] Erase the line relative to the cursor position. type EraseLine is (EraseBefore val | EraseAfter val | EraseAll val) Type Alias For \u00b6 ( EraseBefore val | EraseAfter val | EraseAll val)","title":"type EraseLine"},{"location":"termax-EraseLine/#eraseline","text":"[Source] Erase the line relative to the cursor position. type EraseLine is (EraseBefore val | EraseAfter val | EraseAll val)","title":"EraseLine"},{"location":"termax-EraseLine/#type-alias-for","text":"( EraseBefore val | EraseAfter val | EraseAll val)","title":"Type Alias For"},{"location":"termax-FillPattern/","text":"FillPattern \u00b6 [Source] Different characters that are useful as fill patterns. primitive val FillPattern Constructors \u00b6 create \u00b6 [Source] new val create() : FillPattern val^ Returns \u00b6 FillPattern val^ Public Functions \u00b6 blank \u00b6 [Source] fun box blank() : String val Returns \u00b6 String val solid \u00b6 [Source] fun box solid() : String val Returns \u00b6 String val solid_top_half \u00b6 [Source] fun box solid_top_half() : String val Returns \u00b6 String val solid_bottom_half \u00b6 [Source] fun box solid_bottom_half() : String val Returns \u00b6 String val dither_light \u00b6 [Source] fun box dither_light() : String val Returns \u00b6 String val dither_medium \u00b6 [Source] fun box dither_medium() : String val Returns \u00b6 String val dither_dark \u00b6 [Source] fun box dither_dark() : String val Returns \u00b6 String val eq \u00b6 [Source] fun box eq( that: FillPattern val) : Bool val Parameters \u00b6 that: FillPattern val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: FillPattern val) : Bool val Parameters \u00b6 that: FillPattern val Returns \u00b6 Bool val","title":"primitive FillPattern"},{"location":"termax-FillPattern/#fillpattern","text":"[Source] Different characters that are useful as fill patterns. primitive val FillPattern","title":"FillPattern"},{"location":"termax-FillPattern/#constructors","text":"","title":"Constructors"},{"location":"termax-FillPattern/#create","text":"[Source] new val create() : FillPattern val^","title":"create"},{"location":"termax-FillPattern/#returns","text":"FillPattern val^","title":"Returns"},{"location":"termax-FillPattern/#public-functions","text":"","title":"Public Functions"},{"location":"termax-FillPattern/#blank","text":"[Source] fun box blank() : String val","title":"blank"},{"location":"termax-FillPattern/#returns_1","text":"String val","title":"Returns"},{"location":"termax-FillPattern/#solid","text":"[Source] fun box solid() : String val","title":"solid"},{"location":"termax-FillPattern/#returns_2","text":"String val","title":"Returns"},{"location":"termax-FillPattern/#solid_top_half","text":"[Source] fun box solid_top_half() : String val","title":"solid_top_half"},{"location":"termax-FillPattern/#returns_3","text":"String val","title":"Returns"},{"location":"termax-FillPattern/#solid_bottom_half","text":"[Source] fun box solid_bottom_half() : String val","title":"solid_bottom_half"},{"location":"termax-FillPattern/#returns_4","text":"String val","title":"Returns"},{"location":"termax-FillPattern/#dither_light","text":"[Source] fun box dither_light() : String val","title":"dither_light"},{"location":"termax-FillPattern/#returns_5","text":"String val","title":"Returns"},{"location":"termax-FillPattern/#dither_medium","text":"[Source] fun box dither_medium() : String val","title":"dither_medium"},{"location":"termax-FillPattern/#returns_6","text":"String val","title":"Returns"},{"location":"termax-FillPattern/#dither_dark","text":"[Source] fun box dither_dark() : String val","title":"dither_dark"},{"location":"termax-FillPattern/#returns_7","text":"String val","title":"Returns"},{"location":"termax-FillPattern/#eq","text":"[Source] fun box eq( that: FillPattern val) : Bool val","title":"eq"},{"location":"termax-FillPattern/#parameters","text":"that: FillPattern val","title":"Parameters"},{"location":"termax-FillPattern/#returns_8","text":"Bool val","title":"Returns"},{"location":"termax-FillPattern/#ne","text":"[Source] fun box ne( that: FillPattern val) : Bool val","title":"ne"},{"location":"termax-FillPattern/#parameters_1","text":"that: FillPattern val","title":"Parameters"},{"location":"termax-FillPattern/#returns_9","text":"Bool val","title":"Returns"},{"location":"termax-GridChars/","text":"GridChars \u00b6 [Source] Define a line style for drawing a grid. trait val GridChars Public Functions \u00b6 top_left \u00b6 [Source] fun box top_left() : String val Returns \u00b6 String val top_right \u00b6 [Source] fun box top_right() : String val Returns \u00b6 String val bottom_left \u00b6 [Source] fun box bottom_left() : String val Returns \u00b6 String val bottom_right \u00b6 [Source] fun box bottom_right() : String val Returns \u00b6 String val side \u00b6 [Source] fun box side() : String val Returns \u00b6 String val bar \u00b6 [Source] fun box bar() : String val Returns \u00b6 String val left_join \u00b6 [Source] fun box left_join() : String val Returns \u00b6 String val right_join \u00b6 [Source] fun box right_join() : String val Returns \u00b6 String val top_join \u00b6 [Source] fun box top_join() : String val Returns \u00b6 String val bottom_join \u00b6 [Source] fun box bottom_join() : String val Returns \u00b6 String val mid_join \u00b6 [Source] fun box mid_join() : String val Returns \u00b6 String val","title":"trait GridChars"},{"location":"termax-GridChars/#gridchars","text":"[Source] Define a line style for drawing a grid. trait val GridChars","title":"GridChars"},{"location":"termax-GridChars/#public-functions","text":"","title":"Public Functions"},{"location":"termax-GridChars/#top_left","text":"[Source] fun box top_left() : String val","title":"top_left"},{"location":"termax-GridChars/#returns","text":"String val","title":"Returns"},{"location":"termax-GridChars/#top_right","text":"[Source] fun box top_right() : String val","title":"top_right"},{"location":"termax-GridChars/#returns_1","text":"String val","title":"Returns"},{"location":"termax-GridChars/#bottom_left","text":"[Source] fun box bottom_left() : String val","title":"bottom_left"},{"location":"termax-GridChars/#returns_2","text":"String val","title":"Returns"},{"location":"termax-GridChars/#bottom_right","text":"[Source] fun box bottom_right() : String val","title":"bottom_right"},{"location":"termax-GridChars/#returns_3","text":"String val","title":"Returns"},{"location":"termax-GridChars/#side","text":"[Source] fun box side() : String val","title":"side"},{"location":"termax-GridChars/#returns_4","text":"String val","title":"Returns"},{"location":"termax-GridChars/#bar","text":"[Source] fun box bar() : String val","title":"bar"},{"location":"termax-GridChars/#returns_5","text":"String val","title":"Returns"},{"location":"termax-GridChars/#left_join","text":"[Source] fun box left_join() : String val","title":"left_join"},{"location":"termax-GridChars/#returns_6","text":"String val","title":"Returns"},{"location":"termax-GridChars/#right_join","text":"[Source] fun box right_join() : String val","title":"right_join"},{"location":"termax-GridChars/#returns_7","text":"String val","title":"Returns"},{"location":"termax-GridChars/#top_join","text":"[Source] fun box top_join() : String val","title":"top_join"},{"location":"termax-GridChars/#returns_8","text":"String val","title":"Returns"},{"location":"termax-GridChars/#bottom_join","text":"[Source] fun box bottom_join() : String val","title":"bottom_join"},{"location":"termax-GridChars/#returns_9","text":"String val","title":"Returns"},{"location":"termax-GridChars/#mid_join","text":"[Source] fun box mid_join() : String val","title":"mid_join"},{"location":"termax-GridChars/#returns_10","text":"String val","title":"Returns"},{"location":"termax-Key/","text":"Key \u00b6 [Source] Names for non-text input keys received via TerminalNotify.apply() primitive val Key Constructors \u00b6 create \u00b6 [Source] new val create() : Key val^ Returns \u00b6 Key val^ Public Functions \u00b6 ctrl_A \u00b6 [Source] fun box ctrl_A() : U8 val Returns \u00b6 U8 val ctrl_B \u00b6 [Source] fun box ctrl_B() : U8 val Returns \u00b6 U8 val ctrl_C \u00b6 [Source] fun box ctrl_C() : U8 val Returns \u00b6 U8 val ctrl_D \u00b6 [Source] fun box ctrl_D() : U8 val Returns \u00b6 U8 val ctrl_E \u00b6 [Source] fun box ctrl_E() : U8 val Returns \u00b6 U8 val ctrl_F \u00b6 [Source] fun box ctrl_F() : U8 val Returns \u00b6 U8 val ctrl_G \u00b6 [Source] fun box ctrl_G() : U8 val Returns \u00b6 U8 val ctrl_H \u00b6 [Source] fun box ctrl_H() : U8 val Returns \u00b6 U8 val ctrl_I \u00b6 [Source] fun box ctrl_I() : U8 val Returns \u00b6 U8 val ctrl_J \u00b6 [Source] fun box ctrl_J() : U8 val Returns \u00b6 U8 val ctrl_K \u00b6 [Source] fun box ctrl_K() : U8 val Returns \u00b6 U8 val ctrl_L \u00b6 [Source] fun box ctrl_L() : U8 val Returns \u00b6 U8 val ctrl_M \u00b6 [Source] fun box ctrl_M() : U8 val Returns \u00b6 U8 val ctrl_N \u00b6 [Source] fun box ctrl_N() : U8 val Returns \u00b6 U8 val ctrl_O \u00b6 [Source] fun box ctrl_O() : U8 val Returns \u00b6 U8 val ctrl_P \u00b6 [Source] fun box ctrl_P() : U8 val Returns \u00b6 U8 val ctrl_Q \u00b6 [Source] fun box ctrl_Q() : U8 val Returns \u00b6 U8 val ctrl_R \u00b6 [Source] fun box ctrl_R() : U8 val Returns \u00b6 U8 val ctrl_S \u00b6 [Source] fun box ctrl_S() : U8 val Returns \u00b6 U8 val ctrl_T \u00b6 [Source] fun box ctrl_T() : U8 val Returns \u00b6 U8 val ctrl_U \u00b6 [Source] fun box ctrl_U() : U8 val Returns \u00b6 U8 val ctrl_V \u00b6 [Source] fun box ctrl_V() : U8 val Returns \u00b6 U8 val ctrl_W \u00b6 [Source] fun box ctrl_W() : U8 val Returns \u00b6 U8 val ctrl_X \u00b6 [Source] fun box ctrl_X() : U8 val Returns \u00b6 U8 val ctrl_Y \u00b6 [Source] fun box ctrl_Y() : U8 val Returns \u00b6 U8 val ctrl_Z \u00b6 [Source] fun box ctrl_Z() : U8 val Returns \u00b6 U8 val tab \u00b6 [Source] fun box tab() : U8 val Returns \u00b6 U8 val enter \u00b6 [Source] fun box enter() : U8 val Returns \u00b6 U8 val escape \u00b6 [Source] fun box escape() : U8 val Returns \u00b6 U8 val esc \u00b6 [Source] fun box esc() : U8 val Returns \u00b6 U8 val back_space \u00b6 [Source] fun box back_space() : U8 val Returns \u00b6 U8 val eq \u00b6 [Source] fun box eq( that: Key val) : Bool val Parameters \u00b6 that: Key val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: Key val) : Bool val Parameters \u00b6 that: Key val Returns \u00b6 Bool val","title":"primitive Key"},{"location":"termax-Key/#key","text":"[Source] Names for non-text input keys received via TerminalNotify.apply() primitive val Key","title":"Key"},{"location":"termax-Key/#constructors","text":"","title":"Constructors"},{"location":"termax-Key/#create","text":"[Source] new val create() : Key val^","title":"create"},{"location":"termax-Key/#returns","text":"Key val^","title":"Returns"},{"location":"termax-Key/#public-functions","text":"","title":"Public Functions"},{"location":"termax-Key/#ctrl_a","text":"[Source] fun box ctrl_A() : U8 val","title":"ctrl_A"},{"location":"termax-Key/#returns_1","text":"U8 val","title":"Returns"},{"location":"termax-Key/#ctrl_b","text":"[Source] fun box ctrl_B() : U8 val","title":"ctrl_B"},{"location":"termax-Key/#returns_2","text":"U8 val","title":"Returns"},{"location":"termax-Key/#ctrl_c","text":"[Source] fun box ctrl_C() : U8 val","title":"ctrl_C"},{"location":"termax-Key/#returns_3","text":"U8 val","title":"Returns"},{"location":"termax-Key/#ctrl_d","text":"[Source] fun box ctrl_D() : U8 val","title":"ctrl_D"},{"location":"termax-Key/#returns_4","text":"U8 val","title":"Returns"},{"location":"termax-Key/#ctrl_e","text":"[Source] fun box ctrl_E() : U8 val","title":"ctrl_E"},{"location":"termax-Key/#returns_5","text":"U8 val","title":"Returns"},{"location":"termax-Key/#ctrl_f","text":"[Source] fun box ctrl_F() : U8 val","title":"ctrl_F"},{"location":"termax-Key/#returns_6","text":"U8 val","title":"Returns"},{"location":"termax-Key/#ctrl_g","text":"[Source] fun box ctrl_G() : U8 val","title":"ctrl_G"},{"location":"termax-Key/#returns_7","text":"U8 val","title":"Returns"},{"location":"termax-Key/#ctrl_h","text":"[Source] fun box ctrl_H() : U8 val","title":"ctrl_H"},{"location":"termax-Key/#returns_8","text":"U8 val","title":"Returns"},{"location":"termax-Key/#ctrl_i","text":"[Source] fun box ctrl_I() : U8 val","title":"ctrl_I"},{"location":"termax-Key/#returns_9","text":"U8 val","title":"Returns"},{"location":"termax-Key/#ctrl_j","text":"[Source] fun box ctrl_J() : U8 val","title":"ctrl_J"},{"location":"termax-Key/#returns_10","text":"U8 val","title":"Returns"},{"location":"termax-Key/#ctrl_k","text":"[Source] fun box ctrl_K() : U8 val","title":"ctrl_K"},{"location":"termax-Key/#returns_11","text":"U8 val","title":"Returns"},{"location":"termax-Key/#ctrl_l","text":"[Source] fun box ctrl_L() : U8 val","title":"ctrl_L"},{"location":"termax-Key/#returns_12","text":"U8 val","title":"Returns"},{"location":"termax-Key/#ctrl_m","text":"[Source] fun box ctrl_M() : U8 val","title":"ctrl_M"},{"location":"termax-Key/#returns_13","text":"U8 val","title":"Returns"},{"location":"termax-Key/#ctrl_n","text":"[Source] fun box ctrl_N() : U8 val","title":"ctrl_N"},{"location":"termax-Key/#returns_14","text":"U8 val","title":"Returns"},{"location":"termax-Key/#ctrl_o","text":"[Source] fun box ctrl_O() : U8 val","title":"ctrl_O"},{"location":"termax-Key/#returns_15","text":"U8 val","title":"Returns"},{"location":"termax-Key/#ctrl_p","text":"[Source] fun box ctrl_P() : U8 val","title":"ctrl_P"},{"location":"termax-Key/#returns_16","text":"U8 val","title":"Returns"},{"location":"termax-Key/#ctrl_q","text":"[Source] fun box ctrl_Q() : U8 val","title":"ctrl_Q"},{"location":"termax-Key/#returns_17","text":"U8 val","title":"Returns"},{"location":"termax-Key/#ctrl_r","text":"[Source] fun box ctrl_R() : U8 val","title":"ctrl_R"},{"location":"termax-Key/#returns_18","text":"U8 val","title":"Returns"},{"location":"termax-Key/#ctrl_s","text":"[Source] fun box ctrl_S() : U8 val","title":"ctrl_S"},{"location":"termax-Key/#returns_19","text":"U8 val","title":"Returns"},{"location":"termax-Key/#ctrl_t","text":"[Source] fun box ctrl_T() : U8 val","title":"ctrl_T"},{"location":"termax-Key/#returns_20","text":"U8 val","title":"Returns"},{"location":"termax-Key/#ctrl_u","text":"[Source] fun box ctrl_U() : U8 val","title":"ctrl_U"},{"location":"termax-Key/#returns_21","text":"U8 val","title":"Returns"},{"location":"termax-Key/#ctrl_v","text":"[Source] fun box ctrl_V() : U8 val","title":"ctrl_V"},{"location":"termax-Key/#returns_22","text":"U8 val","title":"Returns"},{"location":"termax-Key/#ctrl_w","text":"[Source] fun box ctrl_W() : U8 val","title":"ctrl_W"},{"location":"termax-Key/#returns_23","text":"U8 val","title":"Returns"},{"location":"termax-Key/#ctrl_x","text":"[Source] fun box ctrl_X() : U8 val","title":"ctrl_X"},{"location":"termax-Key/#returns_24","text":"U8 val","title":"Returns"},{"location":"termax-Key/#ctrl_y","text":"[Source] fun box ctrl_Y() : U8 val","title":"ctrl_Y"},{"location":"termax-Key/#returns_25","text":"U8 val","title":"Returns"},{"location":"termax-Key/#ctrl_z","text":"[Source] fun box ctrl_Z() : U8 val","title":"ctrl_Z"},{"location":"termax-Key/#returns_26","text":"U8 val","title":"Returns"},{"location":"termax-Key/#tab","text":"[Source] fun box tab() : U8 val","title":"tab"},{"location":"termax-Key/#returns_27","text":"U8 val","title":"Returns"},{"location":"termax-Key/#enter","text":"[Source] fun box enter() : U8 val","title":"enter"},{"location":"termax-Key/#returns_28","text":"U8 val","title":"Returns"},{"location":"termax-Key/#escape","text":"[Source] fun box escape() : U8 val","title":"escape"},{"location":"termax-Key/#returns_29","text":"U8 val","title":"Returns"},{"location":"termax-Key/#esc","text":"[Source] fun box esc() : U8 val","title":"esc"},{"location":"termax-Key/#returns_30","text":"U8 val","title":"Returns"},{"location":"termax-Key/#back_space","text":"[Source] fun box back_space() : U8 val","title":"back_space"},{"location":"termax-Key/#returns_31","text":"U8 val","title":"Returns"},{"location":"termax-Key/#eq","text":"[Source] fun box eq( that: Key val) : Bool val","title":"eq"},{"location":"termax-Key/#parameters","text":"that: Key val","title":"Parameters"},{"location":"termax-Key/#returns_32","text":"Bool val","title":"Returns"},{"location":"termax-Key/#ne","text":"[Source] fun box ne( that: Key val) : Bool val","title":"ne"},{"location":"termax-Key/#parameters_1","text":"that: Key val","title":"Parameters"},{"location":"termax-Key/#returns_33","text":"Bool val","title":"Returns"},{"location":"termax-KnownMouseButton/","text":"KnownMouseButton \u00b6 [Source] type KnownMouseButton is (LeftMouseButton val | MiddleMouseButton val | RightMouseButton val) Type Alias For \u00b6 ( LeftMouseButton val | MiddleMouseButton val | RightMouseButton val)","title":"type KnownMouseButton"},{"location":"termax-KnownMouseButton/#knownmousebutton","text":"[Source] type KnownMouseButton is (LeftMouseButton val | MiddleMouseButton val | RightMouseButton val)","title":"KnownMouseButton"},{"location":"termax-KnownMouseButton/#type-alias-for","text":"( LeftMouseButton val | MiddleMouseButton val | RightMouseButton val)","title":"Type Alias For"},{"location":"termax-LeftMouseButton/","text":"LeftMouseButton \u00b6 [Source] primitive val LeftMouseButton Constructors \u00b6 create \u00b6 [Source] new val create() : LeftMouseButton val^ Returns \u00b6 LeftMouseButton val^ Public Functions \u00b6 string \u00b6 [Source] fun box string() : String val Returns \u00b6 String val eq \u00b6 [Source] fun box eq( that: LeftMouseButton val) : Bool val Parameters \u00b6 that: LeftMouseButton val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: LeftMouseButton val) : Bool val Parameters \u00b6 that: LeftMouseButton val Returns \u00b6 Bool val","title":"primitive LeftMouseButton"},{"location":"termax-LeftMouseButton/#leftmousebutton","text":"[Source] primitive val LeftMouseButton","title":"LeftMouseButton"},{"location":"termax-LeftMouseButton/#constructors","text":"","title":"Constructors"},{"location":"termax-LeftMouseButton/#create","text":"[Source] new val create() : LeftMouseButton val^","title":"create"},{"location":"termax-LeftMouseButton/#returns","text":"LeftMouseButton val^","title":"Returns"},{"location":"termax-LeftMouseButton/#public-functions","text":"","title":"Public Functions"},{"location":"termax-LeftMouseButton/#string","text":"[Source] fun box string() : String val","title":"string"},{"location":"termax-LeftMouseButton/#returns_1","text":"String val","title":"Returns"},{"location":"termax-LeftMouseButton/#eq","text":"[Source] fun box eq( that: LeftMouseButton val) : Bool val","title":"eq"},{"location":"termax-LeftMouseButton/#parameters","text":"that: LeftMouseButton val","title":"Parameters"},{"location":"termax-LeftMouseButton/#returns_2","text":"Bool val","title":"Returns"},{"location":"termax-LeftMouseButton/#ne","text":"[Source] fun box ne( that: LeftMouseButton val) : Bool val","title":"ne"},{"location":"termax-LeftMouseButton/#parameters_1","text":"that: LeftMouseButton val","title":"Parameters"},{"location":"termax-LeftMouseButton/#returns_3","text":"Bool val","title":"Returns"},{"location":"termax-MiddleMouseButton/","text":"MiddleMouseButton \u00b6 [Source] primitive val MiddleMouseButton Constructors \u00b6 create \u00b6 [Source] new val create() : MiddleMouseButton val^ Returns \u00b6 MiddleMouseButton val^ Public Functions \u00b6 string \u00b6 [Source] fun box string() : String val Returns \u00b6 String val eq \u00b6 [Source] fun box eq( that: MiddleMouseButton val) : Bool val Parameters \u00b6 that: MiddleMouseButton val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: MiddleMouseButton val) : Bool val Parameters \u00b6 that: MiddleMouseButton val Returns \u00b6 Bool val","title":"primitive MiddleMouseButton"},{"location":"termax-MiddleMouseButton/#middlemousebutton","text":"[Source] primitive val MiddleMouseButton","title":"MiddleMouseButton"},{"location":"termax-MiddleMouseButton/#constructors","text":"","title":"Constructors"},{"location":"termax-MiddleMouseButton/#create","text":"[Source] new val create() : MiddleMouseButton val^","title":"create"},{"location":"termax-MiddleMouseButton/#returns","text":"MiddleMouseButton val^","title":"Returns"},{"location":"termax-MiddleMouseButton/#public-functions","text":"","title":"Public Functions"},{"location":"termax-MiddleMouseButton/#string","text":"[Source] fun box string() : String val","title":"string"},{"location":"termax-MiddleMouseButton/#returns_1","text":"String val","title":"Returns"},{"location":"termax-MiddleMouseButton/#eq","text":"[Source] fun box eq( that: MiddleMouseButton val) : Bool val","title":"eq"},{"location":"termax-MiddleMouseButton/#parameters","text":"that: MiddleMouseButton val","title":"Parameters"},{"location":"termax-MiddleMouseButton/#returns_2","text":"Bool val","title":"Returns"},{"location":"termax-MiddleMouseButton/#ne","text":"[Source] fun box ne( that: MiddleMouseButton val) : Bool val","title":"ne"},{"location":"termax-MiddleMouseButton/#parameters_1","text":"that: MiddleMouseButton val","title":"Parameters"},{"location":"termax-MiddleMouseButton/#returns_3","text":"Bool val","title":"Returns"},{"location":"termax-MouseButton/","text":"MouseButton \u00b6 [Source] type MouseButton is (LeftMouseButton val | MiddleMouseButton val | RightMouseButton val | UnknownMouseButton val) Type Alias For \u00b6 ( LeftMouseButton val | MiddleMouseButton val | RightMouseButton val | UnknownMouseButton val)","title":"type MouseButton"},{"location":"termax-MouseButton/#mousebutton","text":"[Source] type MouseButton is (LeftMouseButton val | MiddleMouseButton val | RightMouseButton val | UnknownMouseButton val)","title":"MouseButton"},{"location":"termax-MouseButton/#type-alias-for","text":"( LeftMouseButton val | MiddleMouseButton val | RightMouseButton val | UnknownMouseButton val)","title":"Type Alias For"},{"location":"termax-RightMouseButton/","text":"RightMouseButton \u00b6 [Source] primitive val RightMouseButton Constructors \u00b6 create \u00b6 [Source] new val create() : RightMouseButton val^ Returns \u00b6 RightMouseButton val^ Public Functions \u00b6 string \u00b6 [Source] fun box string() : String val Returns \u00b6 String val eq \u00b6 [Source] fun box eq( that: RightMouseButton val) : Bool val Parameters \u00b6 that: RightMouseButton val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: RightMouseButton val) : Bool val Parameters \u00b6 that: RightMouseButton val Returns \u00b6 Bool val","title":"primitive RightMouseButton"},{"location":"termax-RightMouseButton/#rightmousebutton","text":"[Source] primitive val RightMouseButton","title":"RightMouseButton"},{"location":"termax-RightMouseButton/#constructors","text":"","title":"Constructors"},{"location":"termax-RightMouseButton/#create","text":"[Source] new val create() : RightMouseButton val^","title":"create"},{"location":"termax-RightMouseButton/#returns","text":"RightMouseButton val^","title":"Returns"},{"location":"termax-RightMouseButton/#public-functions","text":"","title":"Public Functions"},{"location":"termax-RightMouseButton/#string","text":"[Source] fun box string() : String val","title":"string"},{"location":"termax-RightMouseButton/#returns_1","text":"String val","title":"Returns"},{"location":"termax-RightMouseButton/#eq","text":"[Source] fun box eq( that: RightMouseButton val) : Bool val","title":"eq"},{"location":"termax-RightMouseButton/#parameters","text":"that: RightMouseButton val","title":"Parameters"},{"location":"termax-RightMouseButton/#returns_2","text":"Bool val","title":"Returns"},{"location":"termax-RightMouseButton/#ne","text":"[Source] fun box ne( that: RightMouseButton val) : Bool val","title":"ne"},{"location":"termax-RightMouseButton/#parameters_1","text":"that: RightMouseButton val","title":"Parameters"},{"location":"termax-RightMouseButton/#returns_3","text":"Bool val","title":"Returns"},{"location":"termax-ScrollDirection/","text":"ScrollDirection \u00b6 [Source] type ScrollDirection is (ScrollUp val | ScrollDown val) Type Alias For \u00b6 ( ScrollUp val | ScrollDown val)","title":"type ScrollDirection"},{"location":"termax-ScrollDirection/#scrolldirection","text":"[Source] type ScrollDirection is (ScrollUp val | ScrollDown val)","title":"ScrollDirection"},{"location":"termax-ScrollDirection/#type-alias-for","text":"( ScrollUp val | ScrollDown val)","title":"Type Alias For"},{"location":"termax-ScrollDown/","text":"ScrollDown \u00b6 [Source] primitive val ScrollDown Constructors \u00b6 create \u00b6 [Source] new val create() : ScrollDown val^ Returns \u00b6 ScrollDown val^ Public Functions \u00b6 string \u00b6 [Source] fun box string() : String val Returns \u00b6 String val eq \u00b6 [Source] fun box eq( that: ScrollDown val) : Bool val Parameters \u00b6 that: ScrollDown val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ScrollDown val) : Bool val Parameters \u00b6 that: ScrollDown val Returns \u00b6 Bool val","title":"primitive ScrollDown"},{"location":"termax-ScrollDown/#scrolldown","text":"[Source] primitive val ScrollDown","title":"ScrollDown"},{"location":"termax-ScrollDown/#constructors","text":"","title":"Constructors"},{"location":"termax-ScrollDown/#create","text":"[Source] new val create() : ScrollDown val^","title":"create"},{"location":"termax-ScrollDown/#returns","text":"ScrollDown val^","title":"Returns"},{"location":"termax-ScrollDown/#public-functions","text":"","title":"Public Functions"},{"location":"termax-ScrollDown/#string","text":"[Source] fun box string() : String val","title":"string"},{"location":"termax-ScrollDown/#returns_1","text":"String val","title":"Returns"},{"location":"termax-ScrollDown/#eq","text":"[Source] fun box eq( that: ScrollDown val) : Bool val","title":"eq"},{"location":"termax-ScrollDown/#parameters","text":"that: ScrollDown val","title":"Parameters"},{"location":"termax-ScrollDown/#returns_2","text":"Bool val","title":"Returns"},{"location":"termax-ScrollDown/#ne","text":"[Source] fun box ne( that: ScrollDown val) : Bool val","title":"ne"},{"location":"termax-ScrollDown/#parameters_1","text":"that: ScrollDown val","title":"Parameters"},{"location":"termax-ScrollDown/#returns_3","text":"Bool val","title":"Returns"},{"location":"termax-ScrollUp/","text":"ScrollUp \u00b6 [Source] primitive val ScrollUp Constructors \u00b6 create \u00b6 [Source] new val create() : ScrollUp val^ Returns \u00b6 ScrollUp val^ Public Functions \u00b6 string \u00b6 [Source] fun box string() : String val Returns \u00b6 String val eq \u00b6 [Source] fun box eq( that: ScrollUp val) : Bool val Parameters \u00b6 that: ScrollUp val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ScrollUp val) : Bool val Parameters \u00b6 that: ScrollUp val Returns \u00b6 Bool val","title":"primitive ScrollUp"},{"location":"termax-ScrollUp/#scrollup","text":"[Source] primitive val ScrollUp","title":"ScrollUp"},{"location":"termax-ScrollUp/#constructors","text":"","title":"Constructors"},{"location":"termax-ScrollUp/#create","text":"[Source] new val create() : ScrollUp val^","title":"create"},{"location":"termax-ScrollUp/#returns","text":"ScrollUp val^","title":"Returns"},{"location":"termax-ScrollUp/#public-functions","text":"","title":"Public Functions"},{"location":"termax-ScrollUp/#string","text":"[Source] fun box string() : String val","title":"string"},{"location":"termax-ScrollUp/#returns_1","text":"String val","title":"Returns"},{"location":"termax-ScrollUp/#eq","text":"[Source] fun box eq( that: ScrollUp val) : Bool val","title":"eq"},{"location":"termax-ScrollUp/#parameters","text":"that: ScrollUp val","title":"Parameters"},{"location":"termax-ScrollUp/#returns_2","text":"Bool val","title":"Returns"},{"location":"termax-ScrollUp/#ne","text":"[Source] fun box ne( that: ScrollUp val) : Bool val","title":"ne"},{"location":"termax-ScrollUp/#parameters_1","text":"that: ScrollUp val","title":"Parameters"},{"location":"termax-ScrollUp/#returns_3","text":"Bool val","title":"Returns"},{"location":"termax-SingleDashedLine/","text":"SingleDashedLine \u00b6 [Source] Single dashed line style for drawing a grid. primitive val SingleDashedLine is GridChars val Implements \u00b6 GridChars val Constructors \u00b6 create \u00b6 [Source] new val create() : SingleDashedLine val^ Returns \u00b6 SingleDashedLine val^ Public Functions \u00b6 top_left \u00b6 [Source] fun box top_left() : String val Returns \u00b6 String val top_right \u00b6 [Source] fun box top_right() : String val Returns \u00b6 String val bottom_left \u00b6 [Source] fun box bottom_left() : String val Returns \u00b6 String val bottom_right \u00b6 [Source] fun box bottom_right() : String val Returns \u00b6 String val side \u00b6 [Source] fun box side() : String val Returns \u00b6 String val bar \u00b6 [Source] fun box bar() : String val Returns \u00b6 String val left_join \u00b6 [Source] fun box left_join() : String val Returns \u00b6 String val right_join \u00b6 [Source] fun box right_join() : String val Returns \u00b6 String val top_join \u00b6 [Source] fun box top_join() : String val Returns \u00b6 String val bottom_join \u00b6 [Source] fun box bottom_join() : String val Returns \u00b6 String val mid_join \u00b6 [Source] fun box mid_join() : String val Returns \u00b6 String val eq \u00b6 [Source] fun box eq( that: SingleDashedLine val) : Bool val Parameters \u00b6 that: SingleDashedLine val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: SingleDashedLine val) : Bool val Parameters \u00b6 that: SingleDashedLine val Returns \u00b6 Bool val","title":"primitive SingleDashedLine"},{"location":"termax-SingleDashedLine/#singledashedline","text":"[Source] Single dashed line style for drawing a grid. primitive val SingleDashedLine is GridChars val","title":"SingleDashedLine"},{"location":"termax-SingleDashedLine/#implements","text":"GridChars val","title":"Implements"},{"location":"termax-SingleDashedLine/#constructors","text":"","title":"Constructors"},{"location":"termax-SingleDashedLine/#create","text":"[Source] new val create() : SingleDashedLine val^","title":"create"},{"location":"termax-SingleDashedLine/#returns","text":"SingleDashedLine val^","title":"Returns"},{"location":"termax-SingleDashedLine/#public-functions","text":"","title":"Public Functions"},{"location":"termax-SingleDashedLine/#top_left","text":"[Source] fun box top_left() : String val","title":"top_left"},{"location":"termax-SingleDashedLine/#returns_1","text":"String val","title":"Returns"},{"location":"termax-SingleDashedLine/#top_right","text":"[Source] fun box top_right() : String val","title":"top_right"},{"location":"termax-SingleDashedLine/#returns_2","text":"String val","title":"Returns"},{"location":"termax-SingleDashedLine/#bottom_left","text":"[Source] fun box bottom_left() : String val","title":"bottom_left"},{"location":"termax-SingleDashedLine/#returns_3","text":"String val","title":"Returns"},{"location":"termax-SingleDashedLine/#bottom_right","text":"[Source] fun box bottom_right() : String val","title":"bottom_right"},{"location":"termax-SingleDashedLine/#returns_4","text":"String val","title":"Returns"},{"location":"termax-SingleDashedLine/#side","text":"[Source] fun box side() : String val","title":"side"},{"location":"termax-SingleDashedLine/#returns_5","text":"String val","title":"Returns"},{"location":"termax-SingleDashedLine/#bar","text":"[Source] fun box bar() : String val","title":"bar"},{"location":"termax-SingleDashedLine/#returns_6","text":"String val","title":"Returns"},{"location":"termax-SingleDashedLine/#left_join","text":"[Source] fun box left_join() : String val","title":"left_join"},{"location":"termax-SingleDashedLine/#returns_7","text":"String val","title":"Returns"},{"location":"termax-SingleDashedLine/#right_join","text":"[Source] fun box right_join() : String val","title":"right_join"},{"location":"termax-SingleDashedLine/#returns_8","text":"String val","title":"Returns"},{"location":"termax-SingleDashedLine/#top_join","text":"[Source] fun box top_join() : String val","title":"top_join"},{"location":"termax-SingleDashedLine/#returns_9","text":"String val","title":"Returns"},{"location":"termax-SingleDashedLine/#bottom_join","text":"[Source] fun box bottom_join() : String val","title":"bottom_join"},{"location":"termax-SingleDashedLine/#returns_10","text":"String val","title":"Returns"},{"location":"termax-SingleDashedLine/#mid_join","text":"[Source] fun box mid_join() : String val","title":"mid_join"},{"location":"termax-SingleDashedLine/#returns_11","text":"String val","title":"Returns"},{"location":"termax-SingleDashedLine/#eq","text":"[Source] fun box eq( that: SingleDashedLine val) : Bool val","title":"eq"},{"location":"termax-SingleDashedLine/#parameters","text":"that: SingleDashedLine val","title":"Parameters"},{"location":"termax-SingleDashedLine/#returns_12","text":"Bool val","title":"Returns"},{"location":"termax-SingleDashedLine/#ne","text":"[Source] fun box ne( that: SingleDashedLine val) : Bool val","title":"ne"},{"location":"termax-SingleDashedLine/#parameters_1","text":"that: SingleDashedLine val","title":"Parameters"},{"location":"termax-SingleDashedLine/#returns_13","text":"Bool val","title":"Returns"},{"location":"termax-SingleSolidLine/","text":"SingleSolidLine \u00b6 [Source] Single solid line style for drawing a grid. primitive val SingleSolidLine is GridChars val Implements \u00b6 GridChars val Constructors \u00b6 create \u00b6 [Source] new val create() : SingleSolidLine val^ Returns \u00b6 SingleSolidLine val^ Public Functions \u00b6 top_left \u00b6 [Source] fun box top_left() : String val Returns \u00b6 String val top_right \u00b6 [Source] fun box top_right() : String val Returns \u00b6 String val bottom_left \u00b6 [Source] fun box bottom_left() : String val Returns \u00b6 String val bottom_right \u00b6 [Source] fun box bottom_right() : String val Returns \u00b6 String val side \u00b6 [Source] fun box side() : String val Returns \u00b6 String val bar \u00b6 [Source] fun box bar() : String val Returns \u00b6 String val left_join \u00b6 [Source] fun box left_join() : String val Returns \u00b6 String val right_join \u00b6 [Source] fun box right_join() : String val Returns \u00b6 String val top_join \u00b6 [Source] fun box top_join() : String val Returns \u00b6 String val bottom_join \u00b6 [Source] fun box bottom_join() : String val Returns \u00b6 String val mid_join \u00b6 [Source] fun box mid_join() : String val Returns \u00b6 String val eq \u00b6 [Source] fun box eq( that: SingleSolidLine val) : Bool val Parameters \u00b6 that: SingleSolidLine val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: SingleSolidLine val) : Bool val Parameters \u00b6 that: SingleSolidLine val Returns \u00b6 Bool val","title":"primitive SingleSolidLine"},{"location":"termax-SingleSolidLine/#singlesolidline","text":"[Source] Single solid line style for drawing a grid. primitive val SingleSolidLine is GridChars val","title":"SingleSolidLine"},{"location":"termax-SingleSolidLine/#implements","text":"GridChars val","title":"Implements"},{"location":"termax-SingleSolidLine/#constructors","text":"","title":"Constructors"},{"location":"termax-SingleSolidLine/#create","text":"[Source] new val create() : SingleSolidLine val^","title":"create"},{"location":"termax-SingleSolidLine/#returns","text":"SingleSolidLine val^","title":"Returns"},{"location":"termax-SingleSolidLine/#public-functions","text":"","title":"Public Functions"},{"location":"termax-SingleSolidLine/#top_left","text":"[Source] fun box top_left() : String val","title":"top_left"},{"location":"termax-SingleSolidLine/#returns_1","text":"String val","title":"Returns"},{"location":"termax-SingleSolidLine/#top_right","text":"[Source] fun box top_right() : String val","title":"top_right"},{"location":"termax-SingleSolidLine/#returns_2","text":"String val","title":"Returns"},{"location":"termax-SingleSolidLine/#bottom_left","text":"[Source] fun box bottom_left() : String val","title":"bottom_left"},{"location":"termax-SingleSolidLine/#returns_3","text":"String val","title":"Returns"},{"location":"termax-SingleSolidLine/#bottom_right","text":"[Source] fun box bottom_right() : String val","title":"bottom_right"},{"location":"termax-SingleSolidLine/#returns_4","text":"String val","title":"Returns"},{"location":"termax-SingleSolidLine/#side","text":"[Source] fun box side() : String val","title":"side"},{"location":"termax-SingleSolidLine/#returns_5","text":"String val","title":"Returns"},{"location":"termax-SingleSolidLine/#bar","text":"[Source] fun box bar() : String val","title":"bar"},{"location":"termax-SingleSolidLine/#returns_6","text":"String val","title":"Returns"},{"location":"termax-SingleSolidLine/#left_join","text":"[Source] fun box left_join() : String val","title":"left_join"},{"location":"termax-SingleSolidLine/#returns_7","text":"String val","title":"Returns"},{"location":"termax-SingleSolidLine/#right_join","text":"[Source] fun box right_join() : String val","title":"right_join"},{"location":"termax-SingleSolidLine/#returns_8","text":"String val","title":"Returns"},{"location":"termax-SingleSolidLine/#top_join","text":"[Source] fun box top_join() : String val","title":"top_join"},{"location":"termax-SingleSolidLine/#returns_9","text":"String val","title":"Returns"},{"location":"termax-SingleSolidLine/#bottom_join","text":"[Source] fun box bottom_join() : String val","title":"bottom_join"},{"location":"termax-SingleSolidLine/#returns_10","text":"String val","title":"Returns"},{"location":"termax-SingleSolidLine/#mid_join","text":"[Source] fun box mid_join() : String val","title":"mid_join"},{"location":"termax-SingleSolidLine/#returns_11","text":"String val","title":"Returns"},{"location":"termax-SingleSolidLine/#eq","text":"[Source] fun box eq( that: SingleSolidLine val) : Bool val","title":"eq"},{"location":"termax-SingleSolidLine/#parameters","text":"that: SingleSolidLine val","title":"Parameters"},{"location":"termax-SingleSolidLine/#returns_12","text":"Bool val","title":"Returns"},{"location":"termax-SingleSolidLine/#ne","text":"[Source] fun box ne( that: SingleSolidLine val) : Bool val","title":"ne"},{"location":"termax-SingleSolidLine/#parameters_1","text":"that: SingleSolidLine val","title":"Parameters"},{"location":"termax-SingleSolidLine/#returns_13","text":"Bool val","title":"Returns"},{"location":"termax-Term/","text":"Term \u00b6 [Source] These strings can be embedded in text when writing to a StdStream to create a text-based UI. primitive val Term is TerminalEscapeCodes ref Implements \u00b6 TerminalEscapeCodes ref Constructors \u00b6 create \u00b6 [Source] new val create() : Term val^ Returns \u00b6 Term val^ Public Functions \u00b6 up \u00b6 [Source] fun box up( n: U32 val = 0) : String val Parameters \u00b6 n: U32 val = 0 Returns \u00b6 String val down \u00b6 [Source] fun box down( n: U32 val = 0) : String val Parameters \u00b6 n: U32 val = 0 Returns \u00b6 String val right \u00b6 [Source] fun box right( n: U32 val = 0) : String val Parameters \u00b6 n: U32 val = 0 Returns \u00b6 String val left \u00b6 [Source] fun box left( n: U32 val = 0) : String val Parameters \u00b6 n: U32 val = 0 Returns \u00b6 String val cursor \u00b6 [Source] fun box cursor( x: U32 val = 0, y: U32 val = 0) : String val Parameters \u00b6 x: U32 val = 0 y: U32 val = 0 Returns \u00b6 String val clear \u00b6 [Source] fun box clear( how_much: (EraseBefore val | EraseAfter val | EraseAll val) = reference) : String val Parameters \u00b6 how_much: ( EraseBefore val | EraseAfter val | EraseAll val) = reference Returns \u00b6 String val erase \u00b6 [Source] fun box erase( how_much: (EraseBefore val | EraseAfter val | EraseAll val) = reference) : String val Parameters \u00b6 how_much: ( EraseBefore val | EraseAfter val | EraseAll val) = reference Returns \u00b6 String val reset \u00b6 [Source] fun box reset() : String val Returns \u00b6 String val bold \u00b6 [Source] fun box bold( state: Bool val = true) : String val Parameters \u00b6 state: Bool val = true Returns \u00b6 String val underline \u00b6 [Source] fun box underline( state: Bool val = true) : String val Parameters \u00b6 state: Bool val = true Returns \u00b6 String val blink \u00b6 [Source] fun box blink( state: Bool val = true) : String val Parameters \u00b6 state: Bool val = true Returns \u00b6 String val reverse \u00b6 [Source] fun box reverse( state: Bool val = true) : String val Parameters \u00b6 state: Bool val = true Returns \u00b6 String val black \u00b6 [Source] fun box black() : String val Returns \u00b6 String val red \u00b6 [Source] fun box red() : String val Returns \u00b6 String val green \u00b6 [Source] fun box green() : String val Returns \u00b6 String val yellow \u00b6 [Source] fun box yellow() : String val Returns \u00b6 String val blue \u00b6 [Source] fun box blue() : String val Returns \u00b6 String val magenta \u00b6 [Source] fun box magenta() : String val Returns \u00b6 String val cyan \u00b6 [Source] fun box cyan() : String val Returns \u00b6 String val grey \u00b6 [Source] fun box grey() : String val Returns \u00b6 String val white \u00b6 [Source] fun box white() : String val Returns \u00b6 String val bright_red \u00b6 [Source] fun box bright_red() : String val Returns \u00b6 String val bright_green \u00b6 [Source] fun box bright_green() : String val Returns \u00b6 String val bright_yellow \u00b6 [Source] fun box bright_yellow() : String val Returns \u00b6 String val bright_blue \u00b6 [Source] fun box bright_blue() : String val Returns \u00b6 String val bright_magenta \u00b6 [Source] fun box bright_magenta() : String val Returns \u00b6 String val bright_cyan \u00b6 [Source] fun box bright_cyan() : String val Returns \u00b6 String val bright_grey \u00b6 [Source] fun box bright_grey() : String val Returns \u00b6 String val black_bg \u00b6 [Source] fun box black_bg() : String val Returns \u00b6 String val red_bg \u00b6 [Source] fun box red_bg() : String val Returns \u00b6 String val green_bg \u00b6 [Source] fun box green_bg() : String val Returns \u00b6 String val yellow_bg \u00b6 [Source] fun box yellow_bg() : String val Returns \u00b6 String val blue_bg \u00b6 [Source] fun box blue_bg() : String val Returns \u00b6 String val magenta_bg \u00b6 [Source] fun box magenta_bg() : String val Returns \u00b6 String val cyan_bg \u00b6 [Source] fun box cyan_bg() : String val Returns \u00b6 String val grey_bg \u00b6 [Source] fun box grey_bg() : String val Returns \u00b6 String val white_bg \u00b6 [Source] fun box white_bg() : String val Returns \u00b6 String val bright_red_bg \u00b6 [Source] fun box bright_red_bg() : String val Returns \u00b6 String val bright_green_bg \u00b6 [Source] fun box bright_green_bg() : String val Returns \u00b6 String val bright_yellow_bg \u00b6 [Source] fun box bright_yellow_bg() : String val Returns \u00b6 String val bright_blue_bg \u00b6 [Source] fun box bright_blue_bg() : String val Returns \u00b6 String val bright_magenta_bg \u00b6 [Source] fun box bright_magenta_bg() : String val Returns \u00b6 String val bright_cyan_bg \u00b6 [Source] fun box bright_cyan_bg() : String val Returns \u00b6 String val bright_grey_bg \u00b6 [Source] fun box bright_grey_bg() : String val Returns \u00b6 String val cursor_save \u00b6 [Source] fun box cursor_save() : String val Returns \u00b6 String val cursor_restore \u00b6 [Source] fun box cursor_restore() : String val Returns \u00b6 String val cursor_hide \u00b6 [Source] fun box cursor_hide() : String val Returns \u00b6 String val cursor_show \u00b6 [Source] fun box cursor_show() : String val Returns \u00b6 String val switch_to_alt_screen \u00b6 [Source] fun box switch_to_alt_screen() : String val Returns \u00b6 String val switch_to_normal_screen \u00b6 [Source] fun box switch_to_normal_screen() : String val Returns \u00b6 String val mouse_enable \u00b6 [Source] fun box mouse_enable() : String val Returns \u00b6 String val mouse_disable \u00b6 [Source] fun box mouse_disable() : String val Returns \u00b6 String val reset_color \u00b6 [Source] fun box reset_color() : String val Returns \u00b6 String val reset_color_bg \u00b6 [Source] fun box reset_color_bg() : String val Returns \u00b6 String val color \u00b6 [Source] fun box color( fg: U8 val) : String val Parameters \u00b6 fg: U8 val Returns \u00b6 String val color_bg \u00b6 [Source] fun box color_bg( bg: U8 val) : String val Parameters \u00b6 bg: U8 val Returns \u00b6 String val faint \u00b6 [Source] fun box faint( state: Bool val = true) : String val Parameters \u00b6 state: Bool val = true Returns \u00b6 String val italics \u00b6 [Source] fun box italics( state: Bool val = true) : String val Parameters \u00b6 state: Bool val = true Returns \u00b6 String val invert \u00b6 [Source] fun box invert( state: Bool val = true) : String val Parameters \u00b6 state: Bool val = true Returns \u00b6 String val conceal \u00b6 [Source] fun box conceal( state: Bool val = true) : String val Parameters \u00b6 state: Bool val = true Returns \u00b6 String val strikeout \u00b6 [Source] fun box strikeout( state: Bool val = true) : String val Parameters \u00b6 state: Bool val = true Returns \u00b6 String val repeat_char \u00b6 [Source] fun box repeat_char( char: String val, times: U32 val) : String val Parameters \u00b6 char: String val times: U32 val Returns \u00b6 String val eq \u00b6 [Source] fun box eq( that: Term val) : Bool val Parameters \u00b6 that: Term val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: Term val) : Bool val Parameters \u00b6 that: Term val Returns \u00b6 Bool val","title":"primitive Term"},{"location":"termax-Term/#term","text":"[Source] These strings can be embedded in text when writing to a StdStream to create a text-based UI. primitive val Term is TerminalEscapeCodes ref","title":"Term"},{"location":"termax-Term/#implements","text":"TerminalEscapeCodes ref","title":"Implements"},{"location":"termax-Term/#constructors","text":"","title":"Constructors"},{"location":"termax-Term/#create","text":"[Source] new val create() : Term val^","title":"create"},{"location":"termax-Term/#returns","text":"Term val^","title":"Returns"},{"location":"termax-Term/#public-functions","text":"","title":"Public Functions"},{"location":"termax-Term/#up","text":"[Source] fun box up( n: U32 val = 0) : String val","title":"up"},{"location":"termax-Term/#parameters","text":"n: U32 val = 0","title":"Parameters"},{"location":"termax-Term/#returns_1","text":"String val","title":"Returns"},{"location":"termax-Term/#down","text":"[Source] fun box down( n: U32 val = 0) : String val","title":"down"},{"location":"termax-Term/#parameters_1","text":"n: U32 val = 0","title":"Parameters"},{"location":"termax-Term/#returns_2","text":"String val","title":"Returns"},{"location":"termax-Term/#right","text":"[Source] fun box right( n: U32 val = 0) : String val","title":"right"},{"location":"termax-Term/#parameters_2","text":"n: U32 val = 0","title":"Parameters"},{"location":"termax-Term/#returns_3","text":"String val","title":"Returns"},{"location":"termax-Term/#left","text":"[Source] fun box left( n: U32 val = 0) : String val","title":"left"},{"location":"termax-Term/#parameters_3","text":"n: U32 val = 0","title":"Parameters"},{"location":"termax-Term/#returns_4","text":"String val","title":"Returns"},{"location":"termax-Term/#cursor","text":"[Source] fun box cursor( x: U32 val = 0, y: U32 val = 0) : String val","title":"cursor"},{"location":"termax-Term/#parameters_4","text":"x: U32 val = 0 y: U32 val = 0","title":"Parameters"},{"location":"termax-Term/#returns_5","text":"String val","title":"Returns"},{"location":"termax-Term/#clear","text":"[Source] fun box clear( how_much: (EraseBefore val | EraseAfter val | EraseAll val) = reference) : String val","title":"clear"},{"location":"termax-Term/#parameters_5","text":"how_much: ( EraseBefore val | EraseAfter val | EraseAll val) = reference","title":"Parameters"},{"location":"termax-Term/#returns_6","text":"String val","title":"Returns"},{"location":"termax-Term/#erase","text":"[Source] fun box erase( how_much: (EraseBefore val | EraseAfter val | EraseAll val) = reference) : String val","title":"erase"},{"location":"termax-Term/#parameters_6","text":"how_much: ( EraseBefore val | EraseAfter val | EraseAll val) = reference","title":"Parameters"},{"location":"termax-Term/#returns_7","text":"String val","title":"Returns"},{"location":"termax-Term/#reset","text":"[Source] fun box reset() : String val","title":"reset"},{"location":"termax-Term/#returns_8","text":"String val","title":"Returns"},{"location":"termax-Term/#bold","text":"[Source] fun box bold( state: Bool val = true) : String val","title":"bold"},{"location":"termax-Term/#parameters_7","text":"state: Bool val = true","title":"Parameters"},{"location":"termax-Term/#returns_9","text":"String val","title":"Returns"},{"location":"termax-Term/#underline","text":"[Source] fun box underline( state: Bool val = true) : String val","title":"underline"},{"location":"termax-Term/#parameters_8","text":"state: Bool val = true","title":"Parameters"},{"location":"termax-Term/#returns_10","text":"String val","title":"Returns"},{"location":"termax-Term/#blink","text":"[Source] fun box blink( state: Bool val = true) : String val","title":"blink"},{"location":"termax-Term/#parameters_9","text":"state: Bool val = true","title":"Parameters"},{"location":"termax-Term/#returns_11","text":"String val","title":"Returns"},{"location":"termax-Term/#reverse","text":"[Source] fun box reverse( state: Bool val = true) : String val","title":"reverse"},{"location":"termax-Term/#parameters_10","text":"state: Bool val = true","title":"Parameters"},{"location":"termax-Term/#returns_12","text":"String val","title":"Returns"},{"location":"termax-Term/#black","text":"[Source] fun box black() : String val","title":"black"},{"location":"termax-Term/#returns_13","text":"String val","title":"Returns"},{"location":"termax-Term/#red","text":"[Source] fun box red() : String val","title":"red"},{"location":"termax-Term/#returns_14","text":"String val","title":"Returns"},{"location":"termax-Term/#green","text":"[Source] fun box green() : String val","title":"green"},{"location":"termax-Term/#returns_15","text":"String val","title":"Returns"},{"location":"termax-Term/#yellow","text":"[Source] fun box yellow() : String val","title":"yellow"},{"location":"termax-Term/#returns_16","text":"String val","title":"Returns"},{"location":"termax-Term/#blue","text":"[Source] fun box blue() : String val","title":"blue"},{"location":"termax-Term/#returns_17","text":"String val","title":"Returns"},{"location":"termax-Term/#magenta","text":"[Source] fun box magenta() : String val","title":"magenta"},{"location":"termax-Term/#returns_18","text":"String val","title":"Returns"},{"location":"termax-Term/#cyan","text":"[Source] fun box cyan() : String val","title":"cyan"},{"location":"termax-Term/#returns_19","text":"String val","title":"Returns"},{"location":"termax-Term/#grey","text":"[Source] fun box grey() : String val","title":"grey"},{"location":"termax-Term/#returns_20","text":"String val","title":"Returns"},{"location":"termax-Term/#white","text":"[Source] fun box white() : String val","title":"white"},{"location":"termax-Term/#returns_21","text":"String val","title":"Returns"},{"location":"termax-Term/#bright_red","text":"[Source] fun box bright_red() : String val","title":"bright_red"},{"location":"termax-Term/#returns_22","text":"String val","title":"Returns"},{"location":"termax-Term/#bright_green","text":"[Source] fun box bright_green() : String val","title":"bright_green"},{"location":"termax-Term/#returns_23","text":"String val","title":"Returns"},{"location":"termax-Term/#bright_yellow","text":"[Source] fun box bright_yellow() : String val","title":"bright_yellow"},{"location":"termax-Term/#returns_24","text":"String val","title":"Returns"},{"location":"termax-Term/#bright_blue","text":"[Source] fun box bright_blue() : String val","title":"bright_blue"},{"location":"termax-Term/#returns_25","text":"String val","title":"Returns"},{"location":"termax-Term/#bright_magenta","text":"[Source] fun box bright_magenta() : String val","title":"bright_magenta"},{"location":"termax-Term/#returns_26","text":"String val","title":"Returns"},{"location":"termax-Term/#bright_cyan","text":"[Source] fun box bright_cyan() : String val","title":"bright_cyan"},{"location":"termax-Term/#returns_27","text":"String val","title":"Returns"},{"location":"termax-Term/#bright_grey","text":"[Source] fun box bright_grey() : String val","title":"bright_grey"},{"location":"termax-Term/#returns_28","text":"String val","title":"Returns"},{"location":"termax-Term/#black_bg","text":"[Source] fun box black_bg() : String val","title":"black_bg"},{"location":"termax-Term/#returns_29","text":"String val","title":"Returns"},{"location":"termax-Term/#red_bg","text":"[Source] fun box red_bg() : String val","title":"red_bg"},{"location":"termax-Term/#returns_30","text":"String val","title":"Returns"},{"location":"termax-Term/#green_bg","text":"[Source] fun box green_bg() : String val","title":"green_bg"},{"location":"termax-Term/#returns_31","text":"String val","title":"Returns"},{"location":"termax-Term/#yellow_bg","text":"[Source] fun box yellow_bg() : String val","title":"yellow_bg"},{"location":"termax-Term/#returns_32","text":"String val","title":"Returns"},{"location":"termax-Term/#blue_bg","text":"[Source] fun box blue_bg() : String val","title":"blue_bg"},{"location":"termax-Term/#returns_33","text":"String val","title":"Returns"},{"location":"termax-Term/#magenta_bg","text":"[Source] fun box magenta_bg() : String val","title":"magenta_bg"},{"location":"termax-Term/#returns_34","text":"String val","title":"Returns"},{"location":"termax-Term/#cyan_bg","text":"[Source] fun box cyan_bg() : String val","title":"cyan_bg"},{"location":"termax-Term/#returns_35","text":"String val","title":"Returns"},{"location":"termax-Term/#grey_bg","text":"[Source] fun box grey_bg() : String val","title":"grey_bg"},{"location":"termax-Term/#returns_36","text":"String val","title":"Returns"},{"location":"termax-Term/#white_bg","text":"[Source] fun box white_bg() : String val","title":"white_bg"},{"location":"termax-Term/#returns_37","text":"String val","title":"Returns"},{"location":"termax-Term/#bright_red_bg","text":"[Source] fun box bright_red_bg() : String val","title":"bright_red_bg"},{"location":"termax-Term/#returns_38","text":"String val","title":"Returns"},{"location":"termax-Term/#bright_green_bg","text":"[Source] fun box bright_green_bg() : String val","title":"bright_green_bg"},{"location":"termax-Term/#returns_39","text":"String val","title":"Returns"},{"location":"termax-Term/#bright_yellow_bg","text":"[Source] fun box bright_yellow_bg() : String val","title":"bright_yellow_bg"},{"location":"termax-Term/#returns_40","text":"String val","title":"Returns"},{"location":"termax-Term/#bright_blue_bg","text":"[Source] fun box bright_blue_bg() : String val","title":"bright_blue_bg"},{"location":"termax-Term/#returns_41","text":"String val","title":"Returns"},{"location":"termax-Term/#bright_magenta_bg","text":"[Source] fun box bright_magenta_bg() : String val","title":"bright_magenta_bg"},{"location":"termax-Term/#returns_42","text":"String val","title":"Returns"},{"location":"termax-Term/#bright_cyan_bg","text":"[Source] fun box bright_cyan_bg() : String val","title":"bright_cyan_bg"},{"location":"termax-Term/#returns_43","text":"String val","title":"Returns"},{"location":"termax-Term/#bright_grey_bg","text":"[Source] fun box bright_grey_bg() : String val","title":"bright_grey_bg"},{"location":"termax-Term/#returns_44","text":"String val","title":"Returns"},{"location":"termax-Term/#cursor_save","text":"[Source] fun box cursor_save() : String val","title":"cursor_save"},{"location":"termax-Term/#returns_45","text":"String val","title":"Returns"},{"location":"termax-Term/#cursor_restore","text":"[Source] fun box cursor_restore() : String val","title":"cursor_restore"},{"location":"termax-Term/#returns_46","text":"String val","title":"Returns"},{"location":"termax-Term/#cursor_hide","text":"[Source] fun box cursor_hide() : String val","title":"cursor_hide"},{"location":"termax-Term/#returns_47","text":"String val","title":"Returns"},{"location":"termax-Term/#cursor_show","text":"[Source] fun box cursor_show() : String val","title":"cursor_show"},{"location":"termax-Term/#returns_48","text":"String val","title":"Returns"},{"location":"termax-Term/#switch_to_alt_screen","text":"[Source] fun box switch_to_alt_screen() : String val","title":"switch_to_alt_screen"},{"location":"termax-Term/#returns_49","text":"String val","title":"Returns"},{"location":"termax-Term/#switch_to_normal_screen","text":"[Source] fun box switch_to_normal_screen() : String val","title":"switch_to_normal_screen"},{"location":"termax-Term/#returns_50","text":"String val","title":"Returns"},{"location":"termax-Term/#mouse_enable","text":"[Source] fun box mouse_enable() : String val","title":"mouse_enable"},{"location":"termax-Term/#returns_51","text":"String val","title":"Returns"},{"location":"termax-Term/#mouse_disable","text":"[Source] fun box mouse_disable() : String val","title":"mouse_disable"},{"location":"termax-Term/#returns_52","text":"String val","title":"Returns"},{"location":"termax-Term/#reset_color","text":"[Source] fun box reset_color() : String val","title":"reset_color"},{"location":"termax-Term/#returns_53","text":"String val","title":"Returns"},{"location":"termax-Term/#reset_color_bg","text":"[Source] fun box reset_color_bg() : String val","title":"reset_color_bg"},{"location":"termax-Term/#returns_54","text":"String val","title":"Returns"},{"location":"termax-Term/#color","text":"[Source] fun box color( fg: U8 val) : String val","title":"color"},{"location":"termax-Term/#parameters_11","text":"fg: U8 val","title":"Parameters"},{"location":"termax-Term/#returns_55","text":"String val","title":"Returns"},{"location":"termax-Term/#color_bg","text":"[Source] fun box color_bg( bg: U8 val) : String val","title":"color_bg"},{"location":"termax-Term/#parameters_12","text":"bg: U8 val","title":"Parameters"},{"location":"termax-Term/#returns_56","text":"String val","title":"Returns"},{"location":"termax-Term/#faint","text":"[Source] fun box faint( state: Bool val = true) : String val","title":"faint"},{"location":"termax-Term/#parameters_13","text":"state: Bool val = true","title":"Parameters"},{"location":"termax-Term/#returns_57","text":"String val","title":"Returns"},{"location":"termax-Term/#italics","text":"[Source] fun box italics( state: Bool val = true) : String val","title":"italics"},{"location":"termax-Term/#parameters_14","text":"state: Bool val = true","title":"Parameters"},{"location":"termax-Term/#returns_58","text":"String val","title":"Returns"},{"location":"termax-Term/#invert","text":"[Source] fun box invert( state: Bool val = true) : String val","title":"invert"},{"location":"termax-Term/#parameters_15","text":"state: Bool val = true","title":"Parameters"},{"location":"termax-Term/#returns_59","text":"String val","title":"Returns"},{"location":"termax-Term/#conceal","text":"[Source] fun box conceal( state: Bool val = true) : String val","title":"conceal"},{"location":"termax-Term/#parameters_16","text":"state: Bool val = true","title":"Parameters"},{"location":"termax-Term/#returns_60","text":"String val","title":"Returns"},{"location":"termax-Term/#strikeout","text":"[Source] fun box strikeout( state: Bool val = true) : String val","title":"strikeout"},{"location":"termax-Term/#parameters_17","text":"state: Bool val = true","title":"Parameters"},{"location":"termax-Term/#returns_61","text":"String val","title":"Returns"},{"location":"termax-Term/#repeat_char","text":"[Source] fun box repeat_char( char: String val, times: U32 val) : String val","title":"repeat_char"},{"location":"termax-Term/#parameters_18","text":"char: String val times: U32 val","title":"Parameters"},{"location":"termax-Term/#returns_62","text":"String val","title":"Returns"},{"location":"termax-Term/#eq","text":"[Source] fun box eq( that: Term val) : Bool val","title":"eq"},{"location":"termax-Term/#parameters_19","text":"that: Term val","title":"Parameters"},{"location":"termax-Term/#returns_63","text":"Bool val","title":"Returns"},{"location":"termax-Term/#ne","text":"[Source] fun box ne( that: Term val) : Bool val","title":"ne"},{"location":"termax-Term/#parameters_20","text":"that: Term val","title":"Parameters"},{"location":"termax-Term/#returns_64","text":"Bool val","title":"Returns"},{"location":"termax-TermDraw/","text":"TermDraw \u00b6 [Source] Use this primitive directly to draw shapes. primitive val TermDraw is TerminalDrawing ref Implements \u00b6 TerminalDrawing ref Constructors \u00b6 create \u00b6 [Source] new val create() : TermDraw val^ Returns \u00b6 TermDraw val^ Public Functions \u00b6 hline \u00b6 [Source] fun box hline( width: U32 val, fill: String val) : String val Parameters \u00b6 width: U32 val fill: String val Returns \u00b6 String val vline \u00b6 [Source] fun box vline( height: U32 val, fill: String val) : String val Parameters \u00b6 height: U32 val fill: String val Returns \u00b6 String val fill_rectangle \u00b6 [Source] fun box fill_rectangle( width: U32 val, height: U32 val, fill: String val) : String val Parameters \u00b6 width: U32 val height: U32 val fill: String val Returns \u00b6 String val frame_hline \u00b6 [Source] fun box frame_hline( width: U32 val, style: GridChars val = reference) : String val Parameters \u00b6 width: U32 val style: GridChars val = reference Returns \u00b6 String val frame_vline \u00b6 [Source] fun box frame_vline( height: U32 val, style: GridChars val = reference) : String val Parameters \u00b6 height: U32 val style: GridChars val = reference Returns \u00b6 String val frame \u00b6 [Source] fun box frame( width: U32 val, height: U32 val, style: GridChars val = reference, clear: Bool val = false) : String val Parameters \u00b6 width: U32 val height: U32 val style: GridChars val = reference clear: Bool val = false Returns \u00b6 String val eq \u00b6 [Source] fun box eq( that: TermDraw val) : Bool val Parameters \u00b6 that: TermDraw val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: TermDraw val) : Bool val Parameters \u00b6 that: TermDraw val Returns \u00b6 Bool val","title":"primitive TermDraw"},{"location":"termax-TermDraw/#termdraw","text":"[Source] Use this primitive directly to draw shapes. primitive val TermDraw is TerminalDrawing ref","title":"TermDraw"},{"location":"termax-TermDraw/#implements","text":"TerminalDrawing ref","title":"Implements"},{"location":"termax-TermDraw/#constructors","text":"","title":"Constructors"},{"location":"termax-TermDraw/#create","text":"[Source] new val create() : TermDraw val^","title":"create"},{"location":"termax-TermDraw/#returns","text":"TermDraw val^","title":"Returns"},{"location":"termax-TermDraw/#public-functions","text":"","title":"Public Functions"},{"location":"termax-TermDraw/#hline","text":"[Source] fun box hline( width: U32 val, fill: String val) : String val","title":"hline"},{"location":"termax-TermDraw/#parameters","text":"width: U32 val fill: String val","title":"Parameters"},{"location":"termax-TermDraw/#returns_1","text":"String val","title":"Returns"},{"location":"termax-TermDraw/#vline","text":"[Source] fun box vline( height: U32 val, fill: String val) : String val","title":"vline"},{"location":"termax-TermDraw/#parameters_1","text":"height: U32 val fill: String val","title":"Parameters"},{"location":"termax-TermDraw/#returns_2","text":"String val","title":"Returns"},{"location":"termax-TermDraw/#fill_rectangle","text":"[Source] fun box fill_rectangle( width: U32 val, height: U32 val, fill: String val) : String val","title":"fill_rectangle"},{"location":"termax-TermDraw/#parameters_2","text":"width: U32 val height: U32 val fill: String val","title":"Parameters"},{"location":"termax-TermDraw/#returns_3","text":"String val","title":"Returns"},{"location":"termax-TermDraw/#frame_hline","text":"[Source] fun box frame_hline( width: U32 val, style: GridChars val = reference) : String val","title":"frame_hline"},{"location":"termax-TermDraw/#parameters_3","text":"width: U32 val style: GridChars val = reference","title":"Parameters"},{"location":"termax-TermDraw/#returns_4","text":"String val","title":"Returns"},{"location":"termax-TermDraw/#frame_vline","text":"[Source] fun box frame_vline( height: U32 val, style: GridChars val = reference) : String val","title":"frame_vline"},{"location":"termax-TermDraw/#parameters_4","text":"height: U32 val style: GridChars val = reference","title":"Parameters"},{"location":"termax-TermDraw/#returns_5","text":"String val","title":"Returns"},{"location":"termax-TermDraw/#frame","text":"[Source] fun box frame( width: U32 val, height: U32 val, style: GridChars val = reference, clear: Bool val = false) : String val","title":"frame"},{"location":"termax-TermDraw/#parameters_5","text":"width: U32 val height: U32 val style: GridChars val = reference clear: Bool val = false","title":"Parameters"},{"location":"termax-TermDraw/#returns_6","text":"String val","title":"Returns"},{"location":"termax-TermDraw/#eq","text":"[Source] fun box eq( that: TermDraw val) : Bool val","title":"eq"},{"location":"termax-TermDraw/#parameters_6","text":"that: TermDraw val","title":"Parameters"},{"location":"termax-TermDraw/#returns_7","text":"Bool val","title":"Returns"},{"location":"termax-TermDraw/#ne","text":"[Source] fun box ne( that: TermDraw val) : Bool val","title":"ne"},{"location":"termax-TermDraw/#parameters_7","text":"that: TermDraw val","title":"Parameters"},{"location":"termax-TermDraw/#returns_8","text":"Bool val","title":"Returns"},{"location":"termax-TermOptions/","text":"TermOptions \u00b6 [Source] class val TermOptions Constructors \u00b6 create \u00b6 [Source] Default options are backwards compatible. new val create( capture_ctrl_c: Bool val = false, capture_ctrl_z: Bool val = false) : TermOptions val^ Parameters \u00b6 capture_ctrl_c: Bool val = false capture_ctrl_z: Bool val = false Returns \u00b6 TermOptions val^ Public fields \u00b6 let catch_ctrl_C: Bool val \u00b6 [Source] let catch_ctrl_Z: Bool val \u00b6 [Source]","title":"class TermOptions"},{"location":"termax-TermOptions/#termoptions","text":"[Source] class val TermOptions","title":"TermOptions"},{"location":"termax-TermOptions/#constructors","text":"","title":"Constructors"},{"location":"termax-TermOptions/#create","text":"[Source] Default options are backwards compatible. new val create( capture_ctrl_c: Bool val = false, capture_ctrl_z: Bool val = false) : TermOptions val^","title":"create"},{"location":"termax-TermOptions/#parameters","text":"capture_ctrl_c: Bool val = false capture_ctrl_z: Bool val = false","title":"Parameters"},{"location":"termax-TermOptions/#returns","text":"TermOptions val^","title":"Returns"},{"location":"termax-TermOptions/#public-fields","text":"","title":"Public fields"},{"location":"termax-TermOptions/#let-catch_ctrl_c-bool-val","text":"[Source]","title":"let catch_ctrl_C: Bool val"},{"location":"termax-TermOptions/#let-catch_ctrl_z-bool-val","text":"[Source]","title":"let catch_ctrl_Z: Bool val"},{"location":"termax-TermText/","text":"TermText \u00b6 [Source] Use this primitive directly to format strings. primitive val TermText is TerminalTextFormatting ref Implements \u00b6 TerminalTextFormatting ref Constructors \u00b6 create \u00b6 [Source] new val create() : TermText val^ Returns \u00b6 TermText val^ Public Functions \u00b6 hide \u00b6 [Source] fun box hide( value: Stringable val) : String val Parameters \u00b6 value: Stringable val Returns \u00b6 String val conceal \u00b6 [Source] fun box conceal( value: Stringable val) : String val Parameters \u00b6 value: Stringable val Returns \u00b6 String val bold \u00b6 [Source] fun box bold( value: Stringable val) : String val Parameters \u00b6 value: Stringable val Returns \u00b6 String val faint \u00b6 [Source] fun box faint( value: Stringable val) : String val Parameters \u00b6 value: Stringable val Returns \u00b6 String val invert \u00b6 [Source] fun box invert( value: Stringable val) : String val Parameters \u00b6 value: Stringable val Returns \u00b6 String val italics \u00b6 [Source] fun box italics( value: Stringable val) : String val Parameters \u00b6 value: Stringable val Returns \u00b6 String val underline \u00b6 [Source] fun box underline( value: Stringable val) : String val Parameters \u00b6 value: Stringable val Returns \u00b6 String val strikeout \u00b6 [Source] fun box strikeout( value: Stringable val) : String val Parameters \u00b6 value: Stringable val Returns \u00b6 String val color \u00b6 [Source] fun box color( value: Stringable val, fg: U8 val, bg: (None val | U8 val) = reference) : String val Parameters \u00b6 value: Stringable val fg: U8 val bg: ( None val | U8 val) = reference Returns \u00b6 String val color_with \u00b6 [Source] fun box color_with( value: Stringable val, fg: String val, bg: (None val | String val) = reference) : String val Parameters \u00b6 value: Stringable val fg: String val bg: ( None val | String val) = reference Returns \u00b6 String val eq \u00b6 [Source] fun box eq( that: TermText val) : Bool val Parameters \u00b6 that: TermText val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: TermText val) : Bool val Parameters \u00b6 that: TermText val Returns \u00b6 Bool val","title":"primitive TermText"},{"location":"termax-TermText/#termtext","text":"[Source] Use this primitive directly to format strings. primitive val TermText is TerminalTextFormatting ref","title":"TermText"},{"location":"termax-TermText/#implements","text":"TerminalTextFormatting ref","title":"Implements"},{"location":"termax-TermText/#constructors","text":"","title":"Constructors"},{"location":"termax-TermText/#create","text":"[Source] new val create() : TermText val^","title":"create"},{"location":"termax-TermText/#returns","text":"TermText val^","title":"Returns"},{"location":"termax-TermText/#public-functions","text":"","title":"Public Functions"},{"location":"termax-TermText/#hide","text":"[Source] fun box hide( value: Stringable val) : String val","title":"hide"},{"location":"termax-TermText/#parameters","text":"value: Stringable val","title":"Parameters"},{"location":"termax-TermText/#returns_1","text":"String val","title":"Returns"},{"location":"termax-TermText/#conceal","text":"[Source] fun box conceal( value: Stringable val) : String val","title":"conceal"},{"location":"termax-TermText/#parameters_1","text":"value: Stringable val","title":"Parameters"},{"location":"termax-TermText/#returns_2","text":"String val","title":"Returns"},{"location":"termax-TermText/#bold","text":"[Source] fun box bold( value: Stringable val) : String val","title":"bold"},{"location":"termax-TermText/#parameters_2","text":"value: Stringable val","title":"Parameters"},{"location":"termax-TermText/#returns_3","text":"String val","title":"Returns"},{"location":"termax-TermText/#faint","text":"[Source] fun box faint( value: Stringable val) : String val","title":"faint"},{"location":"termax-TermText/#parameters_3","text":"value: Stringable val","title":"Parameters"},{"location":"termax-TermText/#returns_4","text":"String val","title":"Returns"},{"location":"termax-TermText/#invert","text":"[Source] fun box invert( value: Stringable val) : String val","title":"invert"},{"location":"termax-TermText/#parameters_4","text":"value: Stringable val","title":"Parameters"},{"location":"termax-TermText/#returns_5","text":"String val","title":"Returns"},{"location":"termax-TermText/#italics","text":"[Source] fun box italics( value: Stringable val) : String val","title":"italics"},{"location":"termax-TermText/#parameters_5","text":"value: Stringable val","title":"Parameters"},{"location":"termax-TermText/#returns_6","text":"String val","title":"Returns"},{"location":"termax-TermText/#underline","text":"[Source] fun box underline( value: Stringable val) : String val","title":"underline"},{"location":"termax-TermText/#parameters_6","text":"value: Stringable val","title":"Parameters"},{"location":"termax-TermText/#returns_7","text":"String val","title":"Returns"},{"location":"termax-TermText/#strikeout","text":"[Source] fun box strikeout( value: Stringable val) : String val","title":"strikeout"},{"location":"termax-TermText/#parameters_7","text":"value: Stringable val","title":"Parameters"},{"location":"termax-TermText/#returns_8","text":"String val","title":"Returns"},{"location":"termax-TermText/#color","text":"[Source] fun box color( value: Stringable val, fg: U8 val, bg: (None val | U8 val) = reference) : String val","title":"color"},{"location":"termax-TermText/#parameters_8","text":"value: Stringable val fg: U8 val bg: ( None val | U8 val) = reference","title":"Parameters"},{"location":"termax-TermText/#returns_9","text":"String val","title":"Returns"},{"location":"termax-TermText/#color_with","text":"[Source] fun box color_with( value: Stringable val, fg: String val, bg: (None val | String val) = reference) : String val","title":"color_with"},{"location":"termax-TermText/#parameters_9","text":"value: Stringable val fg: String val bg: ( None val | String val) = reference","title":"Parameters"},{"location":"termax-TermText/#returns_10","text":"String val","title":"Returns"},{"location":"termax-TermText/#eq","text":"[Source] fun box eq( that: TermText val) : Bool val","title":"eq"},{"location":"termax-TermText/#parameters_10","text":"that: TermText val","title":"Parameters"},{"location":"termax-TermText/#returns_11","text":"Bool val","title":"Returns"},{"location":"termax-TermText/#ne","text":"[Source] fun box ne( that: TermText val) : Bool val","title":"ne"},{"location":"termax-TermText/#parameters_11","text":"that: TermText val","title":"Parameters"},{"location":"termax-TermText/#returns_12","text":"Bool val","title":"Returns"},{"location":"termax-Terminal/","text":"Terminal \u00b6 [Source] Handles terminal escape codes from stdin. actor tag Terminal Constructors \u00b6 create \u00b6 [Source] Create a new ANSI term. new tag create( notify: TerminalNotify iso, source: DisposableActor tag, timers: Timers tag = reference, options: TermOptions val = reference) : Terminal tag^ Parameters \u00b6 notify: TerminalNotify iso source: DisposableActor tag timers: Timers tag = reference options: TermOptions val = reference Returns \u00b6 Terminal tag^ Public Behaviours \u00b6 apply \u00b6 [Source] Receives input from stdin. be apply( data: Array[U8 val] iso) Parameters \u00b6 data: Array [ U8 val] iso prompt \u00b6 [Source] Pass a prompt along to the notifier. be prompt( value: String val) Parameters \u00b6 value: String val size \u00b6 [Source] be size() input \u00b6 [Source] Pass the provided input to the notifier. be input( input': U8 val) Parameters \u00b6 input': U8 val dispose \u00b6 [Source] Stop accepting input, inform the notifier we have closed, and dispose of our source. be dispose()","title":"actor Terminal"},{"location":"termax-Terminal/#terminal","text":"[Source] Handles terminal escape codes from stdin. actor tag Terminal","title":"Terminal"},{"location":"termax-Terminal/#constructors","text":"","title":"Constructors"},{"location":"termax-Terminal/#create","text":"[Source] Create a new ANSI term. new tag create( notify: TerminalNotify iso, source: DisposableActor tag, timers: Timers tag = reference, options: TermOptions val = reference) : Terminal tag^","title":"create"},{"location":"termax-Terminal/#parameters","text":"notify: TerminalNotify iso source: DisposableActor tag timers: Timers tag = reference options: TermOptions val = reference","title":"Parameters"},{"location":"termax-Terminal/#returns","text":"Terminal tag^","title":"Returns"},{"location":"termax-Terminal/#public-behaviours","text":"","title":"Public Behaviours"},{"location":"termax-Terminal/#apply","text":"[Source] Receives input from stdin. be apply( data: Array[U8 val] iso)","title":"apply"},{"location":"termax-Terminal/#parameters_1","text":"data: Array [ U8 val] iso","title":"Parameters"},{"location":"termax-Terminal/#prompt","text":"[Source] Pass a prompt along to the notifier. be prompt( value: String val)","title":"prompt"},{"location":"termax-Terminal/#parameters_2","text":"value: String val","title":"Parameters"},{"location":"termax-Terminal/#size","text":"[Source] be size()","title":"size"},{"location":"termax-Terminal/#input","text":"[Source] Pass the provided input to the notifier. be input( input': U8 val)","title":"input"},{"location":"termax-Terminal/#parameters_3","text":"input': U8 val","title":"Parameters"},{"location":"termax-Terminal/#dispose","text":"[Source] Stop accepting input, inform the notifier we have closed, and dispose of our source. be dispose()","title":"dispose"},{"location":"termax-TerminalDrawing/","text":"TerminalDrawing \u00b6 [Source] Defines convenient helper functions for drawing shapes in the terminal trait ref TerminalDrawing Public Functions \u00b6 hline \u00b6 [Source] Draw a horizontal line (row) using any character fun box hline( width: U32 val, fill: String val) : String val Parameters \u00b6 width: U32 val fill: String val Returns \u00b6 String val vline \u00b6 [Source] Draw a vertical line (column) using any character fun box vline( height: U32 val, fill: String val) : String val Parameters \u00b6 height: U32 val fill: String val Returns \u00b6 String val fill_rectangle \u00b6 [Source] Fill a rectangular area with any character fun box fill_rectangle( width: U32 val, height: U32 val, fill: String val) : String val Parameters \u00b6 width: U32 val height: U32 val fill: String val Returns \u00b6 String val frame_hline \u00b6 [Source] Draw a horizontal line using a line style. fun box frame_hline( width: U32 val, style: GridChars val = reference) : String val Parameters \u00b6 width: U32 val style: GridChars val = reference Returns \u00b6 String val frame_vline \u00b6 [Source] Draw a vertical line using a line style. fun box frame_vline( height: U32 val, style: GridChars val = reference) : String val Parameters \u00b6 height: U32 val style: GridChars val = reference Returns \u00b6 String val frame \u00b6 [Source] Draw a rectangle using a line style (default is single solid line) with option to clear the space within the rectangle. fun box frame( width: U32 val, height: U32 val, style: GridChars val = reference, clear: Bool val = false) : String val Parameters \u00b6 width: U32 val height: U32 val style: GridChars val = reference clear: Bool val = false Returns \u00b6 String val","title":"trait TerminalDrawing"},{"location":"termax-TerminalDrawing/#terminaldrawing","text":"[Source] Defines convenient helper functions for drawing shapes in the terminal trait ref TerminalDrawing","title":"TerminalDrawing"},{"location":"termax-TerminalDrawing/#public-functions","text":"","title":"Public Functions"},{"location":"termax-TerminalDrawing/#hline","text":"[Source] Draw a horizontal line (row) using any character fun box hline( width: U32 val, fill: String val) : String val","title":"hline"},{"location":"termax-TerminalDrawing/#parameters","text":"width: U32 val fill: String val","title":"Parameters"},{"location":"termax-TerminalDrawing/#returns","text":"String val","title":"Returns"},{"location":"termax-TerminalDrawing/#vline","text":"[Source] Draw a vertical line (column) using any character fun box vline( height: U32 val, fill: String val) : String val","title":"vline"},{"location":"termax-TerminalDrawing/#parameters_1","text":"height: U32 val fill: String val","title":"Parameters"},{"location":"termax-TerminalDrawing/#returns_1","text":"String val","title":"Returns"},{"location":"termax-TerminalDrawing/#fill_rectangle","text":"[Source] Fill a rectangular area with any character fun box fill_rectangle( width: U32 val, height: U32 val, fill: String val) : String val","title":"fill_rectangle"},{"location":"termax-TerminalDrawing/#parameters_2","text":"width: U32 val height: U32 val fill: String val","title":"Parameters"},{"location":"termax-TerminalDrawing/#returns_2","text":"String val","title":"Returns"},{"location":"termax-TerminalDrawing/#frame_hline","text":"[Source] Draw a horizontal line using a line style. fun box frame_hline( width: U32 val, style: GridChars val = reference) : String val","title":"frame_hline"},{"location":"termax-TerminalDrawing/#parameters_3","text":"width: U32 val style: GridChars val = reference","title":"Parameters"},{"location":"termax-TerminalDrawing/#returns_3","text":"String val","title":"Returns"},{"location":"termax-TerminalDrawing/#frame_vline","text":"[Source] Draw a vertical line using a line style. fun box frame_vline( height: U32 val, style: GridChars val = reference) : String val","title":"frame_vline"},{"location":"termax-TerminalDrawing/#parameters_4","text":"height: U32 val style: GridChars val = reference","title":"Parameters"},{"location":"termax-TerminalDrawing/#returns_4","text":"String val","title":"Returns"},{"location":"termax-TerminalDrawing/#frame","text":"[Source] Draw a rectangle using a line style (default is single solid line) with option to clear the space within the rectangle. fun box frame( width: U32 val, height: U32 val, style: GridChars val = reference, clear: Bool val = false) : String val","title":"frame"},{"location":"termax-TerminalDrawing/#parameters_5","text":"width: U32 val height: U32 val style: GridChars val = reference clear: Bool val = false","title":"Parameters"},{"location":"termax-TerminalDrawing/#returns_5","text":"String val","title":"Returns"},{"location":"termax-TerminalEscapeCodes/","text":"TerminalEscapeCodes \u00b6 [Source] These strings can be embedded in text when writing to a StdStream to create a text-based UI. trait ref TerminalEscapeCodes Public Functions \u00b6 up \u00b6 [Source] Move the cursor up n lines. 0 is the same as 1. fun box up( n: U32 val = 0) : String val Parameters \u00b6 n: U32 val = 0 Returns \u00b6 String val down \u00b6 [Source] Move the cursor down n lines. 0 is the same as 1. fun box down( n: U32 val = 0) : String val Parameters \u00b6 n: U32 val = 0 Returns \u00b6 String val right \u00b6 [Source] Move the cursor right n columns. 0 is the same as 1. fun box right( n: U32 val = 0) : String val Parameters \u00b6 n: U32 val = 0 Returns \u00b6 String val left \u00b6 [Source] Move the cursor left n columns. 0 is the same as 1. fun box left( n: U32 val = 0) : String val Parameters \u00b6 n: U32 val = 0 Returns \u00b6 String val cursor \u00b6 [Source] Move the cursor to line y, column x. 0 is the same as 1. This indexes from the top left corner of the screen. fun box cursor( x: U32 val = 0, y: U32 val = 0) : String val Parameters \u00b6 x: U32 val = 0 y: U32 val = 0 Returns \u00b6 String val clear \u00b6 [Source] Clear the screen and move the cursor to the top left corner. fun box clear( how_much: (EraseBefore val | EraseAfter val | EraseAll val) = reference) : String val Parameters \u00b6 how_much: ( EraseBefore val | EraseAfter val | EraseAll val) = reference Returns \u00b6 String val erase \u00b6 [Source] Erases some or all of the line the cursor is on. fun box erase( how_much: (EraseBefore val | EraseAfter val | EraseAll val) = reference) : String val Parameters \u00b6 how_much: ( EraseBefore val | EraseAfter val | EraseAll val) = reference Returns \u00b6 String val reset \u00b6 [Source] Resets all colours and text styles to the default. fun box reset() : String val Returns \u00b6 String val bold \u00b6 [Source] Bold text. Does nothing on Windows. fun box bold( state: Bool val = true) : String val Parameters \u00b6 state: Bool val = true Returns \u00b6 String val underline \u00b6 [Source] Underlined text. Does nothing on Windows. fun box underline( state: Bool val = true) : String val Parameters \u00b6 state: Bool val = true Returns \u00b6 String val blink \u00b6 [Source] Blinking text. Does nothing on Windows. fun box blink( state: Bool val = true) : String val Parameters \u00b6 state: Bool val = true Returns \u00b6 String val reverse \u00b6 [Source] Swap foreground and background colour. fun box reverse( state: Bool val = true) : String val Parameters \u00b6 state: Bool val = true Returns \u00b6 String val black \u00b6 [Source] Black text. fun box black() : String val Returns \u00b6 String val red \u00b6 [Source] Red text. fun box red() : String val Returns \u00b6 String val green \u00b6 [Source] Green text. fun box green() : String val Returns \u00b6 String val yellow \u00b6 [Source] Yellow text. fun box yellow() : String val Returns \u00b6 String val blue \u00b6 [Source] Blue text. fun box blue() : String val Returns \u00b6 String val magenta \u00b6 [Source] Magenta text. fun box magenta() : String val Returns \u00b6 String val cyan \u00b6 [Source] Cyan text. fun box cyan() : String val Returns \u00b6 String val grey \u00b6 [Source] Grey text. fun box grey() : String val Returns \u00b6 String val white \u00b6 [Source] White text. fun box white() : String val Returns \u00b6 String val bright_red \u00b6 [Source] Bright red text. fun box bright_red() : String val Returns \u00b6 String val bright_green \u00b6 [Source] Bright green text. fun box bright_green() : String val Returns \u00b6 String val bright_yellow \u00b6 [Source] Bright yellow text. fun box bright_yellow() : String val Returns \u00b6 String val bright_blue \u00b6 [Source] Bright blue text. fun box bright_blue() : String val Returns \u00b6 String val bright_magenta \u00b6 [Source] Bright magenta text. fun box bright_magenta() : String val Returns \u00b6 String val bright_cyan \u00b6 [Source] Bright cyan text. fun box bright_cyan() : String val Returns \u00b6 String val bright_grey \u00b6 [Source] Bright grey text. fun box bright_grey() : String val Returns \u00b6 String val black_bg \u00b6 [Source] Black background. fun box black_bg() : String val Returns \u00b6 String val red_bg \u00b6 [Source] Red background. fun box red_bg() : String val Returns \u00b6 String val green_bg \u00b6 [Source] Green background. fun box green_bg() : String val Returns \u00b6 String val yellow_bg \u00b6 [Source] Yellow background. fun box yellow_bg() : String val Returns \u00b6 String val blue_bg \u00b6 [Source] Blue background. fun box blue_bg() : String val Returns \u00b6 String val magenta_bg \u00b6 [Source] Magenta background. fun box magenta_bg() : String val Returns \u00b6 String val cyan_bg \u00b6 [Source] Cyan background. fun box cyan_bg() : String val Returns \u00b6 String val grey_bg \u00b6 [Source] Grey background. fun box grey_bg() : String val Returns \u00b6 String val white_bg \u00b6 [Source] White background. fun box white_bg() : String val Returns \u00b6 String val bright_red_bg \u00b6 [Source] Bright red background. fun box bright_red_bg() : String val Returns \u00b6 String val bright_green_bg \u00b6 [Source] Bright green background. fun box bright_green_bg() : String val Returns \u00b6 String val bright_yellow_bg \u00b6 [Source] Bright yellow background. fun box bright_yellow_bg() : String val Returns \u00b6 String val bright_blue_bg \u00b6 [Source] Bright blue background. fun box bright_blue_bg() : String val Returns \u00b6 String val bright_magenta_bg \u00b6 [Source] Bright magenta background. fun box bright_magenta_bg() : String val Returns \u00b6 String val bright_cyan_bg \u00b6 [Source] Bright cyan background. fun box bright_cyan_bg() : String val Returns \u00b6 String val bright_grey_bg \u00b6 [Source] Bright grey background. fun box bright_grey_bg() : String val Returns \u00b6 String val cursor_save \u00b6 [Source] Save current cursor position fun box cursor_save() : String val Returns \u00b6 String val cursor_restore \u00b6 [Source] Restore last saved cursor position fun box cursor_restore() : String val Returns \u00b6 String val cursor_hide \u00b6 [Source] Hide the terminal cursor fun box cursor_hide() : String val Returns \u00b6 String val cursor_show \u00b6 [Source] Show the terminal cursor fun box cursor_show() : String val Returns \u00b6 String val switch_to_alt_screen \u00b6 [Source] Switch to the alternate screen buffer fun box switch_to_alt_screen() : String val Returns \u00b6 String val switch_to_normal_screen \u00b6 [Source] Switch back to the normal screen buffer fun box switch_to_normal_screen() : String val Returns \u00b6 String val mouse_enable \u00b6 [Source] Enable mouse input events fun box mouse_enable() : String val Returns \u00b6 String val mouse_disable \u00b6 [Source] Disable mouse input handling fun box mouse_disable() : String val Returns \u00b6 String val reset_color \u00b6 [Source] Resets foreground colour (but not the text styles) fun box reset_color() : String val Returns \u00b6 String val reset_color_bg \u00b6 [Source] Resets foreground colour (but not the text styles) fun box reset_color_bg() : String val Returns \u00b6 String val color \u00b6 [Source] Select an 8-bit foreground (text) color. fun box color( fg: U8 val) : String val Parameters \u00b6 fg: U8 val Returns \u00b6 String val color_bg \u00b6 [Source] Select an 8-bit background color. fun box color_bg( bg: U8 val) : String val Parameters \u00b6 bg: U8 val Returns \u00b6 String val faint \u00b6 [Source] Lighten (faint) text. May not work on Windows. fun box faint( state: Bool val = true) : String val Parameters \u00b6 state: Bool val = true Returns \u00b6 String val italics \u00b6 [Source] Italicize text. May not work on Windows. fun box italics( state: Bool val = true) : String val Parameters \u00b6 state: Bool val = true Returns \u00b6 String val invert \u00b6 [Source] Invert foreground/background colour. May not work on Windows. fun box invert( state: Bool val = true) : String val Parameters \u00b6 state: Bool val = true Returns \u00b6 String val conceal \u00b6 [Source] Conceal (hide) the text. May not work on Windows. fun box conceal( state: Bool val = true) : String val Parameters \u00b6 state: Bool val = true Returns \u00b6 String val strikeout \u00b6 [Source] Strike through text. May not work on Windows. fun box strikeout( state: Bool val = true) : String val Parameters \u00b6 state: Bool val = true Returns \u00b6 String val repeat_char \u00b6 [Source] fun box repeat_char( char: String val, times: U32 val) : String val Parameters \u00b6 char: String val times: U32 val Returns \u00b6 String val","title":"trait TerminalEscapeCodes"},{"location":"termax-TerminalEscapeCodes/#terminalescapecodes","text":"[Source] These strings can be embedded in text when writing to a StdStream to create a text-based UI. trait ref TerminalEscapeCodes","title":"TerminalEscapeCodes"},{"location":"termax-TerminalEscapeCodes/#public-functions","text":"","title":"Public Functions"},{"location":"termax-TerminalEscapeCodes/#up","text":"[Source] Move the cursor up n lines. 0 is the same as 1. fun box up( n: U32 val = 0) : String val","title":"up"},{"location":"termax-TerminalEscapeCodes/#parameters","text":"n: U32 val = 0","title":"Parameters"},{"location":"termax-TerminalEscapeCodes/#returns","text":"String val","title":"Returns"},{"location":"termax-TerminalEscapeCodes/#down","text":"[Source] Move the cursor down n lines. 0 is the same as 1. fun box down( n: U32 val = 0) : String val","title":"down"},{"location":"termax-TerminalEscapeCodes/#parameters_1","text":"n: U32 val = 0","title":"Parameters"},{"location":"termax-TerminalEscapeCodes/#returns_1","text":"String val","title":"Returns"},{"location":"termax-TerminalEscapeCodes/#right","text":"[Source] Move the cursor right n columns. 0 is the same as 1. fun box right( n: U32 val = 0) : String val","title":"right"},{"location":"termax-TerminalEscapeCodes/#parameters_2","text":"n: U32 val = 0","title":"Parameters"},{"location":"termax-TerminalEscapeCodes/#returns_2","text":"String val","title":"Returns"},{"location":"termax-TerminalEscapeCodes/#left","text":"[Source] Move the cursor left n columns. 0 is the same as 1. fun box left( n: U32 val = 0) : String val","title":"left"},{"location":"termax-TerminalEscapeCodes/#parameters_3","text":"n: U32 val = 0","title":"Parameters"},{"location":"termax-TerminalEscapeCodes/#returns_3","text":"String val","title":"Returns"},{"location":"termax-TerminalEscapeCodes/#cursor","text":"[Source] Move the cursor to line y, column x. 0 is the same as 1. This indexes from the top left corner of the screen. fun box cursor( x: U32 val = 0, y: U32 val = 0) : String val","title":"cursor"},{"location":"termax-TerminalEscapeCodes/#parameters_4","text":"x: U32 val = 0 y: U32 val = 0","title":"Parameters"},{"location":"termax-TerminalEscapeCodes/#returns_4","text":"String val","title":"Returns"},{"location":"termax-TerminalEscapeCodes/#clear","text":"[Source] Clear the screen and move the cursor to the top left corner. fun box clear( how_much: (EraseBefore val | EraseAfter val | EraseAll val) = reference) : String val","title":"clear"},{"location":"termax-TerminalEscapeCodes/#parameters_5","text":"how_much: ( EraseBefore val | EraseAfter val | EraseAll val) = reference","title":"Parameters"},{"location":"termax-TerminalEscapeCodes/#returns_5","text":"String val","title":"Returns"},{"location":"termax-TerminalEscapeCodes/#erase","text":"[Source] Erases some or all of the line the cursor is on. fun box erase( how_much: (EraseBefore val | EraseAfter val | EraseAll val) = reference) : String val","title":"erase"},{"location":"termax-TerminalEscapeCodes/#parameters_6","text":"how_much: ( EraseBefore val | EraseAfter val | EraseAll val) = reference","title":"Parameters"},{"location":"termax-TerminalEscapeCodes/#returns_6","text":"String val","title":"Returns"},{"location":"termax-TerminalEscapeCodes/#reset","text":"[Source] Resets all colours and text styles to the default. fun box reset() : String val","title":"reset"},{"location":"termax-TerminalEscapeCodes/#returns_7","text":"String val","title":"Returns"},{"location":"termax-TerminalEscapeCodes/#bold","text":"[Source] Bold text. Does nothing on Windows. fun box bold( state: Bool val = true) : String val","title":"bold"},{"location":"termax-TerminalEscapeCodes/#parameters_7","text":"state: Bool val = true","title":"Parameters"},{"location":"termax-TerminalEscapeCodes/#returns_8","text":"String val","title":"Returns"},{"location":"termax-TerminalEscapeCodes/#underline","text":"[Source] Underlined text. Does nothing on Windows. fun box underline( state: Bool val = true) : String val","title":"underline"},{"location":"termax-TerminalEscapeCodes/#parameters_8","text":"state: Bool val = true","title":"Parameters"},{"location":"termax-TerminalEscapeCodes/#returns_9","text":"String val","title":"Returns"},{"location":"termax-TerminalEscapeCodes/#blink","text":"[Source] Blinking text. Does nothing on Windows. fun box blink( state: Bool val = true) : String val","title":"blink"},{"location":"termax-TerminalEscapeCodes/#parameters_9","text":"state: Bool val = true","title":"Parameters"},{"location":"termax-TerminalEscapeCodes/#returns_10","text":"String val","title":"Returns"},{"location":"termax-TerminalEscapeCodes/#reverse","text":"[Source] Swap foreground and background colour. fun box reverse( state: Bool val = true) : String val","title":"reverse"},{"location":"termax-TerminalEscapeCodes/#parameters_10","text":"state: Bool val = true","title":"Parameters"},{"location":"termax-TerminalEscapeCodes/#returns_11","text":"String val","title":"Returns"},{"location":"termax-TerminalEscapeCodes/#black","text":"[Source] Black text. fun box black() : String val","title":"black"},{"location":"termax-TerminalEscapeCodes/#returns_12","text":"String val","title":"Returns"},{"location":"termax-TerminalEscapeCodes/#red","text":"[Source] Red text. fun box red() : String val","title":"red"},{"location":"termax-TerminalEscapeCodes/#returns_13","text":"String val","title":"Returns"},{"location":"termax-TerminalEscapeCodes/#green","text":"[Source] Green text. fun box green() : String val","title":"green"},{"location":"termax-TerminalEscapeCodes/#returns_14","text":"String val","title":"Returns"},{"location":"termax-TerminalEscapeCodes/#yellow","text":"[Source] Yellow text. fun box yellow() : String val","title":"yellow"},{"location":"termax-TerminalEscapeCodes/#returns_15","text":"String val","title":"Returns"},{"location":"termax-TerminalEscapeCodes/#blue","text":"[Source] Blue text. fun box blue() : String val","title":"blue"},{"location":"termax-TerminalEscapeCodes/#returns_16","text":"String val","title":"Returns"},{"location":"termax-TerminalEscapeCodes/#magenta","text":"[Source] Magenta text. fun box magenta() : String val","title":"magenta"},{"location":"termax-TerminalEscapeCodes/#returns_17","text":"String val","title":"Returns"},{"location":"termax-TerminalEscapeCodes/#cyan","text":"[Source] Cyan text. fun box cyan() : String val","title":"cyan"},{"location":"termax-TerminalEscapeCodes/#returns_18","text":"String val","title":"Returns"},{"location":"termax-TerminalEscapeCodes/#grey","text":"[Source] Grey text. fun box grey() : String val","title":"grey"},{"location":"termax-TerminalEscapeCodes/#returns_19","text":"String val","title":"Returns"},{"location":"termax-TerminalEscapeCodes/#white","text":"[Source] White text. fun box white() : String val","title":"white"},{"location":"termax-TerminalEscapeCodes/#returns_20","text":"String val","title":"Returns"},{"location":"termax-TerminalEscapeCodes/#bright_red","text":"[Source] Bright red text. fun box bright_red() : String val","title":"bright_red"},{"location":"termax-TerminalEscapeCodes/#returns_21","text":"String val","title":"Returns"},{"location":"termax-TerminalEscapeCodes/#bright_green","text":"[Source] Bright green text. fun box bright_green() : String val","title":"bright_green"},{"location":"termax-TerminalEscapeCodes/#returns_22","text":"String val","title":"Returns"},{"location":"termax-TerminalEscapeCodes/#bright_yellow","text":"[Source] Bright yellow text. fun box bright_yellow() : String val","title":"bright_yellow"},{"location":"termax-TerminalEscapeCodes/#returns_23","text":"String val","title":"Returns"},{"location":"termax-TerminalEscapeCodes/#bright_blue","text":"[Source] Bright blue text. fun box bright_blue() : String val","title":"bright_blue"},{"location":"termax-TerminalEscapeCodes/#returns_24","text":"String val","title":"Returns"},{"location":"termax-TerminalEscapeCodes/#bright_magenta","text":"[Source] Bright magenta text. fun box bright_magenta() : String val","title":"bright_magenta"},{"location":"termax-TerminalEscapeCodes/#returns_25","text":"String val","title":"Returns"},{"location":"termax-TerminalEscapeCodes/#bright_cyan","text":"[Source] Bright cyan text. fun box bright_cyan() : String val","title":"bright_cyan"},{"location":"termax-TerminalEscapeCodes/#returns_26","text":"String val","title":"Returns"},{"location":"termax-TerminalEscapeCodes/#bright_grey","text":"[Source] Bright grey text. fun box bright_grey() : String val","title":"bright_grey"},{"location":"termax-TerminalEscapeCodes/#returns_27","text":"String val","title":"Returns"},{"location":"termax-TerminalEscapeCodes/#black_bg","text":"[Source] Black background. fun box black_bg() : String val","title":"black_bg"},{"location":"termax-TerminalEscapeCodes/#returns_28","text":"String val","title":"Returns"},{"location":"termax-TerminalEscapeCodes/#red_bg","text":"[Source] Red background. fun box red_bg() : String val","title":"red_bg"},{"location":"termax-TerminalEscapeCodes/#returns_29","text":"String val","title":"Returns"},{"location":"termax-TerminalEscapeCodes/#green_bg","text":"[Source] Green background. fun box green_bg() : String val","title":"green_bg"},{"location":"termax-TerminalEscapeCodes/#returns_30","text":"String val","title":"Returns"},{"location":"termax-TerminalEscapeCodes/#yellow_bg","text":"[Source] Yellow background. fun box yellow_bg() : String val","title":"yellow_bg"},{"location":"termax-TerminalEscapeCodes/#returns_31","text":"String val","title":"Returns"},{"location":"termax-TerminalEscapeCodes/#blue_bg","text":"[Source] Blue background. fun box blue_bg() : String val","title":"blue_bg"},{"location":"termax-TerminalEscapeCodes/#returns_32","text":"String val","title":"Returns"},{"location":"termax-TerminalEscapeCodes/#magenta_bg","text":"[Source] Magenta background. fun box magenta_bg() : String val","title":"magenta_bg"},{"location":"termax-TerminalEscapeCodes/#returns_33","text":"String val","title":"Returns"},{"location":"termax-TerminalEscapeCodes/#cyan_bg","text":"[Source] Cyan background. fun box cyan_bg() : String val","title":"cyan_bg"},{"location":"termax-TerminalEscapeCodes/#returns_34","text":"String val","title":"Returns"},{"location":"termax-TerminalEscapeCodes/#grey_bg","text":"[Source] Grey background. fun box grey_bg() : String val","title":"grey_bg"},{"location":"termax-TerminalEscapeCodes/#returns_35","text":"String val","title":"Returns"},{"location":"termax-TerminalEscapeCodes/#white_bg","text":"[Source] White background. fun box white_bg() : String val","title":"white_bg"},{"location":"termax-TerminalEscapeCodes/#returns_36","text":"String val","title":"Returns"},{"location":"termax-TerminalEscapeCodes/#bright_red_bg","text":"[Source] Bright red background. fun box bright_red_bg() : String val","title":"bright_red_bg"},{"location":"termax-TerminalEscapeCodes/#returns_37","text":"String val","title":"Returns"},{"location":"termax-TerminalEscapeCodes/#bright_green_bg","text":"[Source] Bright green background. fun box bright_green_bg() : String val","title":"bright_green_bg"},{"location":"termax-TerminalEscapeCodes/#returns_38","text":"String val","title":"Returns"},{"location":"termax-TerminalEscapeCodes/#bright_yellow_bg","text":"[Source] Bright yellow background. fun box bright_yellow_bg() : String val","title":"bright_yellow_bg"},{"location":"termax-TerminalEscapeCodes/#returns_39","text":"String val","title":"Returns"},{"location":"termax-TerminalEscapeCodes/#bright_blue_bg","text":"[Source] Bright blue background. fun box bright_blue_bg() : String val","title":"bright_blue_bg"},{"location":"termax-TerminalEscapeCodes/#returns_40","text":"String val","title":"Returns"},{"location":"termax-TerminalEscapeCodes/#bright_magenta_bg","text":"[Source] Bright magenta background. fun box bright_magenta_bg() : String val","title":"bright_magenta_bg"},{"location":"termax-TerminalEscapeCodes/#returns_41","text":"String val","title":"Returns"},{"location":"termax-TerminalEscapeCodes/#bright_cyan_bg","text":"[Source] Bright cyan background. fun box bright_cyan_bg() : String val","title":"bright_cyan_bg"},{"location":"termax-TerminalEscapeCodes/#returns_42","text":"String val","title":"Returns"},{"location":"termax-TerminalEscapeCodes/#bright_grey_bg","text":"[Source] Bright grey background. fun box bright_grey_bg() : String val","title":"bright_grey_bg"},{"location":"termax-TerminalEscapeCodes/#returns_43","text":"String val","title":"Returns"},{"location":"termax-TerminalEscapeCodes/#cursor_save","text":"[Source] Save current cursor position fun box cursor_save() : String val","title":"cursor_save"},{"location":"termax-TerminalEscapeCodes/#returns_44","text":"String val","title":"Returns"},{"location":"termax-TerminalEscapeCodes/#cursor_restore","text":"[Source] Restore last saved cursor position fun box cursor_restore() : String val","title":"cursor_restore"},{"location":"termax-TerminalEscapeCodes/#returns_45","text":"String val","title":"Returns"},{"location":"termax-TerminalEscapeCodes/#cursor_hide","text":"[Source] Hide the terminal cursor fun box cursor_hide() : String val","title":"cursor_hide"},{"location":"termax-TerminalEscapeCodes/#returns_46","text":"String val","title":"Returns"},{"location":"termax-TerminalEscapeCodes/#cursor_show","text":"[Source] Show the terminal cursor fun box cursor_show() : String val","title":"cursor_show"},{"location":"termax-TerminalEscapeCodes/#returns_47","text":"String val","title":"Returns"},{"location":"termax-TerminalEscapeCodes/#switch_to_alt_screen","text":"[Source] Switch to the alternate screen buffer fun box switch_to_alt_screen() : String val","title":"switch_to_alt_screen"},{"location":"termax-TerminalEscapeCodes/#returns_48","text":"String val","title":"Returns"},{"location":"termax-TerminalEscapeCodes/#switch_to_normal_screen","text":"[Source] Switch back to the normal screen buffer fun box switch_to_normal_screen() : String val","title":"switch_to_normal_screen"},{"location":"termax-TerminalEscapeCodes/#returns_49","text":"String val","title":"Returns"},{"location":"termax-TerminalEscapeCodes/#mouse_enable","text":"[Source] Enable mouse input events fun box mouse_enable() : String val","title":"mouse_enable"},{"location":"termax-TerminalEscapeCodes/#returns_50","text":"String val","title":"Returns"},{"location":"termax-TerminalEscapeCodes/#mouse_disable","text":"[Source] Disable mouse input handling fun box mouse_disable() : String val","title":"mouse_disable"},{"location":"termax-TerminalEscapeCodes/#returns_51","text":"String val","title":"Returns"},{"location":"termax-TerminalEscapeCodes/#reset_color","text":"[Source] Resets foreground colour (but not the text styles) fun box reset_color() : String val","title":"reset_color"},{"location":"termax-TerminalEscapeCodes/#returns_52","text":"String val","title":"Returns"},{"location":"termax-TerminalEscapeCodes/#reset_color_bg","text":"[Source] Resets foreground colour (but not the text styles) fun box reset_color_bg() : String val","title":"reset_color_bg"},{"location":"termax-TerminalEscapeCodes/#returns_53","text":"String val","title":"Returns"},{"location":"termax-TerminalEscapeCodes/#color","text":"[Source] Select an 8-bit foreground (text) color. fun box color( fg: U8 val) : String val","title":"color"},{"location":"termax-TerminalEscapeCodes/#parameters_11","text":"fg: U8 val","title":"Parameters"},{"location":"termax-TerminalEscapeCodes/#returns_54","text":"String val","title":"Returns"},{"location":"termax-TerminalEscapeCodes/#color_bg","text":"[Source] Select an 8-bit background color. fun box color_bg( bg: U8 val) : String val","title":"color_bg"},{"location":"termax-TerminalEscapeCodes/#parameters_12","text":"bg: U8 val","title":"Parameters"},{"location":"termax-TerminalEscapeCodes/#returns_55","text":"String val","title":"Returns"},{"location":"termax-TerminalEscapeCodes/#faint","text":"[Source] Lighten (faint) text. May not work on Windows. fun box faint( state: Bool val = true) : String val","title":"faint"},{"location":"termax-TerminalEscapeCodes/#parameters_13","text":"state: Bool val = true","title":"Parameters"},{"location":"termax-TerminalEscapeCodes/#returns_56","text":"String val","title":"Returns"},{"location":"termax-TerminalEscapeCodes/#italics","text":"[Source] Italicize text. May not work on Windows. fun box italics( state: Bool val = true) : String val","title":"italics"},{"location":"termax-TerminalEscapeCodes/#parameters_14","text":"state: Bool val = true","title":"Parameters"},{"location":"termax-TerminalEscapeCodes/#returns_57","text":"String val","title":"Returns"},{"location":"termax-TerminalEscapeCodes/#invert","text":"[Source] Invert foreground/background colour. May not work on Windows. fun box invert( state: Bool val = true) : String val","title":"invert"},{"location":"termax-TerminalEscapeCodes/#parameters_15","text":"state: Bool val = true","title":"Parameters"},{"location":"termax-TerminalEscapeCodes/#returns_58","text":"String val","title":"Returns"},{"location":"termax-TerminalEscapeCodes/#conceal","text":"[Source] Conceal (hide) the text. May not work on Windows. fun box conceal( state: Bool val = true) : String val","title":"conceal"},{"location":"termax-TerminalEscapeCodes/#parameters_16","text":"state: Bool val = true","title":"Parameters"},{"location":"termax-TerminalEscapeCodes/#returns_59","text":"String val","title":"Returns"},{"location":"termax-TerminalEscapeCodes/#strikeout","text":"[Source] Strike through text. May not work on Windows. fun box strikeout( state: Bool val = true) : String val","title":"strikeout"},{"location":"termax-TerminalEscapeCodes/#parameters_17","text":"state: Bool val = true","title":"Parameters"},{"location":"termax-TerminalEscapeCodes/#returns_60","text":"String val","title":"Returns"},{"location":"termax-TerminalEscapeCodes/#repeat_char","text":"[Source] fun box repeat_char( char: String val, times: U32 val) : String val","title":"repeat_char"},{"location":"termax-TerminalEscapeCodes/#parameters_18","text":"char: String val times: U32 val","title":"Parameters"},{"location":"termax-TerminalEscapeCodes/#returns_61","text":"String val","title":"Returns"},{"location":"termax-TerminalNotify/","text":"TerminalNotify \u00b6 [Source] Receive input from an Terminal. interface ref TerminalNotify Public Functions \u00b6 apply \u00b6 [Source] fun ref apply( term: Terminal ref, input: U8 val) : None val Parameters \u00b6 term: Terminal ref input: U8 val Returns \u00b6 None val up \u00b6 [Source] fun ref up( ctrl: Bool val, alt: Bool val, shift: Bool val) : None val Parameters \u00b6 ctrl: Bool val alt: Bool val shift: Bool val Returns \u00b6 None val down \u00b6 [Source] fun ref down( ctrl: Bool val, alt: Bool val, shift: Bool val) : None val Parameters \u00b6 ctrl: Bool val alt: Bool val shift: Bool val Returns \u00b6 None val left \u00b6 [Source] fun ref left( ctrl: Bool val, alt: Bool val, shift: Bool val) : None val Parameters \u00b6 ctrl: Bool val alt: Bool val shift: Bool val Returns \u00b6 None val right \u00b6 [Source] fun ref right( ctrl: Bool val, alt: Bool val, shift: Bool val) : None val Parameters \u00b6 ctrl: Bool val alt: Bool val shift: Bool val Returns \u00b6 None val delete \u00b6 [Source] fun ref delete( ctrl: Bool val, alt: Bool val, shift: Bool val) : None val Parameters \u00b6 ctrl: Bool val alt: Bool val shift: Bool val Returns \u00b6 None val insert \u00b6 [Source] fun ref insert( ctrl: Bool val, alt: Bool val, shift: Bool val) : None val Parameters \u00b6 ctrl: Bool val alt: Bool val shift: Bool val Returns \u00b6 None val home \u00b6 [Source] fun ref home( ctrl: Bool val, alt: Bool val, shift: Bool val) : None val Parameters \u00b6 ctrl: Bool val alt: Bool val shift: Bool val Returns \u00b6 None val end_key \u00b6 [Source] fun ref end_key( ctrl: Bool val, alt: Bool val, shift: Bool val) : None val Parameters \u00b6 ctrl: Bool val alt: Bool val shift: Bool val Returns \u00b6 None val page_up \u00b6 [Source] fun ref page_up( ctrl: Bool val, alt: Bool val, shift: Bool val) : None val Parameters \u00b6 ctrl: Bool val alt: Bool val shift: Bool val Returns \u00b6 None val page_down \u00b6 [Source] fun ref page_down( ctrl: Bool val, alt: Bool val, shift: Bool val) : None val Parameters \u00b6 ctrl: Bool val alt: Bool val shift: Bool val Returns \u00b6 None val fn_key \u00b6 [Source] fun ref fn_key( i: U8 val, ctrl: Bool val, alt: Bool val, shift: Bool val) : None val Parameters \u00b6 i: U8 val ctrl: Bool val alt: Bool val shift: Bool val Returns \u00b6 None val prompt \u00b6 [Source] fun ref prompt( term: Terminal ref, value: String val) : None val Parameters \u00b6 term: Terminal ref value: String val Returns \u00b6 None val size \u00b6 [Source] fun ref size( rows: U16 val, cols: U16 val) : None val Parameters \u00b6 rows: U16 val cols: U16 val Returns \u00b6 None val closed \u00b6 [Source] fun ref closed() : None val Returns \u00b6 None val mouse_release \u00b6 [Source] fun ref mouse_release( button: (LeftMouseButton val | MiddleMouseButton val | RightMouseButton val | UnknownMouseButton val), ctrl: Bool val, alt: Bool val, shift: Bool val, x: U32 val, y: U32 val) : None val Parameters \u00b6 button: ( LeftMouseButton val | MiddleMouseButton val | RightMouseButton val | UnknownMouseButton val) ctrl: Bool val alt: Bool val shift: Bool val x: U32 val y: U32 val Returns \u00b6 None val mouse_press \u00b6 [Source] fun ref mouse_press( button: (LeftMouseButton val | MiddleMouseButton val | RightMouseButton val | UnknownMouseButton val), ctrl: Bool val, alt: Bool val, shift: Bool val, x: U32 val, y: U32 val) : None val Parameters \u00b6 button: ( LeftMouseButton val | MiddleMouseButton val | RightMouseButton val | UnknownMouseButton val) ctrl: Bool val alt: Bool val shift: Bool val x: U32 val y: U32 val Returns \u00b6 None val mouse_move \u00b6 [Source] fun ref mouse_move( ctrl: Bool val, alt: Bool val, shift: Bool val, x: U32 val, y: U32 val) : None val Parameters \u00b6 ctrl: Bool val alt: Bool val shift: Bool val x: U32 val y: U32 val Returns \u00b6 None val mouse_drag \u00b6 [Source] fun ref mouse_drag( button: (LeftMouseButton val | MiddleMouseButton val | RightMouseButton val | UnknownMouseButton val), ctrl: Bool val, alt: Bool val, shift: Bool val, x: U32 val, y: U32 val) : None val Parameters \u00b6 button: ( LeftMouseButton val | MiddleMouseButton val | RightMouseButton val | UnknownMouseButton val) ctrl: Bool val alt: Bool val shift: Bool val x: U32 val y: U32 val Returns \u00b6 None val mouse_wheel \u00b6 [Source] fun ref mouse_wheel( direction: (ScrollUp val | ScrollDown val), ctrl: Bool val, alt: Bool val, shift: Bool val, x: U32 val, y: U32 val) : None val Parameters \u00b6 direction: ( ScrollUp val | ScrollDown val) ctrl: Bool val alt: Bool val shift: Bool val x: U32 val y: U32 val Returns \u00b6 None val","title":"interface TerminalNotify"},{"location":"termax-TerminalNotify/#terminalnotify","text":"[Source] Receive input from an Terminal. interface ref TerminalNotify","title":"TerminalNotify"},{"location":"termax-TerminalNotify/#public-functions","text":"","title":"Public Functions"},{"location":"termax-TerminalNotify/#apply","text":"[Source] fun ref apply( term: Terminal ref, input: U8 val) : None val","title":"apply"},{"location":"termax-TerminalNotify/#parameters","text":"term: Terminal ref input: U8 val","title":"Parameters"},{"location":"termax-TerminalNotify/#returns","text":"None val","title":"Returns"},{"location":"termax-TerminalNotify/#up","text":"[Source] fun ref up( ctrl: Bool val, alt: Bool val, shift: Bool val) : None val","title":"up"},{"location":"termax-TerminalNotify/#parameters_1","text":"ctrl: Bool val alt: Bool val shift: Bool val","title":"Parameters"},{"location":"termax-TerminalNotify/#returns_1","text":"None val","title":"Returns"},{"location":"termax-TerminalNotify/#down","text":"[Source] fun ref down( ctrl: Bool val, alt: Bool val, shift: Bool val) : None val","title":"down"},{"location":"termax-TerminalNotify/#parameters_2","text":"ctrl: Bool val alt: Bool val shift: Bool val","title":"Parameters"},{"location":"termax-TerminalNotify/#returns_2","text":"None val","title":"Returns"},{"location":"termax-TerminalNotify/#left","text":"[Source] fun ref left( ctrl: Bool val, alt: Bool val, shift: Bool val) : None val","title":"left"},{"location":"termax-TerminalNotify/#parameters_3","text":"ctrl: Bool val alt: Bool val shift: Bool val","title":"Parameters"},{"location":"termax-TerminalNotify/#returns_3","text":"None val","title":"Returns"},{"location":"termax-TerminalNotify/#right","text":"[Source] fun ref right( ctrl: Bool val, alt: Bool val, shift: Bool val) : None val","title":"right"},{"location":"termax-TerminalNotify/#parameters_4","text":"ctrl: Bool val alt: Bool val shift: Bool val","title":"Parameters"},{"location":"termax-TerminalNotify/#returns_4","text":"None val","title":"Returns"},{"location":"termax-TerminalNotify/#delete","text":"[Source] fun ref delete( ctrl: Bool val, alt: Bool val, shift: Bool val) : None val","title":"delete"},{"location":"termax-TerminalNotify/#parameters_5","text":"ctrl: Bool val alt: Bool val shift: Bool val","title":"Parameters"},{"location":"termax-TerminalNotify/#returns_5","text":"None val","title":"Returns"},{"location":"termax-TerminalNotify/#insert","text":"[Source] fun ref insert( ctrl: Bool val, alt: Bool val, shift: Bool val) : None val","title":"insert"},{"location":"termax-TerminalNotify/#parameters_6","text":"ctrl: Bool val alt: Bool val shift: Bool val","title":"Parameters"},{"location":"termax-TerminalNotify/#returns_6","text":"None val","title":"Returns"},{"location":"termax-TerminalNotify/#home","text":"[Source] fun ref home( ctrl: Bool val, alt: Bool val, shift: Bool val) : None val","title":"home"},{"location":"termax-TerminalNotify/#parameters_7","text":"ctrl: Bool val alt: Bool val shift: Bool val","title":"Parameters"},{"location":"termax-TerminalNotify/#returns_7","text":"None val","title":"Returns"},{"location":"termax-TerminalNotify/#end_key","text":"[Source] fun ref end_key( ctrl: Bool val, alt: Bool val, shift: Bool val) : None val","title":"end_key"},{"location":"termax-TerminalNotify/#parameters_8","text":"ctrl: Bool val alt: Bool val shift: Bool val","title":"Parameters"},{"location":"termax-TerminalNotify/#returns_8","text":"None val","title":"Returns"},{"location":"termax-TerminalNotify/#page_up","text":"[Source] fun ref page_up( ctrl: Bool val, alt: Bool val, shift: Bool val) : None val","title":"page_up"},{"location":"termax-TerminalNotify/#parameters_9","text":"ctrl: Bool val alt: Bool val shift: Bool val","title":"Parameters"},{"location":"termax-TerminalNotify/#returns_9","text":"None val","title":"Returns"},{"location":"termax-TerminalNotify/#page_down","text":"[Source] fun ref page_down( ctrl: Bool val, alt: Bool val, shift: Bool val) : None val","title":"page_down"},{"location":"termax-TerminalNotify/#parameters_10","text":"ctrl: Bool val alt: Bool val shift: Bool val","title":"Parameters"},{"location":"termax-TerminalNotify/#returns_10","text":"None val","title":"Returns"},{"location":"termax-TerminalNotify/#fn_key","text":"[Source] fun ref fn_key( i: U8 val, ctrl: Bool val, alt: Bool val, shift: Bool val) : None val","title":"fn_key"},{"location":"termax-TerminalNotify/#parameters_11","text":"i: U8 val ctrl: Bool val alt: Bool val shift: Bool val","title":"Parameters"},{"location":"termax-TerminalNotify/#returns_11","text":"None val","title":"Returns"},{"location":"termax-TerminalNotify/#prompt","text":"[Source] fun ref prompt( term: Terminal ref, value: String val) : None val","title":"prompt"},{"location":"termax-TerminalNotify/#parameters_12","text":"term: Terminal ref value: String val","title":"Parameters"},{"location":"termax-TerminalNotify/#returns_12","text":"None val","title":"Returns"},{"location":"termax-TerminalNotify/#size","text":"[Source] fun ref size( rows: U16 val, cols: U16 val) : None val","title":"size"},{"location":"termax-TerminalNotify/#parameters_13","text":"rows: U16 val cols: U16 val","title":"Parameters"},{"location":"termax-TerminalNotify/#returns_13","text":"None val","title":"Returns"},{"location":"termax-TerminalNotify/#closed","text":"[Source] fun ref closed() : None val","title":"closed"},{"location":"termax-TerminalNotify/#returns_14","text":"None val","title":"Returns"},{"location":"termax-TerminalNotify/#mouse_release","text":"[Source] fun ref mouse_release( button: (LeftMouseButton val | MiddleMouseButton val | RightMouseButton val | UnknownMouseButton val), ctrl: Bool val, alt: Bool val, shift: Bool val, x: U32 val, y: U32 val) : None val","title":"mouse_release"},{"location":"termax-TerminalNotify/#parameters_14","text":"button: ( LeftMouseButton val | MiddleMouseButton val | RightMouseButton val | UnknownMouseButton val) ctrl: Bool val alt: Bool val shift: Bool val x: U32 val y: U32 val","title":"Parameters"},{"location":"termax-TerminalNotify/#returns_15","text":"None val","title":"Returns"},{"location":"termax-TerminalNotify/#mouse_press","text":"[Source] fun ref mouse_press( button: (LeftMouseButton val | MiddleMouseButton val | RightMouseButton val | UnknownMouseButton val), ctrl: Bool val, alt: Bool val, shift: Bool val, x: U32 val, y: U32 val) : None val","title":"mouse_press"},{"location":"termax-TerminalNotify/#parameters_15","text":"button: ( LeftMouseButton val | MiddleMouseButton val | RightMouseButton val | UnknownMouseButton val) ctrl: Bool val alt: Bool val shift: Bool val x: U32 val y: U32 val","title":"Parameters"},{"location":"termax-TerminalNotify/#returns_16","text":"None val","title":"Returns"},{"location":"termax-TerminalNotify/#mouse_move","text":"[Source] fun ref mouse_move( ctrl: Bool val, alt: Bool val, shift: Bool val, x: U32 val, y: U32 val) : None val","title":"mouse_move"},{"location":"termax-TerminalNotify/#parameters_16","text":"ctrl: Bool val alt: Bool val shift: Bool val x: U32 val y: U32 val","title":"Parameters"},{"location":"termax-TerminalNotify/#returns_17","text":"None val","title":"Returns"},{"location":"termax-TerminalNotify/#mouse_drag","text":"[Source] fun ref mouse_drag( button: (LeftMouseButton val | MiddleMouseButton val | RightMouseButton val | UnknownMouseButton val), ctrl: Bool val, alt: Bool val, shift: Bool val, x: U32 val, y: U32 val) : None val","title":"mouse_drag"},{"location":"termax-TerminalNotify/#parameters_17","text":"button: ( LeftMouseButton val | MiddleMouseButton val | RightMouseButton val | UnknownMouseButton val) ctrl: Bool val alt: Bool val shift: Bool val x: U32 val y: U32 val","title":"Parameters"},{"location":"termax-TerminalNotify/#returns_18","text":"None val","title":"Returns"},{"location":"termax-TerminalNotify/#mouse_wheel","text":"[Source] fun ref mouse_wheel( direction: (ScrollUp val | ScrollDown val), ctrl: Bool val, alt: Bool val, shift: Bool val, x: U32 val, y: U32 val) : None val","title":"mouse_wheel"},{"location":"termax-TerminalNotify/#parameters_18","text":"direction: ( ScrollUp val | ScrollDown val) ctrl: Bool val alt: Bool val shift: Bool val x: U32 val y: U32 val","title":"Parameters"},{"location":"termax-TerminalNotify/#returns_19","text":"None val","title":"Returns"},{"location":"termax-TerminalTextFormatting/","text":"TerminalTextFormatting \u00b6 [Source] Defines convenient helper functions for visually formatting text/string-able content. trait ref TerminalTextFormatting Public Functions \u00b6 hide \u00b6 [Source] Return the value as an escape-styled \"concealed\" string ready for the terminal. fun box hide( value: Stringable val) : String val Parameters \u00b6 value: Stringable val Returns \u00b6 String val conceal \u00b6 [Source] Return the value as an escape-styled \"concealed\" string ready for the terminal. fun box conceal( value: Stringable val) : String val Parameters \u00b6 value: Stringable val Returns \u00b6 String val bold \u00b6 [Source] Return the value as an escape-styled \"bold\" string ready for the terminal. fun box bold( value: Stringable val) : String val Parameters \u00b6 value: Stringable val Returns \u00b6 String val faint \u00b6 [Source] Return the value as an escape-styled \"faint\" (dim) string ready for the terminal. fun box faint( value: Stringable val) : String val Parameters \u00b6 value: Stringable val Returns \u00b6 String val invert \u00b6 [Source] Return the value as an escape-styled string with foreground and background color inverted and ready for the terminal. fun box invert( value: Stringable val) : String val Parameters \u00b6 value: Stringable val Returns \u00b6 String val italics \u00b6 [Source] Return the value as an escape-styled \"italicized\" string ready for the terminal. fun box italics( value: Stringable val) : String val Parameters \u00b6 value: Stringable val Returns \u00b6 String val underline \u00b6 [Source] Return the value as an escape-styled \"underlined\" string ready for the terminal. fun box underline( value: Stringable val) : String val Parameters \u00b6 value: Stringable val Returns \u00b6 String val strikeout \u00b6 [Source] Return the value as an escape-styled \"struck out\" string ready for the terminal. fun box strikeout( value: Stringable val) : String val Parameters \u00b6 value: Stringable val Returns \u00b6 String val color \u00b6 [Source] Return the value escaped by 8-bit colour codes for foreground and (optional) background colours. fun box color( value: Stringable val, fg: U8 val, bg: (None val | U8 val) = reference) : String val Parameters \u00b6 value: Stringable val fg: U8 val bg: ( None val | U8 val) = reference Returns \u00b6 String val color_with \u00b6 [Source] Return the value surrounded by supplied escape codes for foreground and (optional) background colours. fun box color_with( value: Stringable val, fg: String val, bg: (None val | String val) = reference) : String val Parameters \u00b6 value: Stringable val fg: String val bg: ( None val | String val) = reference Returns \u00b6 String val","title":"trait TerminalTextFormatting"},{"location":"termax-TerminalTextFormatting/#terminaltextformatting","text":"[Source] Defines convenient helper functions for visually formatting text/string-able content. trait ref TerminalTextFormatting","title":"TerminalTextFormatting"},{"location":"termax-TerminalTextFormatting/#public-functions","text":"","title":"Public Functions"},{"location":"termax-TerminalTextFormatting/#hide","text":"[Source] Return the value as an escape-styled \"concealed\" string ready for the terminal. fun box hide( value: Stringable val) : String val","title":"hide"},{"location":"termax-TerminalTextFormatting/#parameters","text":"value: Stringable val","title":"Parameters"},{"location":"termax-TerminalTextFormatting/#returns","text":"String val","title":"Returns"},{"location":"termax-TerminalTextFormatting/#conceal","text":"[Source] Return the value as an escape-styled \"concealed\" string ready for the terminal. fun box conceal( value: Stringable val) : String val","title":"conceal"},{"location":"termax-TerminalTextFormatting/#parameters_1","text":"value: Stringable val","title":"Parameters"},{"location":"termax-TerminalTextFormatting/#returns_1","text":"String val","title":"Returns"},{"location":"termax-TerminalTextFormatting/#bold","text":"[Source] Return the value as an escape-styled \"bold\" string ready for the terminal. fun box bold( value: Stringable val) : String val","title":"bold"},{"location":"termax-TerminalTextFormatting/#parameters_2","text":"value: Stringable val","title":"Parameters"},{"location":"termax-TerminalTextFormatting/#returns_2","text":"String val","title":"Returns"},{"location":"termax-TerminalTextFormatting/#faint","text":"[Source] Return the value as an escape-styled \"faint\" (dim) string ready for the terminal. fun box faint( value: Stringable val) : String val","title":"faint"},{"location":"termax-TerminalTextFormatting/#parameters_3","text":"value: Stringable val","title":"Parameters"},{"location":"termax-TerminalTextFormatting/#returns_3","text":"String val","title":"Returns"},{"location":"termax-TerminalTextFormatting/#invert","text":"[Source] Return the value as an escape-styled string with foreground and background color inverted and ready for the terminal. fun box invert( value: Stringable val) : String val","title":"invert"},{"location":"termax-TerminalTextFormatting/#parameters_4","text":"value: Stringable val","title":"Parameters"},{"location":"termax-TerminalTextFormatting/#returns_4","text":"String val","title":"Returns"},{"location":"termax-TerminalTextFormatting/#italics","text":"[Source] Return the value as an escape-styled \"italicized\" string ready for the terminal. fun box italics( value: Stringable val) : String val","title":"italics"},{"location":"termax-TerminalTextFormatting/#parameters_5","text":"value: Stringable val","title":"Parameters"},{"location":"termax-TerminalTextFormatting/#returns_5","text":"String val","title":"Returns"},{"location":"termax-TerminalTextFormatting/#underline","text":"[Source] Return the value as an escape-styled \"underlined\" string ready for the terminal. fun box underline( value: Stringable val) : String val","title":"underline"},{"location":"termax-TerminalTextFormatting/#parameters_6","text":"value: Stringable val","title":"Parameters"},{"location":"termax-TerminalTextFormatting/#returns_6","text":"String val","title":"Returns"},{"location":"termax-TerminalTextFormatting/#strikeout","text":"[Source] Return the value as an escape-styled \"struck out\" string ready for the terminal. fun box strikeout( value: Stringable val) : String val","title":"strikeout"},{"location":"termax-TerminalTextFormatting/#parameters_7","text":"value: Stringable val","title":"Parameters"},{"location":"termax-TerminalTextFormatting/#returns_7","text":"String val","title":"Returns"},{"location":"termax-TerminalTextFormatting/#color","text":"[Source] Return the value escaped by 8-bit colour codes for foreground and (optional) background colours. fun box color( value: Stringable val, fg: U8 val, bg: (None val | U8 val) = reference) : String val","title":"color"},{"location":"termax-TerminalTextFormatting/#parameters_8","text":"value: Stringable val fg: U8 val bg: ( None val | U8 val) = reference","title":"Parameters"},{"location":"termax-TerminalTextFormatting/#returns_8","text":"String val","title":"Returns"},{"location":"termax-TerminalTextFormatting/#color_with","text":"[Source] Return the value surrounded by supplied escape codes for foreground and (optional) background colours. fun box color_with( value: Stringable val, fg: String val, bg: (None val | String val) = reference) : String val","title":"color_with"},{"location":"termax-TerminalTextFormatting/#parameters_9","text":"value: Stringable val fg: String val bg: ( None val | String val) = reference","title":"Parameters"},{"location":"termax-TerminalTextFormatting/#returns_9","text":"String val","title":"Returns"},{"location":"termax-UnknownMouseButton/","text":"UnknownMouseButton \u00b6 [Source] primitive val UnknownMouseButton Constructors \u00b6 create \u00b6 [Source] new val create() : UnknownMouseButton val^ Returns \u00b6 UnknownMouseButton val^ Public Functions \u00b6 string \u00b6 [Source] fun box string() : String val Returns \u00b6 String val eq \u00b6 [Source] fun box eq( that: UnknownMouseButton val) : Bool val Parameters \u00b6 that: UnknownMouseButton val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: UnknownMouseButton val) : Bool val Parameters \u00b6 that: UnknownMouseButton val Returns \u00b6 Bool val","title":"primitive UnknownMouseButton"},{"location":"termax-UnknownMouseButton/#unknownmousebutton","text":"[Source] primitive val UnknownMouseButton","title":"UnknownMouseButton"},{"location":"termax-UnknownMouseButton/#constructors","text":"","title":"Constructors"},{"location":"termax-UnknownMouseButton/#create","text":"[Source] new val create() : UnknownMouseButton val^","title":"create"},{"location":"termax-UnknownMouseButton/#returns","text":"UnknownMouseButton val^","title":"Returns"},{"location":"termax-UnknownMouseButton/#public-functions","text":"","title":"Public Functions"},{"location":"termax-UnknownMouseButton/#string","text":"[Source] fun box string() : String val","title":"string"},{"location":"termax-UnknownMouseButton/#returns_1","text":"String val","title":"Returns"},{"location":"termax-UnknownMouseButton/#eq","text":"[Source] fun box eq( that: UnknownMouseButton val) : Bool val","title":"eq"},{"location":"termax-UnknownMouseButton/#parameters","text":"that: UnknownMouseButton val","title":"Parameters"},{"location":"termax-UnknownMouseButton/#returns_2","text":"Bool val","title":"Returns"},{"location":"termax-UnknownMouseButton/#ne","text":"[Source] fun box ne( that: UnknownMouseButton val) : Bool val","title":"ne"},{"location":"termax-UnknownMouseButton/#parameters_1","text":"that: UnknownMouseButton val","title":"Parameters"},{"location":"termax-UnknownMouseButton/#returns_3","text":"Bool val","title":"Returns"},{"location":"src/termax/compatibility_stdlib_term/","text":"// Defining ANSI primtive to be compatible with // standard library's `term` package. primitive ANSI is TerminalEscapeCodes // Defining ANSITerm type alias to be compatible with // standard library's `term` package. type ANSITerm is Terminal // Defining ANSINotify interface to be compatible with // standard library's `term` package. interface ANSINotify is TerminalNotify","title":"Compatibility stdlib term"},{"location":"src/termax/easy_terminal/","text":"primitive EasyTerminal \"\"\" Convenient way to setup the `Terminal` using standard input from the environment. \"\"\" fun apply(env: Env, notify': TerminalNotify iso) : Terminal => \"\"\" Create a `Terminal` using standard input from `env`, configured to capture Ctrl-C and Ctrl-Z as input. \"\"\" let term = Terminal(consume notify', env.input where options = TermOptions(where capture_ctrl_c=true, capture_ctrl_z=true)) env.input(object iso is InputNotify fun ref apply(data: Array[U8] iso) => term(consume data) end, 128) term","title":"Easy terminal"},{"location":"src/termax/erase_enums/","text":"primitive EraseBefore \"\"\" Erase up to to (before) the cursor position \"\"\" primitive EraseAfter \"\"\" Erase from (after) the cursor position \"\"\" primitive EraseAll \"\"\" Erase all (before and after) regardless of cursor position \"\"\" type EraseLine is (EraseBefore | EraseAfter | EraseAll) \"\"\" Erase the line relative to the cursor position. \"\"\" type EraseDisplay is (EraseBefore | EraseAfter | EraseAll) \"\"\" Erase the display (screen) relative to the cursor position. \"\"\"","title":"Erase enums"},{"location":"src/termax/key_codes/","text":"primitive Key \"\"\" Names for non-text input keys received via `TerminalNotify.apply()` \"\"\" fun ctrl_A() : U8 => 1 fun ctrl_B() : U8 => 2 fun ctrl_C() : U8 => 3 fun ctrl_D() : U8 => 4 fun ctrl_E() : U8 => 5 fun ctrl_F() : U8 => 6 fun ctrl_G() : U8 => 7 fun ctrl_H() : U8 => 8 fun ctrl_I() : U8 => 9 fun ctrl_J() : U8 => 10 fun ctrl_K() : U8 => 11 fun ctrl_L() : U8 => 12 fun ctrl_M() : U8 => 13 fun ctrl_N() : U8 => 14 fun ctrl_O() : U8 => 15 fun ctrl_P() : U8 => 16 fun ctrl_Q() : U8 => 17 fun ctrl_R() : U8 => 18 fun ctrl_S() : U8 => 19 fun ctrl_T() : U8 => 20 fun ctrl_U() : U8 => 21 fun ctrl_V() : U8 => 22 fun ctrl_W() : U8 => 23 fun ctrl_X() : U8 => 24 fun ctrl_Y() : U8 => 25 fun ctrl_Z() : U8 => 26 fun tab() : U8 => ctrl_I() fun enter() : U8 => ctrl_J() fun escape() : U8 => 27 fun esc() : U8 => escape() fun back_space() : U8 => 127","title":"Key codes"},{"location":"src/termax/mouse_buttons/","text":"primitive LeftMouseButton fun string() : String => \"Left\" primitive MiddleMouseButton fun string() : String => \"Middle\" primitive RightMouseButton fun string() : String => \"Right\" primitive UnknownMouseButton fun string() : String => \"Unknown\" type KnownMouseButton is (LeftMouseButton | MiddleMouseButton | RightMouseButton) type MouseButton is (KnownMouseButton | UnknownMouseButton) primitive ScrollUp fun string() : String => \"Up\" primitive ScrollDown fun string() : String => \"Down\" type ScrollDirection is (ScrollUp | ScrollDown)","title":"Mouse buttons"},{"location":"src/termax/term_draw/","text":"trait val GridChars \"\"\" Define a line style for drawing a grid. \"\"\" fun top_left() : String val fun top_right() : String val fun bottom_left() : String val fun bottom_right() : String val fun side() : String val fun bar() : String val fun left_join() : String val fun right_join() : String val fun top_join() : String val fun bottom_join() : String val fun mid_join() : String val primitive SingleSolidLine is GridChars \"\"\" Single solid line style for drawing a grid. \"\"\" fun top_left() : String val => \"\u250c\" fun top_right() : String val => \"\u2510\" fun bottom_left() : String val => \"\u2514\" fun bottom_right() : String val => \"\u2518\" fun side() : String val => \"\u2502\" fun bar() : String val => \"\u2500\" fun left_join() : String val => \"\u251c\" fun right_join() : String val => \"\u2524\" fun top_join() : String val => \"\u252c\" fun bottom_join() : String val => \"\u2534\" fun mid_join() : String val => \"\u253c\" primitive SingleDashedLine is GridChars \"\"\" Single dashed line style for drawing a grid. \"\"\" fun top_left() : String val => \"\u250c\" fun top_right() : String val => \"\u2510\" fun bottom_left() : String val => \"\u2514\" fun bottom_right() : String val => \"\u2518\" fun side() : String val => \"\u00a6\" fun bar() : String val => \"-\" fun left_join() : String val => \"\u251c\" fun right_join() : String val => \"\u2524\" fun top_join() : String val => \"\u252c\" fun bottom_join() : String val => \"\u2534\" fun mid_join() : String val => \"+\" primitive DoubleSolidLine is GridChars \"\"\" Double solid line style for drawing a grid. \"\"\" fun top_left() : String val => \"\u2554\" fun top_right() : String val => \"\u2557\" fun bottom_left() : String val => \"\u255a\" fun bottom_right() : String val => \"\u255d\" fun side() : String val => \"\u2551\" fun bar() : String val => \"\u2550\" fun left_join() : String val => \"\u2560\" fun right_join() : String val => \"\u2563\" fun top_join() : String val => \"\u2566\" fun bottom_join() : String val => \"\u2569\" fun mid_join() : String val => \"\u256c\" primitive FillPattern \"\"\" Different characters that are useful as fill patterns. \"\"\" fun blank() : String val => \" \" fun solid() : String val => \"\u2588\" fun solid_top_half() : String val => \"\u2580\" fun solid_bottom_half() : String val => \"\u2584\" fun dither_light() : String val => \"\u2591\" fun dither_medium() : String val => \"\u2592\" fun dither_dark() : String val => \"\u2593\" trait TerminalDrawing \"\"\" Defines convenient helper functions for drawing shapes in the terminal \"\"\" fun hline(width: U32, fill: String val) : String val => \"\"\" Draw a horizontal line (row) using any character \"\"\" Term.repeat_char(fill, width) fun vline(height: U32, fill: String val) : String val => \"\"\" Draw a vertical line (column) using any character \"\"\" match height | 0 => \"\" | 1 => fill else fill + (Term.down(1) + Term.left(1) + fill).repeat_str((height - 1).usize()) end fun fill_rectangle(width: U32, height: U32, fill: String val) : String val => \"\"\" Fill a rectangular area with any character \"\"\" if (height == 0) or (width == 0) then return \"\" elseif (width == 1) and (height == 1) then return fill elseif width == 1 then return vline(height, fill) end let line = hline(width, fill) if height == 1 then line else let strsize = (height * (2 + 8)).usize() let str: String ref = String(strsize) str.append(line) let down_left: String val = Term.down(1) + Term.left(width) var rows = height - 1 repeat str.>append(down_left) .>append(line) rows = rows - 1 until rows == 0 end str.string() end fun frame_hline(width: U32, style: GridChars = SingleSolidLine) : String val => \"\"\" Draw a horizontal line using a line style. \"\"\" hline(width, style.bar()) fun frame_vline(height: U32, style: GridChars = SingleSolidLine) : String val => \"\"\" Draw a vertical line using a line style. \"\"\" vline(height, style.side()) fun frame(width: U32, height: U32, style: GridChars = SingleSolidLine, clear: Bool = false) : String val => \"\"\" Draw a rectangle using a line style (default is single solid line) with option to clear the space within the rectangle. \"\"\" if (height == 0) or (width == 0) then return \"\" elseif (width == 1) and (height == 1) then return \"\u00a4\" elseif height == 1 then return hline(width, style.bar()) elseif width == 1 then return vline(height, style.side()) end let strsize = (height * (2 + 8)).usize() let str: String ref = String(strsize) let down_left: String val = Term.down(1) + Term.left(width) let bar_filler: String val = if width <= 2 then \"\" else hline(width-2, style.bar()) end // top row str.>append(style.top_left()) .>append(bar_filler) .>append(style.top_right()) // middle rows if height > 2 then let in_filler = if width <= 2 then \"\" elseif clear then hline(width-2, FillPattern.blank()) else Term.right(width-2) end var rows = height-2 let side = style.side() repeat str.>append(down_left) .>append(side) .>append(in_filler) .>append(side) rows = rows - 1 until rows == 0 end end // bottom row str.>append(down_left) .>append(style.bottom_left()) .>append(bar_filler) .>append(style.bottom_right()) str.string() primitive TermDraw is TerminalDrawing \"\"\" Use this primitive directly to draw shapes. \"\"\"","title":"Term draw"},{"location":"src/termax/term_escape_codes/","text":"trait TerminalEscapeCodes \"\"\" These strings can be embedded in text when writing to a StdStream to create a text-based UI. \"\"\" fun up(n: U32 = 0): String => \"\"\" Move the cursor up n lines. 0 is the same as 1. \"\"\" if n <= 1 then \"\\e[A\" else \"\\e[\" + n.string() + \"A\" end fun down(n: U32 = 0): String => \"\"\" Move the cursor down n lines. 0 is the same as 1. \"\"\" if n <= 1 then \"\\e[B\" else \"\\e[\" + n.string() + \"B\" end fun right(n: U32 = 0): String => \"\"\" Move the cursor right n columns. 0 is the same as 1. \"\"\" if n <= 1 then \"\\e[C\" else \"\\e[\" + n.string() + \"C\" end fun left(n: U32 = 0): String => \"\"\" Move the cursor left n columns. 0 is the same as 1. \"\"\" if n <= 1 then \"\\e[D\" else \"\\e[\" + n.string() + \"D\" end fun cursor(x: U32 = 0, y: U32 = 0): String => \"\"\" Move the cursor to line y, column x. 0 is the same as 1. This indexes from the top left corner of the screen. \"\"\" if (x <= 1) and (y <= 1) then \"\\e[H\" else \"\\e[\" + y.string() + \";\" + x.string() + \"H\" end fun clear(how_much: EraseDisplay = EraseAll): String => \"\"\" Clear the screen and move the cursor to the top left corner. \"\"\" match how_much | EraseBefore => \"\\e[1J\" | EraseAfter => \"\\e[0J\" | EraseAll => \"\\e[H\\e[2J\" // also move cursor end fun erase(how_much : EraseLine = EraseBefore): String => \"\"\" Erases some or all of the line the cursor is on. \"\"\" match how_much | EraseBefore => \"\\e[1K\" | EraseAfter => \"\\e[0K\" | EraseAll => \"\\e[2K\" end fun reset(): String => \"\"\" Resets all colours and text styles to the default. \"\"\" \"\\e[0m\" fun bold(state: Bool = true): String => \"\"\" Bold text. Does nothing on Windows. \"\"\" if state then \"\\e[1m\" else \"\\e[22m\" end fun underline(state: Bool = true): String => \"\"\" Underlined text. Does nothing on Windows. \"\"\" if state then \"\\e[4m\" else \"\\e[24m\" end fun blink(state: Bool = true): String => \"\"\" Blinking text. Does nothing on Windows. \"\"\" if state then \"\\e[5m\" else \"\\e[25m\" end fun reverse(state: Bool = true): String => \"\"\" Swap foreground and background colour. \"\"\" if state then \"\\e[7m\" else \"\\e[27m\" end fun black(): String => \"\"\" Black text. \"\"\" \"\\e[30m\" fun red(): String => \"\"\" Red text. \"\"\" \"\\e[31m\" fun green(): String => \"\"\" Green text. \"\"\" \"\\e[32m\" fun yellow(): String => \"\"\" Yellow text. \"\"\" \"\\e[33m\" fun blue(): String => \"\"\" Blue text. \"\"\" \"\\e[34m\" fun magenta(): String => \"\"\" Magenta text. \"\"\" \"\\e[35m\" fun cyan(): String => \"\"\" Cyan text. \"\"\" \"\\e[36m\" fun grey(): String => \"\"\" Grey text. \"\"\" \"\\e[90m\" fun white(): String => \"\"\" White text. \"\"\" \"\\e[97m\" fun bright_red(): String => \"\"\" Bright red text. \"\"\" \"\\e[91m\" fun bright_green(): String => \"\"\" Bright green text. \"\"\" \"\\e[92m\" fun bright_yellow(): String => \"\"\" Bright yellow text. \"\"\" \"\\e[93m\" fun bright_blue(): String => \"\"\" Bright blue text. \"\"\" \"\\e[94m\" fun bright_magenta(): String => \"\"\" Bright magenta text. \"\"\" \"\\e[95m\" fun bright_cyan(): String => \"\"\" Bright cyan text. \"\"\" \"\\e[96m\" fun bright_grey(): String => \"\"\" Bright grey text. \"\"\" \"\\e[37m\" fun black_bg(): String => \"\"\" Black background. \"\"\" \"\\e[40m\" fun red_bg(): String => \"\"\" Red background. \"\"\" \"\\e[41m\" fun green_bg(): String => \"\"\" Green background. \"\"\" \"\\e[42m\" fun yellow_bg(): String => \"\"\" Yellow background. \"\"\" \"\\e[43m\" fun blue_bg(): String => \"\"\" Blue background. \"\"\" \"\\e[44m\" fun magenta_bg(): String => \"\"\" Magenta background. \"\"\" \"\\e[45m\" fun cyan_bg(): String => \"\"\" Cyan background. \"\"\" \"\\e[46m\" fun grey_bg(): String => \"\"\" Grey background. \"\"\" \"\\e[100m\" fun white_bg(): String => \"\"\" White background. \"\"\" \"\\e[107m\" fun bright_red_bg(): String => \"\"\" Bright red background. \"\"\" \"\\e[101m\" fun bright_green_bg(): String => \"\"\" Bright green background. \"\"\" \"\\e[102m\" fun bright_yellow_bg(): String => \"\"\" Bright yellow background. \"\"\" \"\\e[103m\" fun bright_blue_bg(): String => \"\"\" Bright blue background. \"\"\" \"\\e[104m\" fun bright_magenta_bg(): String => \"\"\" Bright magenta background. \"\"\" \"\\e[105m\" fun bright_cyan_bg(): String => \"\"\" Bright cyan background. \"\"\" \"\\e[106m\" fun bright_grey_bg(): String => \"\"\" Bright grey background. \"\"\" \"\\e[47m\" // the new ones fun cursor_save() : String => \"\"\" Save current cursor position \"\"\" \"\\e7\" fun cursor_restore() : String => \"\"\" Restore last saved cursor position \"\"\" \"\\e8\" fun cursor_hide() : String => \"\"\" Hide the terminal cursor \"\"\" \"\\e[?25l\" fun cursor_show() : String => \"\"\" Show the terminal cursor \"\"\" \"\\e[?25h\" fun switch_to_alt_screen() : String => \"\"\" Switch to the alternate screen buffer \"\"\" \"\\e[?1049h\" fun switch_to_normal_screen() : String => \"\"\" Switch back to the normal screen buffer \"\"\" \"\\e[?1049l\" fun mouse_enable() : String => \"\"\" Enable mouse input events \"\"\" \"\\e[?1000h\\e[?1002h\\e[?1003h\\e[?1015h\\e[?1006h\" fun mouse_disable() : String => \"\"\" Disable mouse input handling \"\"\" \"\\e[?1000l\\e[?1002l\\e[?1003l\\e[?1015l\\e[?1006l\" fun reset_color(): String => \"\"\" Resets foreground colour (but not the text styles) \"\"\" \"\\e[39m\" fun reset_color_bg(): String => \"\"\" Resets foreground colour (but not the text styles) \"\"\" \"\\e[49m\" fun color(fg: U8) : String => \"\"\" Select an 8-bit foreground (text) color. \"\"\" \"\\e[38;5;\" + fg.string() + \"m\" fun color_bg(bg: U8) : String => \"\"\" Select an 8-bit background color. \"\"\" \"\\e[48;5;\" + bg.string() + \"m\" fun faint(state: Bool = true): String => \"\"\" Lighten (faint) text. May not work on Windows. \"\"\" if state then \"\\e[2m\" else \"\\e[22m\" end fun italics(state: Bool = true): String => \"\"\" Italicize text. May not work on Windows. \"\"\" if state then \"\\e[3m\" else \"\\e[23m\" end fun invert(state: Bool = true): String => \"\"\" Invert foreground/background colour. May not work on Windows. \"\"\" if state then \"\\e[7m\" else \"\\e[27m\" end fun conceal(state: Bool = true): String => \"\"\" Conceal (hide) the text. May not work on Windows. \"\"\" if state then \"\\e[8m\" else \"\\e[28m\" end fun strikeout(state: Bool = true): String => \"\"\" Strike through text. May not work on Windows. \"\"\" if state then \"\\e[9m\" else \"\\e[29m\" end fun repeat_char(char : String val, times: U32) : String val => match times | 0 => \"\" | 1 => char else let str = String(10) str.>append(char) .>append(\"\\e[\") .>append((times-1).string()) .>append(\"b\") str.string() end primitive Term is TerminalEscapeCodes \"\"\" These strings can be embedded in text when writing to a StdStream to create a text-based UI. \"\"\"","title":"Term escape codes"},{"location":"src/termax/term_options/","text":"class val TermOptions let catch_ctrl_C : Bool let catch_ctrl_Z : Bool new val create(capture_ctrl_c: Bool = false, capture_ctrl_z: Bool = false) => \"\"\" Default options are backwards compatible. \"\"\" catch_ctrl_C = capture_ctrl_c catch_ctrl_Z = capture_ctrl_z","title":"Term options"},{"location":"src/termax/term_text_format/","text":"trait TerminalTextFormatting \"\"\" Defines convenient helper functions for visually formatting text/string-able content. \"\"\" fun hide(value: Stringable val) : String => \"\"\" Return the value as an escape-styled \"concealed\" string ready for the terminal. \"\"\" conceal(value) fun conceal(value: Stringable val) : String => \"\"\" Return the value as an escape-styled \"concealed\" string ready for the terminal. \"\"\" Term.conceal() + value.string() + Term.conceal(false) fun bold(value: Stringable val) : String => \"\"\" Return the value as an escape-styled \"bold\" string ready for the terminal. \"\"\" Term.bold() + value.string() + Term.bold(false) fun faint(value: Stringable val) : String => \"\"\" Return the value as an escape-styled \"faint\" (dim) string ready for the terminal. \"\"\" Term.faint() + value.string() + Term.faint(false) fun invert(value: Stringable val) : String => \"\"\" Return the value as an escape-styled string with foreground and background color inverted and ready for the terminal. \"\"\" Term.invert() + value.string() + Term.invert(false) fun italics(value: Stringable val) : String => \"\"\" Return the value as an escape-styled \"italicized\" string ready for the terminal. \"\"\" Term.italics() + value.string() + Term.italics(false) fun underline(value: Stringable val) : String => \"\"\" Return the value as an escape-styled \"underlined\" string ready for the terminal. \"\"\" Term.underline() + value.string() + Term.underline(false) fun strikeout(value: Stringable val) : String => \"\"\" Return the value as an escape-styled \"struck out\" string ready for the terminal. \"\"\" Term.strikeout() + value.string() + Term.strikeout(false) fun color(value: Stringable val, fg: U8, bg: (None|U8) = None) : String => \"\"\" Return the value escaped by 8-bit colour codes for foreground and (optional) background colours. \"\"\" match bg | let bgcolor : U8 => Term.color(bgcolor) + Term.color(fg) + value.string() + Term.reset_color() + Term.reset_color_bg() else Term.color(fg) + value.string() + Term.reset_color() end fun color_with(value: Stringable val, fg: String, bg: (None|String) = None) : String => \"\"\" Return the value surrounded by supplied escape codes for foreground and (optional) background colours. \"\"\" match bg | let bgcode : String => bgcode + fg + value.string() + Term.reset_color() + Term.reset_color_bg() else fg + value.string() + Term.reset_color() end primitive TermText is TerminalTextFormatting \"\"\" Use this primitive directly to format strings. \"\"\"","title":"Term text format"},{"location":"src/termax/terminal/","text":"use \"time\" use \"signals\" use @ioctl[I32](fx: I32, cmd: ULong, ...) if posix struct _TermSize var row: U16 = 0 var col: U16 = 0 var xpixel: U16 = 0 var ypixel: U16 = 0 primitive _EscapeNone primitive _EscapeStart primitive _EscapeSS3 primitive _EscapeCSI primitive _EscapeMod primitive _EscapeMouseStart primitive _EscapeMouseX primitive _EscapeMouseY type _EscapeState is ( _EscapeNone | _EscapeStart | _EscapeSS3 | _EscapeCSI | _EscapeMod | _EscapeMouseStart | _EscapeMouseX | _EscapeMouseY ) class _TermResizeNotify is SignalNotify let _term: Terminal tag new create(term: Terminal tag) => _term = term fun apply(times: U32): Bool => _term.size() true class _TermSigKeyNotify is SignalNotify let _term: Terminal tag let _input: U8 val new create(term: Terminal tag, input: U8 val) => _term = term _input = input fun apply(times: U32): Bool => _term.input(_input) true primitive _TIOCGWINSZ fun apply(): ULong => ifdef linux then 21523 elseif osx or bsd then 1074295912 else 0 end actor Terminal \"\"\" Handles terminal escape codes from stdin. \"\"\" let _options: TermOptions val let _timers: Timers var _timer: (Timer tag | None) = None let _notify: TerminalNotify let _source: DisposableActor var _escape: _EscapeState = _EscapeNone var _esc_num: U8 = 0 var _esc_mod: U8 = 0 var _esc_mouse_x: U32 = 0 var _esc_mouse_y: U32 = 0 embed _esc_buf: Array[U8] = Array[U8] var _closed: Bool = false new create( notify: TerminalNotify iso, source: DisposableActor, timers: Timers = Timers, options: TermOptions val = TermOptions) => \"\"\" Create a new ANSI term. \"\"\" _timers = timers _notify = consume notify _source = source _options = options ifdef not windows then SignalHandler(recover _TermResizeNotify(this) end, Sig.winch()) end // Catch and send Ctrl-C (3) and Ctrl-Z (26) as inputs if _options.catch_ctrl_C then SignalHandler(recover _TermSigKeyNotify(this, Key.ctrl_C()) end, Sig.int()) end if _options.catch_ctrl_Z then SignalHandler(recover _TermSigKeyNotify(this, Key.ctrl_Z()) end, Sig.tstp()) end _size() be apply(data: Array[U8] iso) => \"\"\" Receives input from stdin. \"\"\" if _closed then return end for c in (consume data).values() do match _escape | _EscapeNone => if c == 0x1B then _escape = _EscapeStart _esc_buf.push(0x1B) else _notify(this, c) end | _EscapeStart => _in_escape_start(c) | _EscapeSS3 => _in_escape_SS3(c) | _EscapeCSI => _in_escape_CSI(c) | _EscapeMod => _in_escape_modifier(c) | _EscapeMouseStart => _in_escape_mouse_start(c) | _EscapeMouseX => _in_escape_mouse_X(c) | _EscapeMouseY => _in_escape_mouse_Y(c) end end // If we are in the middle of an escape sequence, set a timer for 25 ms. // If it fires, we send the escape sequence as if it was normal data. if _escape isnt _EscapeNone then if _timer isnt None then try _timers.cancel(_timer as Timer tag) end end let t = recover object is TimerNotify let term: Terminal = this fun ref apply(timer: Timer, count: U64): Bool => term._timeout() false end end let timer = Timer(consume t, 25000000) _timer = timer _timers(consume timer) end fun ref _in_escape_start(c: U8) => match c | 'b' => // alt-left _esc_mod = 3 _left() | 'f' => // alt-right _esc_mod = 3 _right() | 'O' => _escape = _EscapeSS3 _esc_buf.push(c) | '[' => _escape = _EscapeCSI _esc_buf.push(c) else _esc_flush() end fun ref _in_escape_SS3(c: U8) => match c | 'A' => _up() | 'B' => _down() | 'C' => _right() | 'D' => _left() | 'H' => _home() | 'F' => _end() | 'P' => _fn_key(1) | 'Q' => _fn_key(2) | 'R' => _fn_key(3) | 'S' => _fn_key(4) else _esc_flush() end fun ref _in_escape_CSI(c: U8) => match c | 'A' => _up() | 'B' => _down() | 'C' => _right() | 'D' => _left() | 'H' => _home() | 'F' => _end() | '~' => _keypad() | '<' => _escape = _EscapeMouseStart | ';' => _escape = _EscapeMod | if (c >= '0') and (c <= '9') => // Escape number. _esc_num = (_esc_num * 10) + (c - '0') _esc_buf.push(c) else _esc_flush() end fun ref _in_escape_modifier(c: U8) => match c | 'A' => _up() | 'B' => _down() | 'C' => _right() | 'D' => _left() | 'H' => _home() | 'F' => _end() | '~' => _keypad() | if (c >= '0') and (c <= '9') => // Escape modifier. _esc_mod = (_esc_mod * 10) + (c - '0') _esc_buf.push(c) else _esc_flush() end fun ref _in_escape_mouse_start(c: U8) => match c | ';' => _escape = _EscapeMouseX | if (c >= '0') and (c <= '9') => // Escape number. _esc_num = (_esc_num * 10) + (c - '0') _esc_buf.push(c) else _esc_flush() end fun ref _in_escape_mouse_X(c: U8) => match c | ';' => _escape = _EscapeMouseY | if (c >= '0') and (c <= '9') => // mouse x coordinate _esc_mouse_x = (_esc_mouse_x * 10) + (c - '0').u32() _esc_buf.push(c) else _esc_flush() end fun ref _in_escape_mouse_Y(c: U8) => match c | 'M' => match (_esc_num and 0b11100000) | 0 => _mouse_press() | 32 => if (_esc_num and 0b11) == 0b11 then _mouse_move() else _mouse_drag() end | 64 => _mouse_wheel(where dir=(_esc_num and 1)) else _esc_flush() end | 'm' => if (_esc_num and 0b11100000) == 0 then _mouse_release() else _esc_flush() end | if (c >= '0') and (c <= '9') => // mouse y coordinate _esc_mouse_y = (_esc_mouse_y * 10) + (c - '0').u32() _esc_buf.push(c) else _esc_flush() end be prompt(value: String) => \"\"\" Pass a prompt along to the notifier. \"\"\" _notify.prompt(this, value) be size() => _size() be input(input': U8 val) => \"\"\" Pass the provided input to the notifier. \"\"\" _notify(this, input') fun ref _size() => \"\"\" Pass the window size to the notifier. \"\"\" let ws: _TermSize = _TermSize ifdef posix then @ioctl(0, _TIOCGWINSZ(), ws) // do error handling _notify.size(ws.row, ws.col) end be dispose() => \"\"\" Stop accepting input, inform the notifier we have closed, and dispose of our source. \"\"\" if not _closed then _esc_clear() _notify.closed() _source.dispose() _closed = true end be _timeout() => \"\"\" Our timer since receiving an ESC has expired. Send the buffered data as if it was not an escape sequence. \"\"\" _timer = None _esc_flush() fun ref _mouse_button() : MouseButton => match (_esc_num and 0b00000011) | 0b00 => LeftMouseButton | 0b01 => MiddleMouseButton | 0b10 => RightMouseButton else UnknownMouseButton end fun ref _mouse_wheel(dir: U8) => (let ctrl, let alt, let shift) = _mouse_kbd_mod() _notify.mouse_wheel( if dir == 0 then ScrollDown else ScrollUp end, ctrl, alt, shift, _esc_mouse_x, _esc_mouse_y) _esc_clear() fun ref _mouse_drag() => (let ctrl, let alt, let shift) = _mouse_kbd_mod() _notify.mouse_drag(_mouse_button(), ctrl, alt, shift, _esc_mouse_x, _esc_mouse_y) _esc_clear() fun ref _mouse_move() => (let ctrl, let alt, let shift) = _mouse_kbd_mod() _notify.mouse_move(ctrl, alt, shift, _esc_mouse_x, _esc_mouse_y) _esc_clear() fun ref _mouse_release() => (let ctrl, let alt, let shift) = _mouse_kbd_mod() _notify.mouse_release(_mouse_button(), ctrl, alt, shift, _esc_mouse_x, _esc_mouse_y) _esc_clear() fun ref _mouse_press() => (let ctrl, let alt, let shift) = _mouse_kbd_mod() _notify.mouse_press(_mouse_button(), ctrl, alt, shift, _esc_mouse_x, _esc_mouse_y) _esc_clear() fun ref _mouse_kbd_mod(): (Bool, Bool, Bool) => /* * Map the modifier bits in the mouse input code (_esc_num) to * a tuple of modifier booleans */ match (_esc_num and 0b00011100) // ctrl alt shift | 0b00000100 => (false, false, true) | 0b00001000 => (false, true, false) | 0b00010000 => (true, false, false) | 0b00001100 => (false, true, true) | 0b00010100 => (true, false, true) | 0b00011000 => (true, true, false) | 0b00011100 => (true, true, true) else (false, false, false) end fun ref _mod(): (Bool, Bool, Bool) => \"\"\" Set the modifier bools. \"\"\" let r = match _esc_mod | 2 => (false, false, true) | 3 => (false, true, false) | 4 => (false, true, true) | 5 => (true, false, false) | 6 => (true, false, true) | 7 => (true, true, false) | 8 => (true, true, true) else (false, false, false) end _esc_mod = 0 r fun ref _keypad() => \"\"\" An extended key. \"\"\" match _esc_num | 1 => _home() | 2 => _insert() | 3 => _delete() | 4 => _end() | 5 => _page_up() | 6 => _page_down() | 11 => _fn_key(1) | 12 => _fn_key(2) | 13 => _fn_key(3) | 14 => _fn_key(4) | 15 => _fn_key(5) | 17 => _fn_key(6) | 18 => _fn_key(7) | 19 => _fn_key(8) | 20 => _fn_key(9) | 21 => _fn_key(10) | 23 => _fn_key(11) | 24 => _fn_key(12) | 25 => _fn_key(13) | 26 => _fn_key(14) | 28 => _fn_key(15) | 29 => _fn_key(16) | 31 => _fn_key(17) | 32 => _fn_key(18) | 33 => _fn_key(19) | 34 => _fn_key(20) end fun ref _up() => \"\"\" Up arrow. \"\"\" (let ctrl, let alt, let shift) = _mod() _notify.up(ctrl, alt, shift) _esc_clear() fun ref _down() => \"\"\" Down arrow. \"\"\" (let ctrl, let alt, let shift) = _mod() _notify.down(ctrl, alt, shift) _esc_clear() fun ref _left() => \"\"\" Left arrow. \"\"\" (let ctrl, let alt, let shift) = _mod() _notify.left(ctrl, alt, shift) _esc_clear() fun ref _right() => \"\"\" Right arrow. \"\"\" (let ctrl, let alt, let shift) = _mod() _notify.right(ctrl, alt, shift) _esc_clear() fun ref _delete() => \"\"\" Delete key. \"\"\" (let ctrl, let alt, let shift) = _mod() _notify.delete(ctrl, alt, shift) _esc_clear() fun ref _insert() => \"\"\" Insert key. \"\"\" (let ctrl, let alt, let shift) = _mod() _notify.insert(ctrl, alt, shift) _esc_clear() fun ref _home() => \"\"\" Home key. \"\"\" (let ctrl, let alt, let shift) = _mod() _notify.home(ctrl, alt, shift) _esc_clear() fun ref _end() => \"\"\" End key. \"\"\" (let ctrl, let alt, let shift) = _mod() _notify.end_key(ctrl, alt, shift) _esc_clear() fun ref _page_up() => \"\"\" Page up key. \"\"\" (let ctrl, let alt, let shift) = _mod() _notify.page_up(ctrl, alt, shift) _esc_clear() fun ref _page_down() => \"\"\" Page down key. \"\"\" (let ctrl, let alt, let shift) = _mod() _notify.page_down(ctrl, alt, shift) _esc_clear() fun ref _fn_key(i: U8) => \"\"\" Function key. \"\"\" (let ctrl, let alt, let shift) = _mod() _notify.fn_key(i, ctrl, alt, shift) _esc_clear() fun ref _esc_flush() => \"\"\" Pass a partial or unrecognised escape sequence to the notifier. \"\"\" for c in _esc_buf.values() do _notify(this, c) end _esc_clear() fun ref _esc_clear() => \"\"\" Clear the escape state. \"\"\" if _timer isnt None then try _timers.cancel(_timer as Timer tag) end _timer = None end _escape = _EscapeNone _esc_buf.clear() _esc_num = 0 _esc_mod = 0 _esc_mouse_x = 0 _esc_mouse_y = 0","title":"Terminal"},{"location":"src/termax/terminal_notify/","text":"interface TerminalNotify \"\"\" Receive input from an Terminal. \"\"\" fun ref apply(term: Terminal ref, input: U8) => None fun ref up(ctrl: Bool, alt: Bool, shift: Bool) => None fun ref down(ctrl: Bool, alt: Bool, shift: Bool) => None fun ref left(ctrl: Bool, alt: Bool, shift: Bool) => None fun ref right(ctrl: Bool, alt: Bool, shift: Bool) => None fun ref delete(ctrl: Bool, alt: Bool, shift: Bool) => None fun ref insert(ctrl: Bool, alt: Bool, shift: Bool) => None fun ref home(ctrl: Bool, alt: Bool, shift: Bool) => None fun ref end_key(ctrl: Bool, alt: Bool, shift: Bool) => None fun ref page_up(ctrl: Bool, alt: Bool, shift: Bool) => None fun ref page_down(ctrl: Bool, alt: Bool, shift: Bool) => None fun ref fn_key(i: U8, ctrl: Bool, alt: Bool, shift: Bool) => None fun ref prompt(term: Terminal ref, value: String) => None fun ref size(rows: U16, cols: U16) => None fun ref closed() => None // the new ones fun ref mouse_release(button: MouseButton, ctrl: Bool, alt: Bool, shift: Bool, x: U32, y: U32) => None fun ref mouse_press(button: MouseButton, ctrl: Bool, alt: Bool, shift: Bool, x: U32, y: U32) => None fun ref mouse_move(ctrl: Bool, alt: Bool, shift: Bool, x: U32, y: U32) => None fun ref mouse_drag(button: MouseButton, ctrl: Bool, alt: Bool, shift: Bool, x: U32, y: U32) => None fun ref mouse_wheel(direction: ScrollDirection, ctrl: Bool, alt: Bool, shift: Bool, x: U32, y: U32) => None","title":"Terminal notify"}]}